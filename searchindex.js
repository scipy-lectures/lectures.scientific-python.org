Search.setIndex({"docnames": ["AUTHORS", "CHANGES", "CONTRIBUTING", "LICENSE", "about", "advanced/advanced_numpy/auto_examples/index", "advanced/advanced_numpy/auto_examples/plot_maskedstats", "advanced/advanced_numpy/auto_examples/sg_execution_times", "advanced/advanced_numpy/index", "advanced/advanced_python/index", "advanced/debugging/index", "advanced/image_processing/auto_examples/index", "advanced/image_processing/auto_examples/plot_GMM", "advanced/image_processing/auto_examples/plot_block_mean", "advanced/image_processing/auto_examples/plot_blur", "advanced/image_processing/auto_examples/plot_clean_morpho", "advanced/image_processing/auto_examples/plot_denoising", "advanced/image_processing/auto_examples/plot_display_face", "advanced/image_processing/auto_examples/plot_face", "advanced/image_processing/auto_examples/plot_face_denoise", "advanced/image_processing/auto_examples/plot_face_tv_denoise", "advanced/image_processing/auto_examples/plot_find_edges", "advanced/image_processing/auto_examples/plot_find_object", "advanced/image_processing/auto_examples/plot_geom_face", "advanced/image_processing/auto_examples/plot_granulo", "advanced/image_processing/auto_examples/plot_greyscale_dilation", "advanced/image_processing/auto_examples/plot_histo_segmentation", "advanced/image_processing/auto_examples/plot_interpolation_face", "advanced/image_processing/auto_examples/plot_measure_data", "advanced/image_processing/auto_examples/plot_numpy_array", "advanced/image_processing/auto_examples/plot_propagation", "advanced/image_processing/auto_examples/plot_radial_mean", "advanced/image_processing/auto_examples/plot_sharpen", "advanced/image_processing/auto_examples/plot_spectral_clustering", "advanced/image_processing/auto_examples/plot_synthetic_data", "advanced/image_processing/auto_examples/plot_watershed_segmentation", "advanced/image_processing/auto_examples/sg_execution_times", "advanced/image_processing/index", "advanced/index", "advanced/interfacing_with_c/interfacing_with_c", "advanced/mathematical_optimization/auto_examples/index", "advanced/mathematical_optimization/auto_examples/plot_1d_optim", "advanced/mathematical_optimization/auto_examples/plot_compare_optimizers", "advanced/mathematical_optimization/auto_examples/plot_constraints", "advanced/mathematical_optimization/auto_examples/plot_convex", "advanced/mathematical_optimization/auto_examples/plot_curve_fitting", "advanced/mathematical_optimization/auto_examples/plot_exercise_flat_minimum", "advanced/mathematical_optimization/auto_examples/plot_exercise_ill_conditioned", "advanced/mathematical_optimization/auto_examples/plot_gradient_descent", "advanced/mathematical_optimization/auto_examples/plot_noisy", "advanced/mathematical_optimization/auto_examples/plot_non_bounds_constraints", "advanced/mathematical_optimization/auto_examples/plot_smooth", "advanced/mathematical_optimization/auto_examples/sg_execution_times", "advanced/mathematical_optimization/index", "advanced/optimizing/index", "advanced/scipy_sparse/bsr_matrix", "advanced/scipy_sparse/coo_matrix", "advanced/scipy_sparse/csc_matrix", "advanced/scipy_sparse/csr_matrix", "advanced/scipy_sparse/dia_matrix", "advanced/scipy_sparse/dok_matrix", "advanced/scipy_sparse/index", "advanced/scipy_sparse/introduction", "advanced/scipy_sparse/lil_matrix", "advanced/scipy_sparse/other_packages", "advanced/scipy_sparse/solvers", "advanced/scipy_sparse/storage_schemes", "guide/auto_examples/index", "guide/auto_examples/plot_simple", "guide/auto_examples/sg_execution_times", "guide/index", "includes/big_toc_css", "includes/bigger_toc_css", "index", "intro/help/help", "intro/index", "intro/intro", "intro/language/basic_types", "intro/language/control_flow", "intro/language/exceptions", "intro/language/first_steps", "intro/language/functions", "intro/language/io", "intro/language/oop", "intro/language/python_language", "intro/language/reusing_code", "intro/language/standard_library", "intro/matplotlib/auto_examples/exercises/index", "intro/matplotlib/auto_examples/exercises/plot_exercise_1", "intro/matplotlib/auto_examples/exercises/plot_exercise_10", "intro/matplotlib/auto_examples/exercises/plot_exercise_2", "intro/matplotlib/auto_examples/exercises/plot_exercise_3", "intro/matplotlib/auto_examples/exercises/plot_exercise_4", "intro/matplotlib/auto_examples/exercises/plot_exercise_5", "intro/matplotlib/auto_examples/exercises/plot_exercise_6", "intro/matplotlib/auto_examples/exercises/plot_exercise_7", "intro/matplotlib/auto_examples/exercises/plot_exercise_8", "intro/matplotlib/auto_examples/exercises/plot_exercise_9", "intro/matplotlib/auto_examples/exercises/sg_execution_times", "intro/matplotlib/auto_examples/index", "intro/matplotlib/auto_examples/options/index", "intro/matplotlib/auto_examples/options/plot_aliased", "intro/matplotlib/auto_examples/options/plot_alpha", "intro/matplotlib/auto_examples/options/plot_antialiased", "intro/matplotlib/auto_examples/options/plot_color", "intro/matplotlib/auto_examples/options/plot_colormaps", "intro/matplotlib/auto_examples/options/plot_dash_capstyle", "intro/matplotlib/auto_examples/options/plot_dash_joinstyle", "intro/matplotlib/auto_examples/options/plot_linestyles", "intro/matplotlib/auto_examples/options/plot_linewidth", "intro/matplotlib/auto_examples/options/plot_markers", "intro/matplotlib/auto_examples/options/plot_mec", "intro/matplotlib/auto_examples/options/plot_mew", "intro/matplotlib/auto_examples/options/plot_mfc", "intro/matplotlib/auto_examples/options/plot_ms", "intro/matplotlib/auto_examples/options/plot_solid_capstyle", "intro/matplotlib/auto_examples/options/plot_solid_joinstyle", "intro/matplotlib/auto_examples/options/plot_ticks", "intro/matplotlib/auto_examples/options/sg_execution_times", "intro/matplotlib/auto_examples/plot_axes", "intro/matplotlib/auto_examples/plot_axes-2", "intro/matplotlib/auto_examples/plot_bad", "intro/matplotlib/auto_examples/plot_bar", "intro/matplotlib/auto_examples/plot_contour", "intro/matplotlib/auto_examples/plot_good", "intro/matplotlib/auto_examples/plot_grid", "intro/matplotlib/auto_examples/plot_gridspec", "intro/matplotlib/auto_examples/plot_imshow", "intro/matplotlib/auto_examples/plot_multiplot", "intro/matplotlib/auto_examples/plot_pie", "intro/matplotlib/auto_examples/plot_plot", "intro/matplotlib/auto_examples/plot_plot3d", "intro/matplotlib/auto_examples/plot_plot3d-2", "intro/matplotlib/auto_examples/plot_polar", "intro/matplotlib/auto_examples/plot_quiver", "intro/matplotlib/auto_examples/plot_scatter", "intro/matplotlib/auto_examples/plot_subplot-grid", "intro/matplotlib/auto_examples/plot_subplot-horizontal", "intro/matplotlib/auto_examples/plot_subplot-vertical", "intro/matplotlib/auto_examples/plot_text", "intro/matplotlib/auto_examples/plot_ugly", "intro/matplotlib/auto_examples/pretty_plots/index", "intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext", "intro/matplotlib/auto_examples/pretty_plots/plot_text_ext", "intro/matplotlib/auto_examples/pretty_plots/sg_execution_times", "intro/matplotlib/auto_examples/sg_execution_times", "intro/matplotlib/index", "intro/numpy/advanced_operations", "intro/numpy/array_object", "intro/numpy/auto_examples/index", "intro/numpy/auto_examples/plot_basic1dplot", "intro/numpy/auto_examples/plot_basic2dplot", "intro/numpy/auto_examples/plot_chebyfit", "intro/numpy/auto_examples/plot_distances", "intro/numpy/auto_examples/plot_elephant", "intro/numpy/auto_examples/plot_mandelbrot", "intro/numpy/auto_examples/plot_polyfit", "intro/numpy/auto_examples/plot_populations", "intro/numpy/auto_examples/plot_randomwalk", "intro/numpy/auto_examples/sg_execution_times", "intro/numpy/elaborate_arrays", "intro/numpy/exercises", "intro/numpy/gallery", "intro/numpy/index", "intro/numpy/operations", "intro/scipy/auto_examples/index", "intro/scipy/auto_examples/plot_2d_minimization", "intro/scipy/auto_examples/plot_connect_measurements", "intro/scipy/auto_examples/plot_curve_fit", "intro/scipy/auto_examples/plot_detrend", "intro/scipy/auto_examples/plot_fftpack", "intro/scipy/auto_examples/plot_image_filters", "intro/scipy/auto_examples/plot_image_transform", "intro/scipy/auto_examples/plot_interpolation", "intro/scipy/auto_examples/plot_mathematical_morpho", "intro/scipy/auto_examples/plot_normal_distribution", "intro/scipy/auto_examples/plot_optimize_example1", "intro/scipy/auto_examples/plot_optimize_example2", "intro/scipy/auto_examples/plot_resample", "intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass", "intro/scipy/auto_examples/plot_solve_ivp_simple", "intro/scipy/auto_examples/plot_spectrogram", "intro/scipy/auto_examples/plot_t_test", "intro/scipy/auto_examples/sg_execution_times", "intro/scipy/auto_examples/solutions/index", "intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data", "intro/scipy/auto_examples/solutions/plot_fft_image_denoise", "intro/scipy/auto_examples/solutions/plot_image_blur", "intro/scipy/auto_examples/solutions/plot_periodicity_finder", "intro/scipy/auto_examples/solutions/sg_execution_times", "intro/scipy/image_processing/image_processing", "intro/scipy/index", "intro/scipy/solutions", "intro/scipy/summary-exercises/answers_image_processing", "intro/scipy/summary-exercises/auto_examples/index", "intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction", "intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit", "intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima", "intro/scipy/summary-exercises/auto_examples/sg_execution_times", "intro/scipy/summary-exercises/image-processing", "intro/scipy/summary-exercises/optimize-fit", "intro/scipy/summary-exercises/stats-interpolate", "packages/index", "packages/scikit-image/auto_examples/index", "packages/scikit-image/auto_examples/plot_boundaries", "packages/scikit-image/auto_examples/plot_camera", "packages/scikit-image/auto_examples/plot_camera_uint", "packages/scikit-image/auto_examples/plot_check", "packages/scikit-image/auto_examples/plot_equalize_hist", "packages/scikit-image/auto_examples/plot_features", "packages/scikit-image/auto_examples/plot_filter_coins", "packages/scikit-image/auto_examples/plot_labels", "packages/scikit-image/auto_examples/plot_segmentations", "packages/scikit-image/auto_examples/plot_sobel", "packages/scikit-image/auto_examples/plot_threshold", "packages/scikit-image/auto_examples/sg_execution_times", "packages/scikit-image/index", "packages/scikit-learn/auto_examples/index", "packages/scikit-learn/auto_examples/plot_ML_flow_chart", "packages/scikit-learn/auto_examples/plot_bias_variance", "packages/scikit-learn/auto_examples/plot_california_prediction", "packages/scikit-learn/auto_examples/plot_compare_classifiers", "packages/scikit-learn/auto_examples/plot_digits_simple_classif", "packages/scikit-learn/auto_examples/plot_eigenfaces", "packages/scikit-learn/auto_examples/plot_iris_knn", "packages/scikit-learn/auto_examples/plot_iris_scatter", "packages/scikit-learn/auto_examples/plot_linear_model_cv", "packages/scikit-learn/auto_examples/plot_linear_regression", "packages/scikit-learn/auto_examples/plot_measuring_performance", "packages/scikit-learn/auto_examples/plot_pca", "packages/scikit-learn/auto_examples/plot_polynomial_regression", "packages/scikit-learn/auto_examples/plot_separator", "packages/scikit-learn/auto_examples/plot_svm_non_linear", "packages/scikit-learn/auto_examples/plot_tsne", "packages/scikit-learn/auto_examples/plot_variance_linear_regr", "packages/scikit-learn/auto_examples/sg_execution_times", "packages/scikit-learn/index", "packages/statistics/auto_examples/index", "packages/statistics/auto_examples/plot_airfare", "packages/statistics/auto_examples/plot_iris_analysis", "packages/statistics/auto_examples/plot_paired_boxplots", "packages/statistics/auto_examples/plot_pandas", "packages/statistics/auto_examples/plot_regression", "packages/statistics/auto_examples/plot_regression_3d", "packages/statistics/auto_examples/plot_wage_data", "packages/statistics/auto_examples/plot_wage_education_gender", "packages/statistics/auto_examples/sg_execution_times", "packages/statistics/auto_examples/solutions/index", "packages/statistics/auto_examples/solutions/plot_brain_size", "packages/statistics/auto_examples/solutions/sg_execution_times", "packages/statistics/index", "packages/sympy", "preface", "sg_execution_times"], "filenames": ["AUTHORS.rst", "CHANGES.rst", "CONTRIBUTING.rst", "LICENSE.rst", "about.rst", "advanced/advanced_numpy/auto_examples/index.rst", "advanced/advanced_numpy/auto_examples/plot_maskedstats.rst", "advanced/advanced_numpy/auto_examples/sg_execution_times.rst", "advanced/advanced_numpy/index.rst", "advanced/advanced_python/index.rst", "advanced/debugging/index.rst", "advanced/image_processing/auto_examples/index.rst", "advanced/image_processing/auto_examples/plot_GMM.rst", "advanced/image_processing/auto_examples/plot_block_mean.rst", "advanced/image_processing/auto_examples/plot_blur.rst", "advanced/image_processing/auto_examples/plot_clean_morpho.rst", "advanced/image_processing/auto_examples/plot_denoising.rst", "advanced/image_processing/auto_examples/plot_display_face.rst", "advanced/image_processing/auto_examples/plot_face.rst", "advanced/image_processing/auto_examples/plot_face_denoise.rst", "advanced/image_processing/auto_examples/plot_face_tv_denoise.rst", "advanced/image_processing/auto_examples/plot_find_edges.rst", "advanced/image_processing/auto_examples/plot_find_object.rst", "advanced/image_processing/auto_examples/plot_geom_face.rst", "advanced/image_processing/auto_examples/plot_granulo.rst", "advanced/image_processing/auto_examples/plot_greyscale_dilation.rst", "advanced/image_processing/auto_examples/plot_histo_segmentation.rst", "advanced/image_processing/auto_examples/plot_interpolation_face.rst", "advanced/image_processing/auto_examples/plot_measure_data.rst", "advanced/image_processing/auto_examples/plot_numpy_array.rst", "advanced/image_processing/auto_examples/plot_propagation.rst", "advanced/image_processing/auto_examples/plot_radial_mean.rst", "advanced/image_processing/auto_examples/plot_sharpen.rst", "advanced/image_processing/auto_examples/plot_spectral_clustering.rst", "advanced/image_processing/auto_examples/plot_synthetic_data.rst", "advanced/image_processing/auto_examples/plot_watershed_segmentation.rst", "advanced/image_processing/auto_examples/sg_execution_times.rst", "advanced/image_processing/index.rst", "advanced/index.rst", "advanced/interfacing_with_c/interfacing_with_c.rst", "advanced/mathematical_optimization/auto_examples/index.rst", "advanced/mathematical_optimization/auto_examples/plot_1d_optim.rst", "advanced/mathematical_optimization/auto_examples/plot_compare_optimizers.rst", "advanced/mathematical_optimization/auto_examples/plot_constraints.rst", "advanced/mathematical_optimization/auto_examples/plot_convex.rst", "advanced/mathematical_optimization/auto_examples/plot_curve_fitting.rst", "advanced/mathematical_optimization/auto_examples/plot_exercise_flat_minimum.rst", "advanced/mathematical_optimization/auto_examples/plot_exercise_ill_conditioned.rst", "advanced/mathematical_optimization/auto_examples/plot_gradient_descent.rst", "advanced/mathematical_optimization/auto_examples/plot_noisy.rst", "advanced/mathematical_optimization/auto_examples/plot_non_bounds_constraints.rst", "advanced/mathematical_optimization/auto_examples/plot_smooth.rst", "advanced/mathematical_optimization/auto_examples/sg_execution_times.rst", "advanced/mathematical_optimization/index.rst", "advanced/optimizing/index.rst", "advanced/scipy_sparse/bsr_matrix.rst", "advanced/scipy_sparse/coo_matrix.rst", "advanced/scipy_sparse/csc_matrix.rst", "advanced/scipy_sparse/csr_matrix.rst", "advanced/scipy_sparse/dia_matrix.rst", "advanced/scipy_sparse/dok_matrix.rst", "advanced/scipy_sparse/index.rst", "advanced/scipy_sparse/introduction.rst", "advanced/scipy_sparse/lil_matrix.rst", "advanced/scipy_sparse/other_packages.rst", "advanced/scipy_sparse/solvers.rst", "advanced/scipy_sparse/storage_schemes.rst", "guide/auto_examples/index.rst", "guide/auto_examples/plot_simple.rst", "guide/auto_examples/sg_execution_times.rst", "guide/index.rst", "includes/big_toc_css.rst", "includes/bigger_toc_css.rst", "index.rst", "intro/help/help.rst", "intro/index.rst", "intro/intro.rst", "intro/language/basic_types.rst", "intro/language/control_flow.rst", "intro/language/exceptions.rst", "intro/language/first_steps.rst", "intro/language/functions.rst", "intro/language/io.rst", "intro/language/oop.rst", "intro/language/python_language.rst", "intro/language/reusing_code.rst", "intro/language/standard_library.rst", "intro/matplotlib/auto_examples/exercises/index.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst", "intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst", "intro/matplotlib/auto_examples/exercises/sg_execution_times.rst", "intro/matplotlib/auto_examples/index.rst", "intro/matplotlib/auto_examples/options/index.rst", "intro/matplotlib/auto_examples/options/plot_aliased.rst", "intro/matplotlib/auto_examples/options/plot_alpha.rst", "intro/matplotlib/auto_examples/options/plot_antialiased.rst", "intro/matplotlib/auto_examples/options/plot_color.rst", "intro/matplotlib/auto_examples/options/plot_colormaps.rst", "intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst", "intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst", "intro/matplotlib/auto_examples/options/plot_linestyles.rst", "intro/matplotlib/auto_examples/options/plot_linewidth.rst", "intro/matplotlib/auto_examples/options/plot_markers.rst", "intro/matplotlib/auto_examples/options/plot_mec.rst", "intro/matplotlib/auto_examples/options/plot_mew.rst", "intro/matplotlib/auto_examples/options/plot_mfc.rst", "intro/matplotlib/auto_examples/options/plot_ms.rst", "intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst", "intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst", "intro/matplotlib/auto_examples/options/plot_ticks.rst", "intro/matplotlib/auto_examples/options/sg_execution_times.rst", "intro/matplotlib/auto_examples/plot_axes.rst", "intro/matplotlib/auto_examples/plot_axes-2.rst", "intro/matplotlib/auto_examples/plot_bad.rst", "intro/matplotlib/auto_examples/plot_bar.rst", "intro/matplotlib/auto_examples/plot_contour.rst", "intro/matplotlib/auto_examples/plot_good.rst", "intro/matplotlib/auto_examples/plot_grid.rst", "intro/matplotlib/auto_examples/plot_gridspec.rst", "intro/matplotlib/auto_examples/plot_imshow.rst", "intro/matplotlib/auto_examples/plot_multiplot.rst", "intro/matplotlib/auto_examples/plot_pie.rst", "intro/matplotlib/auto_examples/plot_plot.rst", "intro/matplotlib/auto_examples/plot_plot3d.rst", "intro/matplotlib/auto_examples/plot_plot3d-2.rst", "intro/matplotlib/auto_examples/plot_polar.rst", "intro/matplotlib/auto_examples/plot_quiver.rst", "intro/matplotlib/auto_examples/plot_scatter.rst", "intro/matplotlib/auto_examples/plot_subplot-grid.rst", "intro/matplotlib/auto_examples/plot_subplot-horizontal.rst", "intro/matplotlib/auto_examples/plot_subplot-vertical.rst", "intro/matplotlib/auto_examples/plot_text.rst", "intro/matplotlib/auto_examples/plot_ugly.rst", "intro/matplotlib/auto_examples/pretty_plots/index.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst", "intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst", "intro/matplotlib/auto_examples/sg_execution_times.rst", "intro/matplotlib/index.rst", "intro/numpy/advanced_operations.rst", "intro/numpy/array_object.rst", "intro/numpy/auto_examples/index.rst", "intro/numpy/auto_examples/plot_basic1dplot.rst", "intro/numpy/auto_examples/plot_basic2dplot.rst", "intro/numpy/auto_examples/plot_chebyfit.rst", "intro/numpy/auto_examples/plot_distances.rst", "intro/numpy/auto_examples/plot_elephant.rst", "intro/numpy/auto_examples/plot_mandelbrot.rst", "intro/numpy/auto_examples/plot_polyfit.rst", "intro/numpy/auto_examples/plot_populations.rst", "intro/numpy/auto_examples/plot_randomwalk.rst", "intro/numpy/auto_examples/sg_execution_times.rst", "intro/numpy/elaborate_arrays.rst", "intro/numpy/exercises.rst", "intro/numpy/gallery.rst", "intro/numpy/index.rst", "intro/numpy/operations.rst", "intro/scipy/auto_examples/index.rst", "intro/scipy/auto_examples/plot_2d_minimization.rst", "intro/scipy/auto_examples/plot_connect_measurements.rst", "intro/scipy/auto_examples/plot_curve_fit.rst", "intro/scipy/auto_examples/plot_detrend.rst", "intro/scipy/auto_examples/plot_fftpack.rst", "intro/scipy/auto_examples/plot_image_filters.rst", "intro/scipy/auto_examples/plot_image_transform.rst", "intro/scipy/auto_examples/plot_interpolation.rst", "intro/scipy/auto_examples/plot_mathematical_morpho.rst", "intro/scipy/auto_examples/plot_normal_distribution.rst", "intro/scipy/auto_examples/plot_optimize_example1.rst", "intro/scipy/auto_examples/plot_optimize_example2.rst", "intro/scipy/auto_examples/plot_resample.rst", "intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst", "intro/scipy/auto_examples/plot_solve_ivp_simple.rst", "intro/scipy/auto_examples/plot_spectrogram.rst", "intro/scipy/auto_examples/plot_t_test.rst", "intro/scipy/auto_examples/sg_execution_times.rst", "intro/scipy/auto_examples/solutions/index.rst", "intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst", "intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst", "intro/scipy/auto_examples/solutions/plot_image_blur.rst", "intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst", "intro/scipy/auto_examples/solutions/sg_execution_times.rst", "intro/scipy/image_processing/image_processing.rst", "intro/scipy/index.rst", "intro/scipy/solutions.rst", "intro/scipy/summary-exercises/answers_image_processing.rst", "intro/scipy/summary-exercises/auto_examples/index.rst", "intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst", "intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst", "intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst", "intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst", "intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst", "intro/scipy/summary-exercises/image-processing.rst", "intro/scipy/summary-exercises/optimize-fit.rst", "intro/scipy/summary-exercises/stats-interpolate.rst", "packages/index.rst", "packages/scikit-image/auto_examples/index.rst", "packages/scikit-image/auto_examples/plot_boundaries.rst", "packages/scikit-image/auto_examples/plot_camera.rst", "packages/scikit-image/auto_examples/plot_camera_uint.rst", "packages/scikit-image/auto_examples/plot_check.rst", "packages/scikit-image/auto_examples/plot_equalize_hist.rst", "packages/scikit-image/auto_examples/plot_features.rst", "packages/scikit-image/auto_examples/plot_filter_coins.rst", "packages/scikit-image/auto_examples/plot_labels.rst", "packages/scikit-image/auto_examples/plot_segmentations.rst", "packages/scikit-image/auto_examples/plot_sobel.rst", "packages/scikit-image/auto_examples/plot_threshold.rst", "packages/scikit-image/auto_examples/sg_execution_times.rst", "packages/scikit-image/index.rst", "packages/scikit-learn/auto_examples/index.rst", "packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst", "packages/scikit-learn/auto_examples/plot_bias_variance.rst", "packages/scikit-learn/auto_examples/plot_california_prediction.rst", "packages/scikit-learn/auto_examples/plot_compare_classifiers.rst", "packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst", "packages/scikit-learn/auto_examples/plot_eigenfaces.rst", "packages/scikit-learn/auto_examples/plot_iris_knn.rst", "packages/scikit-learn/auto_examples/plot_iris_scatter.rst", "packages/scikit-learn/auto_examples/plot_linear_model_cv.rst", "packages/scikit-learn/auto_examples/plot_linear_regression.rst", "packages/scikit-learn/auto_examples/plot_measuring_performance.rst", "packages/scikit-learn/auto_examples/plot_pca.rst", "packages/scikit-learn/auto_examples/plot_polynomial_regression.rst", "packages/scikit-learn/auto_examples/plot_separator.rst", "packages/scikit-learn/auto_examples/plot_svm_non_linear.rst", "packages/scikit-learn/auto_examples/plot_tsne.rst", "packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst", "packages/scikit-learn/auto_examples/sg_execution_times.rst", "packages/scikit-learn/index.rst", "packages/statistics/auto_examples/index.rst", "packages/statistics/auto_examples/plot_airfare.rst", "packages/statistics/auto_examples/plot_iris_analysis.rst", "packages/statistics/auto_examples/plot_paired_boxplots.rst", "packages/statistics/auto_examples/plot_pandas.rst", "packages/statistics/auto_examples/plot_regression.rst", "packages/statistics/auto_examples/plot_regression_3d.rst", "packages/statistics/auto_examples/plot_wage_data.rst", "packages/statistics/auto_examples/plot_wage_education_gender.rst", "packages/statistics/auto_examples/sg_execution_times.rst", "packages/statistics/auto_examples/solutions/index.rst", "packages/statistics/auto_examples/solutions/plot_brain_size.rst", "packages/statistics/auto_examples/solutions/sg_execution_times.rst", "packages/statistics/index.rst", "packages/sympy.rst", "preface.rst", "sg_execution_times.rst"], "titles": ["<span class=\"section-number\">4.1.1. </span>Authors", "What\u2019s new", "Contributing", "License", "<span class=\"section-number\">4. </span>About the Scientific Python Lectures", "Examples for the advanced NumPy chapter", "Example: Masked statistics", "Computation times", "<span class=\"section-number\">2.2. </span>Advanced NumPy", "<span class=\"section-number\">2.1. </span>Advanced Python Constructs", "<span class=\"section-number\">2.3. </span>Debugging code", "Examples for the image processing chapter", "<span class=\"section-number\">2.6.8.21. </span>Segmentation with Gaussian mixture models", "<span class=\"section-number\">2.6.8.3. </span>Plot the block mean of an image", "<span class=\"section-number\">2.6.8.8. </span>Blurring of images", "<span class=\"section-number\">2.6.8.20. </span>Cleaning segmentation with mathematical morphology", "<span class=\"section-number\">2.6.8.16. </span>Denoising an image with the median filter", "<span class=\"section-number\">2.6.8.6. </span>Display a Raccoon Face", "<span class=\"section-number\">2.6.8.1. </span>Displaying a Raccoon Face", "<span class=\"section-number\">2.6.8.11. </span>Image denoising", "<span class=\"section-number\">2.6.8.15. </span>Total Variation denoising", "<span class=\"section-number\">2.6.8.19. </span>Finding edges with Sobel filters", "<span class=\"section-number\">2.6.8.13. </span>Find the bounding box of an object", "<span class=\"section-number\">2.6.8.12. </span>Geometrical transformations", "<span class=\"section-number\">2.6.8.23. </span>Granulometry", "<span class=\"section-number\">2.6.8.18. </span>Greyscale dilation", "<span class=\"section-number\">2.6.8.17. </span>Histogram segmentation", "<span class=\"section-number\">2.6.8.2. </span>Image interpolation", "<span class=\"section-number\">2.6.8.14. </span>Measurements from images", "<span class=\"section-number\">2.6.8.4. </span>Image manipulation and NumPy arrays", "<span class=\"section-number\">2.6.8.10. </span>Opening, erosion, and propagation", "<span class=\"section-number\">2.6.8.5. </span>Radial mean", "<span class=\"section-number\">2.6.8.7. </span>Image sharpening", "<span class=\"section-number\">2.6.8.24. </span>Segmentation with spectral clustering", "<span class=\"section-number\">2.6.8.9. </span>Synthetic data", "<span class=\"section-number\">2.6.8.22. </span>Watershed segmentation", "Computation times", "<span class=\"section-number\">2.6. </span>Image manipulation and processing using NumPy and SciPy", "<span class=\"section-number\">2. </span>Advanced topics", "<span class=\"section-number\">2.8. </span>Interfacing with C", "Examples for the mathematical optimization chapter", "<span class=\"section-number\">2.7.4.7. </span>Brent\u2019s method", "<span class=\"section-number\">2.7.4.9. </span>Plotting the comparison of optimizers", "<span class=\"section-number\">2.7.4.8. </span>Constraint optimization: visualizing the geometry", "<span class=\"section-number\">2.7.4.4. </span>Convex function", "<span class=\"section-number\">2.7.4.3. </span>Curve fitting", "<span class=\"section-number\">2.7.4.5. </span>Finding a minimum in a flat neighborhood", "<span class=\"section-number\">2.7.4.10. </span>Alternating optimization", "<span class=\"section-number\">2.7.4.11. </span>Gradient descent", "<span class=\"section-number\">2.7.4.1. </span>Noisy optimization problem", "<span class=\"section-number\">2.7.4.6. </span>Optimization with constraints", "<span class=\"section-number\">2.7.4.2. </span>Smooth vs non-smooth", "Computation times", "<span class=\"section-number\">2.7. </span>Mathematical optimization: finding minima of functions", "<span class=\"section-number\">2.4. </span>Optimizing code", "Block Compressed Row Format (BSR)", "Coordinate Format (COO)", "Compressed Sparse Column Format (CSC)", "Compressed Sparse Row Format (CSR)", "Diagonal Format (DIA)", "Dictionary of Keys Format (DOK)", "<span class=\"section-number\">2.5. </span>Sparse Arrays in SciPy", "<span class=\"section-number\">2.5.1. </span>Introduction", "List of Lists Format (LIL)", "<span class=\"section-number\">2.5.4. </span>Other Interesting Packages", "<span class=\"section-number\">2.5.3. </span>Linear System Solvers", "<span class=\"section-number\">2.5.2. </span>Storage Schemes", "Examples for the contribution guide", "A simple example", "Computation times", "How to contribute", "&lt;no title&gt;", "&lt;no title&gt;", "Scientific Python Lectures", "<span class=\"section-number\">1.6. </span>Getting help and finding documentation", "<span class=\"section-number\">1. </span>Getting started with Python for science", "<span class=\"section-number\">1.1. </span>Python scientific computing ecosystem", "<span class=\"section-number\">1.2.2. </span>Basic types", "<span class=\"section-number\">1.2.3. </span>Control Flow", "<span class=\"section-number\">1.2.8. </span>Exception handling in Python", "<span class=\"section-number\">1.2.1. </span>First steps", "<span class=\"section-number\">1.2.4. </span>Defining functions", "<span class=\"section-number\">1.2.6. </span>Input and Output", "<span class=\"section-number\">1.2.9. </span>Object-oriented programming (OOP)", "<span class=\"section-number\">1.2. </span>The Python language", "<span class=\"section-number\">1.2.5. </span>Reusing code: scripts and modules", "<span class=\"section-number\">1.2.7. </span>Standard Library", "Code for the chapter\u2019s exercises", "Exercise 1", "Exercise", "Exercise 2", "Exercise 3", "Exercise 4", "Exercise 5", "Exercise 6", "Exercise 7", "Exercise 8", "Exercise 9", "Computation times", "Code samples for Matplotlib", "Example demoing choices for an option", "Aliased versus anti-aliased", "Alpha: transparency", "Aliased versus anti-aliased", "The colors matplotlib line plots", "Colormaps", "Dash capstyle", "Dash join style", "Linestyles", "Linewidth", "Markers", "Marker edge color", "Marker edge width", "Marker face color", "Marker size", "Solid cap style", "Solid joint style", "Locators for tick on axis", "Computation times", "Simple axes example", "Axes", "A simple plotting example", "Bar plots", "Displaying the contours of a function", "A simple, good-looking plot", "Grid", "GridSpec", "Imshow elaborate", "Subplots", "Pie chart", "Plot and filled plots", "3D plotting", "3D plotting", "Plotting in polar coordinates", "Plotting a vector field: quiver", "Plotting a scatter of points", "Subplot grid", "Horizontal arrangement of subplots", "Subplot plot arrangement vertical", "Demo text printing", "A example of plotting not quite right", "Code generating the summary figures with a title", "Bar plot advanced", "Boxplot with matplotlib", "Display the contours of a function", "Grid elaborate", "Imshow demo", "Multiple plots vignette", "Pie chart vignette", "3D plotting vignette", "Plot example vignette", "Plotting in polar, decorated", "Plotting quiver decorated", "Plot scatter decorated", "Text printing decorated", "Computation times", "Computation times", "<span class=\"section-number\">1.4. </span>Matplotlib: plotting", "<span class=\"section-number\">1.3.4. </span>Advanced operations", "<span class=\"section-number\">1.3.1. </span>The NumPy array object", "Full code examples for the numpy chapter", "1D plotting", "2D plotting", "Fitting in Chebyshev basis", "Distances exercise", "Reading and writing an elephant", "Mandelbrot set", "Fitting to polynomial", "Population exercise", "Random walk exercise", "Computation times", "<span class=\"section-number\">1.3.3. </span>More elaborate arrays", "<span class=\"section-number\">1.3.5. </span>Some exercises", "<span class=\"section-number\">1.3.6. </span>Full code examples", "<span class=\"section-number\">1.3. </span>NumPy: creating and manipulating numerical data", "<span class=\"section-number\">1.3.2. </span>Numerical operations on arrays", "Full code examples for the SciPy chapter", "<span class=\"section-number\">1.5.12.16. </span>Optimization of a two-parameter function", "<span class=\"section-number\">1.5.12.13. </span>Demo connected components", "<span class=\"section-number\">1.5.12.8. </span>Curve fitting", "<span class=\"section-number\">1.5.12.3. </span>Detrending a signal", "<span class=\"section-number\">1.5.12.17. </span>Plotting and manipulating FFTs for filtering", "<span class=\"section-number\">1.5.12.15. </span>Plot filtering on images", "<span class=\"section-number\">1.5.12.12. </span>Plot geometrical transformations on images", "<span class=\"section-number\">1.5.12.11. </span>A demo of 1D interpolation", "<span class=\"section-number\">1.5.12.10. </span>Demo mathematical morphology", "<span class=\"section-number\">1.5.12.5. </span>Normal distribution: histogram and PDF", "<span class=\"section-number\">1.5.12.1. </span>Finding the minimum of a smooth function", "<span class=\"section-number\">1.5.12.14. </span>Minima and roots of a function", "<span class=\"section-number\">1.5.12.2. </span>Resample a signal with scipy.signal.resample", "<span class=\"section-number\">1.5.12.6. </span>Integrate the Damped spring-mass oscillator", "<span class=\"section-number\">1.5.12.4. </span>Integrating a simple ODE", "<span class=\"section-number\">1.5.12.9. </span>Spectrogram, power spectral density", "<span class=\"section-number\">1.5.12.7. </span>Comparing 2 sets of samples from Gaussians", "Computation times", "Solutions of the exercises for SciPy", "Curve fitting: temperature as a function of month of the year", "Image denoising by FFT", "Simple image blur by convolution with a Gaussian kernel", "Crude periodicity finding", "Computation times", "Geometrical transformations on images", "<span class=\"section-number\">1.5. </span>SciPy : high-level scientific computing", "Solutions", "<span class=\"section-number\">1.5.11.4. </span>Example of solution for the image processing exercise: unmolten grains in glass", "Examples for the summary excercices", "Cumulative wind speed prediction", "The Gumbell distribution", "The lidar system, data (2 of 2 datasets)", "The lidar system, data and fit (2 of 2 datasets)", "The lidar system, data (1 of 2 datasets)", "The lidar system, data and fit (1 of 2 datasets)", "The Gumbell distribution, results", "Computation times", "<span class=\"section-number\">1.5.11.3. </span>Image processing application: counting bubbles and unmolten grains", "<span class=\"section-number\">1.5.11.2. </span>Non linear least squares curve fitting: application to point extraction in topographical lidar data", "<span class=\"section-number\">1.5.11.1. </span>Maximum wind speed prediction at the Sprog\u00f8 station", "<span class=\"section-number\">3. </span>Packages and applications", "Examples for the scikit-image chapter", "<span class=\"section-number\">3.3.11.6. </span>Segmentation contours", "<span class=\"section-number\">3.3.11.2. </span>Displaying a simple image", "<span class=\"section-number\">3.3.11.3. </span>Integers can overflow", "<span class=\"section-number\">3.3.11.1. </span>Creating an image", "<span class=\"section-number\">3.3.11.4. </span>Equalizing the histogram of an image", "<span class=\"section-number\">3.3.11.8. </span>Affine transform", "<span class=\"section-number\">3.3.11.10. </span>Various denoising filters", "<span class=\"section-number\">3.3.11.9. </span>Labelling connected components of an image", "<span class=\"section-number\">3.3.11.11. </span>Watershed and random walker for segmentation", "<span class=\"section-number\">3.3.11.5. </span>Computing horizontal gradients with the Sobel filter", "<span class=\"section-number\">3.3.11.7. </span>Otsu thresholding", "Computation times", "<span class=\"section-number\">3.3. </span><code class=\"docutils literal notranslate\"><span class=\"pre\">scikit-image</span></code>: image processing", "Examples for the scikit-learn chapter", "<span class=\"section-number\">3.4.8.17. </span>Tutorial Diagrams", "<span class=\"section-number\">3.4.8.16. </span>Bias and variance of polynomial fit", "<span class=\"section-number\">3.4.8.11. </span>A simple regression analysis on the California housing data", "<span class=\"section-number\">3.4.8.9. </span>Compare classifiers on the digits data", "<span class=\"section-number\">3.4.8.13. </span>Simple visualization and classification of the digits dataset", "<span class=\"section-number\">3.4.8.14. </span>The eigenfaces example: chaining PCA and SVMs", "<span class=\"section-number\">3.4.8.12. </span>Nearest-neighbor prediction on iris", "<span class=\"section-number\">3.4.8.3. </span>Plot 2D views of the iris dataset", "<span class=\"section-number\">3.4.8.6. </span>Use the RidgeCV and LassoCV to set the regularization parameter", "<span class=\"section-number\">3.4.8.4. </span>A simple linear regression", "<span class=\"section-number\">3.4.8.2. </span>Measuring Decision Tree performance", "<span class=\"section-number\">3.4.8.1. </span>Demo PCA in 2D", "<span class=\"section-number\">3.4.8.10. </span>Plot fitting a 9th order polynomial", "<span class=\"section-number\">3.4.8.8. </span>Simple picture of the formal problem of machine learning", "<span class=\"section-number\">3.4.8.15. </span>Example of linear and non-linear models", "<span class=\"section-number\">3.4.8.5. </span>tSNE to visualize digits", "<span class=\"section-number\">3.4.8.7. </span>Plot variance and regularization in linear models", "Computation times", "<span class=\"section-number\">3.4. </span>scikit-learn: machine learning in Python", "Full code for the figures", "<span class=\"section-number\">3.1.6.8. </span>Air fares before and after 9/11", "<span class=\"section-number\">3.1.6.3. </span>Analysis of Iris petal and sepal sizes", "<span class=\"section-number\">3.1.6.1. </span>Boxplots and paired differences", "<span class=\"section-number\">3.1.6.2. </span>Plotting simple quantities of a pandas dataframe", "<span class=\"section-number\">3.1.6.4. </span>Simple Regression", "<span class=\"section-number\">3.1.6.6. </span>Multiple Regression", "<span class=\"section-number\">3.1.6.7. </span>Visualizing factors influencing wages", "<span class=\"section-number\">3.1.6.5. </span>Test for an education/gender interaction in wages", "Computation times", "<span class=\"section-number\">3.1.7.1. </span>Solutions to this chapter\u2019s exercises", "Relating Gender and IQ", "Computation times", "<span class=\"section-number\">3.1. </span>Statistics in Python", "<span class=\"section-number\">3.2. </span>Sympy : Symbolic Mathematics in Python", "About the Scientific Python Lectures", "Computation times"], "terms": {"ga\u00ebl": [0, 1, 10, 37, 39, 53, 54, 76, 79, 84, 157, 174, 202, 251, 265, 267], "varoquaux": [0, 1, 10, 37, 39, 53, 54, 76, 84, 157, 174, 202, 251, 265, 267], "emmanuel": [0, 1, 37, 74, 76, 77, 84, 174, 202, 231, 267], "gouillart": [0, 1, 37, 74, 76, 84, 174, 202, 231, 267], "olav": [0, 1, 267], "vahtra": [0, 1, 267], "pierr": [0, 1, 267], "de": [0, 1, 267], "buyl": [0, 1, 267], "k": [0, 8, 39, 41, 43, 44, 47, 48, 50, 53, 54, 57, 58, 65, 73, 112, 114, 121, 134, 152, 158, 159, 163, 190, 197, 202, 206, 207, 217, 229, 234, 235, 243, 246, 247, 248, 265, 267], "jarrod": [0, 10, 76, 267], "millman": [0, 267], "st\u00e9fan": [0, 79, 267], "van": [0, 1, 9, 54, 74, 267], "der": [0, 54, 267], "walt": [0, 54, 267], "list": [0, 1, 2, 3, 8, 9, 10, 37, 39, 42, 43, 50, 66, 70, 73, 74, 75, 76, 79, 81, 84, 85, 86, 159, 202, 231, 251, 265, 267], "alphabet": [0, 267], "order": [0, 1, 9, 37, 38, 39, 54, 70, 73, 74, 77, 78, 81, 85, 157, 158, 159, 201, 202, 203, 204, 214, 227, 231, 232, 238, 250, 251, 266, 267, 268], "christoph": [0, 84, 157, 267], "burn": [0, 84, 267], "adrian": [0, 267], "chauv": [0, 202, 267], "robert": [0, 1, 61, 267], "cimrman": [0, 61, 267], "combel": [0, 84, 267], "andr\u00e9": [0, 267], "espaz": [0, 202, 267], "mike": [0, 1, 157, 267], "m\u00fcller": [0, 157, 251, 267], "fabian": [0, 1, 266, 267], "pedregosa": [0, 1, 266, 267], "didrik": [0, 1, 174, 267], "pint": [0, 1, 174, 267], "nicola": [0, 1, 70, 157, 267], "rougier": [0, 1, 70, 157, 267], "pauli": [0, 1, 8, 174, 267], "virtanen": [0, 1, 8, 174, 267], "zbigniew": [0, 1, 9, 267], "j\u0119drzejewski": [0, 1, 9, 267], "szmek": [0, 1, 9, 267], "valentin": [0, 1, 39, 76, 267], "haenel": [0, 1, 39, 76, 267], "from": [0, 1, 7, 9, 10, 11, 12, 20, 33, 35, 36, 37, 38, 39, 42, 47, 48, 52, 53, 54, 56, 59, 62, 63, 65, 69, 70, 73, 74, 75, 77, 80, 81, 82, 83, 84, 86, 90, 98, 118, 126, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 166, 169, 170, 172, 175, 176, 177, 181, 183, 186, 194, 197, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268], "2011": 0, "2015": 0, "osayd": [0, 1, 267], "abdu": [0, 1, 267], "arunpersaud": [0, 267], "ross": [0, 1, 267], "barnowski": [0, 1, 267], "sebastian": [0, 1, 77, 267], "berg": [0, 1, 267], "lilian": [0, 267], "besson": [0, 267], "matthieu": [0, 1, 267], "boileau": [0, 1, 267], "jori": [0, 1, 267], "den": [0, 1, 203, 267], "bossch": [0, 1, 267], "michael": [0, 1, 267], "boyl": [0, 1, 267], "matthew": [0, 267], "brett": [0, 267], "bsgalvan": [0, 267], "lar": [0, 1, 267], "buitinck": [0, 1, 267], "ozan": [0, 1, 267], "\u00e7a\u011flayan": [0, 1, 267], "lawrenc": [0, 1, 267], "chan": [0, 1, 267], "adrien": [0, 202, 267], "david": [0, 9, 77, 86, 267], "cournapeau": [0, 267], "dave": [0, 267], "dogacan": [0, 1, 267], "dugmeci": [0, 1, 267], "t\u00f6r\u00f6k": [0, 267], "edwin": [0, 267], "egen": [0, 267], "andr": [0, 202, 267], "lo\u00efc": [0, 1, 267], "est\u00e8v": [0, 1, 267], "corei": [0, 267], "farwel": [0, 267], "tim": [0, 1, 267], "gate": [0, 1, 267], "stuart": [0, 1, 267], "geiger": [0, 1, 267], "olivi": [0, 251, 267], "georg": [0, 267], "daniel": [0, 267], "gerigk": [0, 267], "giesek": [0, 1, 267], "philip": [0, 267], "gilli\u00dfen": [0, 267], "ralf": [0, 202, 267], "gommer": [0, 202, 267], "julia": [0, 73, 75, 267], "gustavsen": [0, 267], "omar": [0, 1, 267], "guti\u00e9rrez": [0, 1, 267], "matt": [0, 267], "haberland": [0, 267], "haessig": [0, 267], "bruno": [0, 1, 267], "hanzen": [0, 1, 267], "hartmann": [0, 1, 267], "jonathan": [0, 267], "helmu": [0, 267], "andrea": [0, 1, 251, 267], "hilbol": [0, 1, 267], "himanshu": [0, 1, 267], "julian": [0, 1, 267], "hofer": [0, 1, 267], "hoffmann": [0, 1, 267], "b": [0, 1, 8, 10, 24, 43, 44, 47, 48, 53, 54, 65, 66, 77, 78, 80, 81, 82, 85, 86, 109, 111, 113, 140, 159, 171, 172, 175, 179, 188, 196, 202, 203, 215, 224, 234, 242, 248, 251, 267], "hohl": [0, 1, 267], "tarek": [0, 267], "hoteit": [0, 267], "gert": [0, 1, 267], "ludwig": [0, 1, 267], "ingold": [0, 1, 267], "thoui": [0, 1, 267], "rai": [0, 267], "jone": [0, 1, 267], "jorgeprietoarranz": [0, 267], "josephsalmon": [0, 267], "greg": [0, 1, 267], "kiar": [0, 1, 267], "kikocorreoso": [0, 267], "vinc": [0, 1, 267], "knight": [0, 1, 267], "lfp6": [0, 267], "manuel": [0, 1, 267], "l\u00f3pez": [0, 1, 267], "ib\u00e1\u00f1ez": [0, 1, 267], "marco": [0, 1, 267], "mangan": [0, 1, 267], "masaron": [0, 1, 267], "john": [0, 267], "mclaughlin": [0, 267], "mhemantha": [0, 267], "michelemaroni89": [0, 1, 267], "mohammad": [0, 267], "zachari": [0, 1, 267], "moon": [0, 1, 267], "mueller": [0, 1, 267], "negm": [0, 267], "nelson": [0, 267], "nicoguaro": [0, 267], "sergio": [0, 1, 267], "oller": [0, 1, 267], "theofilo": [0, 267], "papapanagiot": [0, 267], "patniharshit": [0, 267], "philipp": [0, 267], "pepiot": [0, 267], "tiago": [0, 267], "m": [0, 8, 10, 24, 39, 54, 55, 65, 77, 105, 108, 110, 157, 184, 190, 202, 206, 207, 212, 216, 231, 248, 267], "d": [0, 8, 9, 10, 39, 42, 65, 74, 76, 77, 78, 79, 81, 85, 86, 108, 110, 139, 152, 154, 159, 169, 172, 181, 198, 234, 251, 266, 267], "pereira": [0, 267], "pettiaux": [0, 1, 267], "evgeni": [0, 1, 267], "pogrebnyak": [0, 1, 267], "reverland": [0, 267], "maximilien": [0, 267], "riehl": [0, 267], "kristian": [0, 1, 267], "rother": [0, 1, 267], "p": [0, 8, 10, 54, 108, 110, 139, 154, 158, 163, 167, 172, 202, 233, 246, 253, 254, 257, 258, 260, 263, 265, 267], "pamphil": [0, 267], "roi": [0, 22, 37, 267], "rutzmos": [0, 267], "sander": [0, 1, 267], "jo\u00e3o": [0, 267], "felip": [0, 267], "santo": [0, 267], "mark": [0, 1, 9, 157, 177, 267], "setchel": [0, 1, 267], "helen": [0, 267], "sherwood": [0, 267], "taylor": [0, 266, 267], "shoeboxam": [0, 267], "simon": [0, 267], "solarjo": [0, 267], "ssmiller": [0, 267], "scott": [0, 1, 267], "staniewicz": [0, 1, 267], "strpeter": [0, 267], "surfer190": [0, 267], "bartosz": [0, 1, 267], "telenczuk": [0, 1, 267], "tommyod": [0, 1, 267], "we": [0, 2, 8, 9, 10, 22, 33, 35, 37, 39, 43, 46, 53, 54, 70, 76, 78, 80, 82, 83, 84, 85, 157, 159, 169, 172, 175, 177, 181, 196, 197, 198, 202, 203, 214, 215, 227, 231, 235, 238, 239, 240, 241, 243, 245, 246, 248, 249, 251, 253, 258, 259, 260, 263, 265, 266, 267], "turner": [0, 267], "akihiro": [0, 267], "uchida": [0, 267], "utkarsh": [0, 267], "upadhyai": [0, 267], "nell": [0, 1, 267], "verdier": [0, 267], "virgilefritsch": [0, 267], "yosh": [0, 267], "wakeham": [0, 267], "yasutomo57jp": [0, 267], "python": [1, 2, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 60, 63, 65, 66, 67, 68, 70, 74, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263], "11": [1, 8, 9, 10, 12, 14, 26, 37, 39, 42, 48, 52, 53, 54, 59, 76, 79, 81, 85, 86, 102, 104, 108, 109, 110, 111, 112, 113, 114, 117, 159, 171, 172, 175, 181, 230, 236, 238, 251, 252, 258, 261, 265, 267, 268], "12": [1, 2, 8, 9, 10, 15, 19, 20, 23, 25, 32, 39, 41, 42, 48, 53, 54, 59, 76, 79, 81, 85, 86, 107, 116, 122, 139, 154, 157, 159, 171, 172, 175, 182, 185, 187, 196, 202, 209, 226, 227, 228, 233, 234, 237, 238, 253, 263, 265, 267], "renam": [1, 86, 253, 267], "scientif": [1, 2, 8, 10, 37, 38, 39, 48, 70, 74, 75, 78, 80, 81, 85, 86, 144, 157, 159, 175, 199, 217, 253, 260, 263, 265], "lectur": [1, 10, 38, 39, 48, 70, 75, 76, 81, 85, 86, 144, 157, 175, 199, 202, 217, 253, 260, 263], "remov": [1, 8, 15, 37, 38, 73, 76, 77, 81, 86, 172, 180, 198, 201, 202, 203, 204, 214, 231, 253, 263, 265, 267], "old": [1, 9, 38, 39, 73, 85, 172, 267], "content": [1, 77, 253, 259, 267], "major": [1, 83, 84, 125, 145, 157, 159, 267], "updat": [1, 9, 39, 74], "support": [1, 8, 9, 38, 53, 54, 57, 58, 73, 76, 77, 83, 85, 158, 159, 202, 231, 237, 247, 251, 260, 265, 266, 267], "recent": [1, 8, 9, 10, 39, 56, 76, 79, 81, 175, 267], "packag": [1, 2, 8, 10, 37, 38, 39, 48, 61, 73, 74, 75, 76, 84, 86, 157, 159, 181, 202, 230, 231, 236, 238, 250, 253, 260, 261, 263, 264, 265, 266, 267, 268], "scipi": [1, 2, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 41, 43, 45, 46, 47, 48, 50, 54, 62, 65, 66, 73, 74, 75, 76, 81, 84, 85, 157, 158, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 199, 200, 201, 204, 206, 207, 209, 211, 213, 215, 216, 227, 231, 251, 265, 267, 268], "scikit": [1, 2, 31, 37, 53, 54, 65, 73, 76, 217, 225, 230, 233, 238, 250, 267, 268], "imag": [1, 2, 8, 12, 18, 21, 31, 33, 35, 36, 38, 66, 70, 73, 75, 76, 77, 78, 83, 146, 157, 159, 162, 165, 172, 174, 175, 176, 194, 195, 200, 206, 217, 219, 224, 225, 227, 230, 238, 251, 265, 267, 268], "chapter": [1, 38, 73, 75, 76, 82, 85, 159, 171, 174, 175, 217, 240], "replac": [1, 37, 38, 70, 73, 77, 201, 202, 231, 251, 265, 267], "learn": [1, 2, 37, 39, 53, 54, 70, 74, 76, 84, 85, 157, 175, 217, 233, 250, 267, 268], "hous": [1, 39, 73, 217, 232, 234, 250, 267, 268], "exampl": [1, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 62, 69, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268], "california": [1, 232, 250, 251, 267, 268], "data": [1, 6, 9, 11, 24, 33, 36, 37, 38, 39, 45, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 74, 75, 76, 77, 85, 86, 89, 95, 96, 97, 117, 132, 149, 157, 163, 165, 167, 168, 178, 179, 182, 183, 184, 185, 189, 197, 198, 204, 205, 213, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 232, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 263, 267, 268], "fix": [1, 8, 9, 10, 39, 55, 59, 70, 77, 202, 251, 267], "link": [1, 2, 8, 38, 63, 73, 85, 157, 202, 267], "typo": [1, 10, 70, 79, 267], "fftpack": [1, 85, 267], "figur": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 73, 75, 76, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 126, 127, 128, 131, 132, 136, 137, 138, 140, 143, 145, 147, 148, 149, 154, 161, 162, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 212, 216, 217, 219, 220, 221, 223, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 257, 258, 259, 267], "softwar": [1, 39, 53, 76, 84, 215, 267], "version": [1, 8, 9, 10, 39, 46, 53, 54, 70, 76, 85, 86, 171, 253, 263, 265, 267], "i": [1, 2, 3, 8, 9, 10, 21, 24, 33, 37, 38, 39, 42, 43, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 117, 129, 139, 148, 154, 158, 159, 169, 171, 172, 175, 181, 188, 197, 198, 201, 202, 215, 216, 217, 234, 237, 238, 240, 243, 244, 245, 246, 247, 248, 253, 254, 255, 257, 258, 259, 260, 263, 265, 266, 267], "o": [1, 6, 8, 10, 39, 42, 48, 54, 60, 66, 73, 75, 77, 78, 84, 85, 108, 110, 158, 159, 161, 167, 184, 199, 206, 207, 231, 249, 251, 253, 254, 257, 259, 260, 263, 266, 267], "misc": [1, 85, 267], "imageio": [1, 18, 37, 158, 202, 231, 267], "inform": [1, 2, 8, 9, 38, 39, 46, 53, 54, 73, 74, 75, 76, 77, 82, 84, 85, 157, 175, 202, 204, 214, 215, 238, 251, 265, 267], "dict": [1, 8, 9, 60, 157, 251, 267], "bharath": [1, 267], "saiguhan": [1, 267], "suppress": [1, 166, 236, 238, 267], "warn": [1, 9, 10, 39, 48, 66, 70, 166, 236, 238, 260, 267], "mandelbrot": [1, 8, 73, 75, 78, 160, 170, 173, 174, 267, 268], "numpi": [1, 2, 6, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 70, 73, 74, 75, 76, 77, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 110, 111, 113, 115, 116, 117, 121, 122, 123, 124, 127, 129, 130, 131, 133, 134, 135, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 219, 222, 225, 226, 227, 231, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 249, 251, 253, 257, 258, 259, 260, 265, 266, 267, 268], "introduct": [1, 2, 9, 38, 61, 73, 75, 76, 202, 217, 265, 267], "advanc": [1, 7, 10, 36, 37, 39, 48, 52, 54, 70, 73, 75, 76, 77, 84, 99, 141, 155, 157, 174, 175, 181, 201, 202, 251, 267, 268], "usag": [1, 38, 39, 54, 76, 119, 157, 267], "chang": [1, 8, 9, 10, 37, 39, 53, 54, 57, 58, 60, 63, 70, 73, 75, 76, 77, 80, 85, 159, 171, 172, 175, 201, 202, 204, 214, 216, 236, 238, 251, 259, 263, 265, 267], "word": [1, 2, 9, 62, 70, 73, 78, 85, 217, 267], "byte": [1, 8, 37, 39, 231, 267], "represent": [1, 10, 73, 217, 237, 238, 244, 251, 267], "float": [1, 2, 8, 12, 15, 26, 32, 33, 37, 39, 65, 77, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 129, 142, 148, 157, 159, 171, 181, 182, 197, 201, 202, 203, 209, 211, 215, 231, 237, 251, 263, 266, 267], "point": [1, 2, 9, 10, 12, 15, 22, 24, 26, 28, 34, 37, 38, 44, 53, 57, 58, 73, 74, 75, 76, 80, 89, 90, 97, 99, 156, 158, 159, 171, 172, 175, 184, 189, 202, 216, 226, 231, 237, 239, 246, 248, 249, 251, 265, 266, 267, 268], "argument": [1, 8, 9, 10, 39, 53, 54, 74, 76, 81, 85, 86, 157, 159, 202, 203, 204, 214, 215, 231, 251, 266, 267], "np": [1, 2, 6, 8, 10, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 70, 74, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 110, 111, 113, 115, 116, 117, 121, 122, 123, 124, 127, 129, 130, 131, 133, 134, 135, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 222, 225, 226, 227, 231, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 249, 251, 253, 257, 258, 259, 260, 265, 267], "zero": [1, 8, 10, 12, 15, 16, 21, 22, 24, 25, 26, 28, 30, 34, 37, 39, 46, 47, 53, 54, 60, 62, 63, 78, 79, 117, 143, 159, 171, 175, 185, 197, 198, 199, 201, 202, 222, 226, 231, 238, 249, 251, 253, 265, 267], "document": [1, 2, 9, 10, 37, 38, 39, 62, 75, 76, 81, 86, 99, 174, 175, 202, 238, 244, 251, 265, 266, 267], "us": [1, 2, 8, 13, 18, 29, 33, 38, 39, 43, 46, 48, 50, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 102, 121, 124, 140, 144, 151, 157, 158, 171, 172, 174, 181, 189, 197, 198, 201, 202, 203, 204, 214, 215, 216, 217, 226, 227, 228, 231, 232, 233, 237, 238, 239, 248, 249, 250, 253, 256, 257, 258, 259, 260, 263, 265, 267, 268], "org": [1, 3, 8, 9, 10, 37, 54, 70, 74, 76, 77, 82, 84, 85, 86, 158, 159, 215, 231, 238, 244, 256, 259, 265, 266, 267], "note": [1, 2, 8, 9, 10, 37, 38, 39, 54, 61, 66, 67, 70, 73, 74, 76, 77, 80, 81, 82, 157, 159, 169, 175, 181, 198, 202, 231, 240, 251, 253, 254, 257, 258, 259, 260, 263, 265, 267], "transpos": [1, 8, 54, 66, 175, 267], "arrai": [1, 2, 9, 11, 36, 38, 39, 43, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 73, 74, 75, 76, 77, 81, 85, 148, 157, 158, 174, 178, 188, 196, 197, 198, 201, 202, 203, 204, 207, 209, 211, 212, 214, 215, 216, 231, 238, 245, 251, 258, 266, 267, 268], "eric": [1, 267], "wieser": [1, 267], "gener": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 65, 67, 68, 70, 73, 74, 75, 76, 81, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267], "file": [1, 2, 3, 7, 9, 36, 38, 39, 52, 54, 63, 69, 70, 73, 75, 76, 78, 79, 81, 84, 85, 98, 118, 155, 156, 157, 159, 170, 172, 174, 175, 183, 194, 200, 204, 213, 214, 216, 230, 231, 238, 250, 251, 253, 256, 259, 260, 261, 264, 267, 268], "lidar": [1, 73, 75, 202, 205, 213, 267, 268], "process": [1, 9, 10, 14, 38, 39, 54, 62, 73, 75, 76, 175, 201, 215, 217, 238, 251, 267], "pymc2": [1, 267], "pymc3": [1, 267], "transpar": [1, 9, 99, 100, 118, 157, 231, 263, 267, 268], "popup": [1, 267], "menu": [1, 10, 76, 80, 267], "have": [1, 2, 8, 9, 10, 22, 37, 39, 41, 43, 48, 53, 54, 67, 70, 74, 76, 77, 79, 80, 81, 85, 157, 158, 159, 175, 196, 197, 198, 202, 216, 223, 231, 238, 249, 251, 253, 258, 259, 265, 266, 267], "background": [1, 12, 35, 73, 157, 215, 217, 226, 227, 266, 267], "outdat": [1, 267], "url": [1, 231, 267], "continu": [1, 9, 10, 53, 54, 73, 75, 84, 90, 157, 251, 254, 265, 267], "integr": [1, 8, 38, 73, 75, 76, 85, 174, 176, 194, 198, 217, 256, 267, 268], "euroscipi": [1, 8, 267], "sprint": [1, 267], "chessboard": [1, 267], "size": [1, 8, 10, 12, 14, 15, 16, 22, 24, 25, 26, 28, 33, 37, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 62, 66, 73, 75, 77, 90, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 126, 132, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 174, 175, 180, 181, 182, 186, 193, 198, 201, 202, 204, 214, 216, 231, 233, 234, 235, 237, 238, 242, 245, 249, 251, 252, 257, 258, 261, 263, 265, 267, 268], "add": [1, 8, 9, 10, 37, 39, 65, 70, 76, 77, 85, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 175, 215, 251, 253, 267], "object": [1, 8, 11, 35, 36, 38, 39, 53, 54, 56, 62, 63, 66, 70, 73, 74, 75, 76, 78, 79, 84, 86, 157, 158, 165, 172, 174, 175, 177, 179, 181, 187, 192, 198, 199, 201, 215, 217, 227, 231, 234, 237, 238, 245, 247, 249, 253, 257, 260, 263, 265, 268], "design": [1, 8, 9, 65, 159, 181, 202, 251], "choic": [1, 10, 39, 54, 73, 75, 85, 202, 251, 265], "make": [1, 2, 9, 10, 38, 39, 70, 73, 76, 78, 85, 86, 142, 143, 148, 153, 157, 172, 177, 197, 198, 216, 223, 231, 251, 253, 258, 265, 266, 267], "iter": [1, 8, 38, 39, 41, 48, 59, 61, 66, 73, 75, 84, 85, 166, 172, 202, 204, 236, 238, 253, 267], "more": [1, 9, 10, 20, 37, 38, 39, 48, 53, 54, 55, 63, 70, 73, 74, 75, 76, 78, 81, 82, 84, 85, 86, 99, 142, 157, 159, 174, 175, 181, 199, 201, 202, 203, 208, 215, 217, 231, 238, 240, 251, 253, 257, 258, 260, 266, 267], "elabor": [1, 70, 73, 75, 99, 139, 141, 142, 155, 156, 157, 174, 240, 265, 267, 268], "empti": [1, 39, 55, 56, 57, 58, 59, 60, 62, 63, 78, 85, 157, 159, 203, 246, 247, 251, 267], "instead": [1, 8, 9, 39, 54, 55, 74, 77, 78, 171, 202, 203, 215, 253, 263, 265, 267], "tupl": [1, 8, 35, 55, 56, 57, 58, 59, 60, 63, 66, 77, 78, 81, 159, 227, 231, 266, 267], "deactiv": [1, 267], "tick": [1, 37, 73, 75, 90, 99, 100, 118, 145, 240, 267, 268], "rijn": [1, 267], "cydav": [1, 267], "michel": [1, 267], "corn": [1, 267], "off": [1, 8, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 49, 50, 51, 54, 65, 73, 105, 139, 171, 178, 181, 182, 183, 185, 201, 202, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 238, 267], "error": [1, 2, 8, 9, 16, 39, 41, 47, 48, 53, 65, 77, 79, 85, 86, 171, 172, 202, 216, 234, 235, 243, 251, 253, 254, 255, 257, 258, 260, 263, 265, 267], "improv": [1, 2, 8, 65, 70, 74, 202, 231, 251, 267], "readabl": [1, 2, 9, 39, 76, 78, 84, 267], "polynomi": [1, 73, 74, 75, 160, 163, 170, 173, 174, 232, 250, 266, 267, 268], "code": [1, 2, 3, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 67, 68, 73, 74, 75, 76, 78, 79, 80, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263, 266, 267], "suggest": [1, 9, 70, 159, 265, 267], "debug": [1, 9, 38, 39, 73, 76, 85, 86, 267], "environ": [1, 2, 10, 73, 75, 85, 157, 238, 244, 265, 267], "section": [1, 2, 8, 9, 10, 37, 39, 76, 81, 86, 157, 202, 206, 216, 251, 265, 267], "v": [1, 9, 10, 38, 40, 49, 52, 53, 54, 61, 65, 73, 77, 108, 110, 134, 139, 152, 154, 159, 231, 251, 267, 268], "matplotlib": [1, 2, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 62, 65, 66, 68, 70, 73, 74, 75, 76, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 267, 268], "compat": [1, 39, 159, 267], "c": [1, 2, 10, 38, 44, 53, 54, 55, 66, 73, 75, 77, 78, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 121, 123, 135, 140, 144, 153, 157, 159, 166, 171, 172, 175, 179, 190, 196, 197, 202, 215, 231, 234, 237, 238, 239, 240, 244, 246, 247, 248, 251, 254, 260, 263, 265, 267], "api": [1, 8, 38, 70, 73, 74, 157, 231, 253, 254, 257, 258, 260, 263, 265, 267], "cos_module_np": [1, 39, 267], "joseph": [1, 267], "salmon": [1, 267], "colour": [1, 159, 267], "interpol": [1, 11, 12, 16, 25, 26, 30, 33, 35, 36, 37, 73, 75, 76, 85, 127, 146, 157, 158, 165, 176, 194, 206, 207, 216, 220, 221, 223, 224, 225, 227, 228, 229, 231, 237, 251, 267, 268], "css": [1, 267], "high": [1, 37, 39, 53, 54, 73, 75, 76, 84, 157, 159, 175, 231, 234, 249, 267], "densiti": [1, 176, 186, 193, 194, 202, 216, 267, 268], "displai": [1, 2, 9, 11, 34, 36, 38, 53, 70, 73, 74, 80, 81, 99, 125, 141, 145, 146, 155, 156, 157, 159, 172, 197, 203, 204, 214, 218, 230, 231, 249, 251, 260, 265, 266, 267, 268], "index": [1, 9, 10, 13, 31, 37, 38, 48, 60, 63, 70, 73, 75, 76, 77, 78, 79, 86, 139, 154, 171, 172, 174, 175, 235, 251, 253, 265, 267], "pyx": [1, 8, 39, 267], "clearli": [1, 53, 54, 157, 251, 267], "against": [1, 175, 267], "extern": [1, 9, 10, 39, 54, 73, 75, 266, 267], "depend": [1, 8, 10, 33, 37, 39, 53, 62, 85, 86, 157, 159, 171, 202, 251, 253, 260, 265, 267], "sphinx": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 67, 68, 70, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267], "galleri": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 67, 68, 70, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268], "panda": [1, 2, 73, 76, 217, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 267, 268], "statsmodel": [1, 2, 76, 253, 254, 257, 258, 260, 263, 265, 267], "optim": [1, 10, 38, 39, 41, 45, 46, 48, 51, 52, 65, 73, 75, 76, 85, 159, 176, 179, 187, 188, 194, 196, 209, 211, 215, 217, 231, 267, 268], "sympi": [1, 2, 53, 73, 76, 217, 267], "tele\u0144czuk": [1, 267], "prompt": [1, 10, 76, 157, 267], "unselect": [1, 267], "common": [1, 3, 9, 29, 37, 38, 39, 53, 55, 57, 58, 61, 73, 74, 76, 78, 85, 86, 157, 159, 171, 202, 238, 251, 255, 265, 267], "requir": [1, 8, 9, 39, 53, 81, 157, 159, 171, 202, 216, 227, 238, 257, 258, 266], "pip": [1, 2, 231, 267], "conda": [1, 2, 231, 267], "build": [1, 9, 38, 39, 73, 76, 84, 85, 86, 175, 215, 216, 231, 251, 265], "instruct": [1, 9, 39, 76, 80, 85, 172], "set": [1, 2, 8, 9, 10, 37, 39, 53, 66, 73, 75, 76, 77, 78, 79, 85, 90, 159, 160, 170, 173, 174, 176, 194, 197, 201, 202, 217, 231, 232, 234, 236, 237, 238, 243, 250, 263, 266, 267, 268], "up": [1, 2, 8, 9, 23, 37, 39, 46, 54, 70, 76, 77, 159, 169, 172, 202, 238, 251, 267], "circl": [1, 33, 35, 37, 172, 202, 227, 231, 233, 267], "ci": [1, 267], "integ": [1, 10, 37, 38, 65, 73, 75, 77, 78, 80, 139, 154, 169, 171, 174, 175, 202, 218, 230, 231, 265, 266, 267, 268], "divis": [1, 79, 267], "call": [1, 8, 9, 10, 39, 42, 43, 48, 50, 53, 54, 56, 65, 76, 77, 79, 81, 83, 85, 157, 159, 172, 175, 197, 202, 215, 231, 251, 259, 265, 266, 267], "print": [1, 2, 8, 9, 41, 47, 48, 59, 63, 65, 76, 78, 79, 80, 81, 82, 85, 86, 99, 141, 155, 156, 157, 159, 172, 179, 187, 188, 203, 211, 231, 235, 236, 237, 238, 241, 251, 253, 254, 257, 258, 260, 263, 265, 267, 268], "test": [1, 2, 8, 9, 10, 39, 45, 53, 54, 73, 75, 76, 77, 78, 81, 82, 85, 86, 203, 217, 231, 234, 236, 237, 238, 243, 252, 253, 254, 261, 263, 267, 268], "runner": [1, 48, 85, 86, 144, 183, 199, 238, 253, 260, 263, 267], "pytest": [1, 2, 9, 267], "plot": [1, 6, 8, 11, 12, 18, 24, 26, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 62, 65, 68, 70, 73, 74, 75, 76, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 141, 143, 144, 155, 156, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 172, 173, 175, 176, 179, 180, 184, 185, 186, 187, 189, 190, 191, 194, 198, 202, 206, 207, 208, 209, 210, 211, 215, 216, 217, 224, 229, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 246, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 267, 268], "direct": [1, 9, 21, 38, 39, 53, 61, 70, 73, 175, 197, 198, 202, 267], "rework": [1, 267], "intro": [1, 70, 85, 98, 118, 144, 155, 156, 157, 170, 175, 194, 199, 200, 213, 215, 216, 267, 268], "ar": [1, 2, 9, 10, 37, 38, 39, 46, 48, 53, 54, 56, 57, 58, 60, 65, 66, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 99, 157, 158, 171, 172, 174, 175, 177, 198, 201, 202, 204, 214, 215, 216, 227, 231, 238, 240, 243, 245, 248, 249, 251, 253, 254, 255, 259, 260, 263, 265, 266, 267], "now": [1, 8, 10, 22, 35, 37, 39, 43, 50, 65, 76, 81, 83, 85, 157, 159, 172, 179, 181, 187, 201, 202, 203, 215, 216, 227, 231, 237, 238, 239, 251, 254, 266, 267], "jupyt": [1, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 67, 68, 73, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267], "notebook": [1, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 67, 68, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267], "\u00f3scar": [1, 267], "n\u00e1jera": [1, 267], "better": [1, 9, 10, 37, 39, 53, 54, 74, 85, 157, 198, 202, 233, 238, 251, 265, 267], "adapt": [1, 48, 202, 215, 231, 251, 267], "5": [1, 2, 8, 9, 10, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 30, 31, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 148, 151, 152, 153, 157, 158, 159, 164, 166, 168, 171, 172, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 196, 197, 201, 202, 203, 206, 209, 212, 219, 224, 226, 227, 231, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 253, 254, 257, 258, 259, 260, 263, 265, 266, 267, 268], "modern": [1, 39, 76, 265, 267], "collaps": [1, 2, 53, 267], "sidebar": [1, 267], "can": [1, 2, 8, 9, 10, 37, 39, 45, 47, 53, 54, 57, 58, 60, 65, 66, 70, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 157, 158, 159, 169, 172, 175, 181, 197, 201, 202, 215, 216, 218, 230, 231, 238, 249, 251, 260, 265, 266, 267, 268], "pop": [1, 77, 158, 267], "mid": [1, 251, 267], "pictur": [1, 73, 75, 174, 232, 250, 251, 267, 268], "lena": [1, 267], "raccoon": [1, 10, 11, 19, 20, 23, 27, 36, 37, 172, 267, 268], "face": [1, 9, 10, 11, 13, 14, 19, 20, 23, 27, 29, 31, 32, 36, 37, 73, 75, 99, 100, 118, 157, 174, 182, 183, 201, 202, 231, 238, 267, 268], "author": [1, 3, 8, 9, 10, 37, 39, 53, 54, 61, 70, 73, 74, 76, 84, 157, 174, 202, 231, 251, 257, 258, 265, 266], "cover": [1, 8, 9, 37, 39, 70, 157, 201, 202, 214, 231, 251, 265], "bibtex": [1, 267], "entri": [1, 8, 56, 60, 238, 256, 267], "render": [1, 70, 157, 238, 244, 267], "mobil": [1, 84, 267], "restructur": [1, 70, 267], "text": [1, 9, 10, 12, 26, 41, 43, 44, 50, 51, 62, 63, 70, 73, 75, 85, 99, 101, 103, 105, 108, 110, 117, 119, 120, 122, 126, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 174, 175, 177, 196, 197, 202, 206, 207, 212, 228, 231, 233, 237, 245, 251, 254, 258, 259, 265, 267, 268], "markup": [1, 2, 267], "statist": [1, 5, 7, 38, 53, 73, 75, 76, 174, 175, 217, 240, 251, 252, 253, 254, 257, 258, 259, 260, 261, 263, 264, 267, 268], "layout": [1, 2, 8, 144, 145, 157, 159, 175, 258, 267], "pdf": [1, 2, 53, 54, 73, 176, 194, 202, 265, 267, 268], "html": [1, 2, 8, 9, 10, 54, 70, 76, 77, 81, 82, 85, 86, 158, 238, 244, 251, 256, 260, 265, 267], "simplifi": [1, 9, 10, 39, 73, 217, 265, 267], "format": [1, 8, 10, 37, 65, 66, 73, 75, 77, 81, 157, 171, 174, 202, 216, 231, 240, 265, 267], "friendli": [1, 8, 231, 267], "logo": [1, 37, 86, 157, 231, 267], "front": [1, 267], "page": [1, 70, 73, 171, 238, 244, 267], "put": [1, 9, 70, 85, 157, 239, 266, 267], "date": [1, 77, 157, 253, 254, 257, 258, 260, 263, 265, 267], "project": [1, 2, 9, 70, 74, 85, 106, 115, 131, 132, 177, 238, 244, 248, 251, 258, 267], "deprec": [1, 8, 38, 39, 73, 253, 263, 267], "pylab": [1, 267], "interfac": [1, 10, 38, 48, 65, 73, 84, 157, 158, 159, 202, 217, 267], "manipul": [1, 8, 11, 36, 38, 39, 56, 59, 73, 75, 76, 77, 85, 157, 176, 194, 201, 217, 231, 267, 268], "upgrad": [1, 267], "introductori": [1, 215, 267], "languag": [1, 9, 10, 39, 62, 73, 75, 78, 81, 85, 265, 267], "minor": [1, 10, 125, 145, 157, 267], "variou": [1, 8, 9, 14, 28, 38, 39, 70, 74, 76, 84, 104, 109, 120, 159, 175, 187, 202, 217, 218, 230, 231, 259, 265, 266, 267, 268], "place": [1, 8, 9, 10, 39, 54, 70, 77, 81, 157, 171, 175, 251, 267], "kikocorreo": [1, 267], "thi": [1, 8, 9, 10, 12, 16, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 46, 47, 48, 53, 54, 57, 58, 65, 70, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 99, 101, 102, 119, 120, 158, 159, 169, 172, 174, 175, 181, 196, 197, 198, 199, 201, 202, 214, 215, 216, 217, 222, 225, 226, 227, 228, 229, 231, 233, 238, 239, 240, 243, 244, 245, 246, 247, 249, 251, 253, 255, 256, 258, 259, 260, 263, 266, 267], "written": [1, 9, 10, 39, 53, 76, 77, 85, 266, 267], "confer": [1, 267], "complet": [1, 9, 37, 39, 47, 54, 70, 74, 76, 77, 85, 202, 216, 251, 265, 267], "redon": [1, 267], "mathemat": [1, 10, 11, 25, 30, 36, 38, 62, 73, 75, 76, 157, 176, 194, 204, 214, 217, 267, 268], "mayavi": [1, 267], "slightli": [1, 157, 204, 214, 216, 251, 267], "fold": [1, 234, 251, 267], "toc": [1, 267], "few": [1, 9, 10, 38, 54, 61, 73, 76, 77, 78, 121, 172, 187, 202, 231, 237, 238, 251, 256, 267], "clean": [1, 11, 36, 37, 39, 201, 202, 204, 214, 267, 268], "gael": [1, 251, 267], "mani": [1, 8, 9, 10, 37, 39, 53, 54, 55, 66, 74, 76, 77, 84, 85, 157, 166, 175, 202, 231, 251, 265, 267], "In": [1, 8, 9, 10, 37, 39, 53, 54, 65, 70, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 157, 158, 159, 171, 175, 197, 202, 215, 216, 238, 244, 249, 251, 265, 266, 267], "particular": [1, 37, 39, 78, 84, 201, 202, 238, 251, 265, 267], "shorten": [1, 267], "dedupl": [1, 267], "across": [1, 10, 39, 53, 54, 73, 81, 234, 251, 267], "doctest": [1, 8, 9, 267], "all": [1, 3, 5, 8, 9, 10, 11, 37, 39, 40, 46, 53, 54, 62, 65, 66, 67, 70, 74, 76, 77, 79, 84, 85, 86, 99, 157, 159, 160, 171, 172, 173, 175, 176, 197, 202, 203, 204, 205, 214, 215, 216, 218, 231, 232, 251, 252, 258, 265, 267, 268], "titl": [1, 8, 10, 16, 19, 20, 21, 65, 70, 73, 75, 105, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 178, 181, 182, 185, 191, 192, 197, 202, 225, 227, 234, 245, 253, 267], "virgil": [1, 267], "fritsch": [1, 267], "tutori": [1, 2, 8, 37, 70, 73, 74, 75, 77, 79, 82, 84, 85, 202, 215, 232, 238, 247, 250, 251, 265, 267, 268], "ha": [1, 8, 9, 10, 39, 53, 65, 66, 76, 77, 78, 79, 83, 85, 101, 103, 117, 119, 120, 122, 126, 136, 137, 138, 139, 154, 157, 158, 159, 172, 175, 202, 216, 233, 238, 251, 253, 265, 266, 267], "been": [1, 9, 10, 39, 48, 53, 54, 65, 76, 80, 85, 157, 202, 216, 238, 251, 253, 267], "other": [1, 8, 37, 38, 39, 53, 54, 55, 56, 57, 58, 61, 73, 75, 77, 80, 81, 82, 84, 85, 158, 159, 171, 174, 201, 202, 204, 214, 231, 238, 253, 259, 263, 265, 266, 267], "trait": [1, 251, 267], "merg": [1, 267], "The": [1, 2, 9, 10, 21, 27, 34, 37, 38, 39, 44, 46, 47, 48, 53, 54, 61, 70, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 99, 100, 103, 118, 144, 157, 158, 166, 169, 172, 174, 175, 181, 187, 192, 201, 202, 205, 213, 215, 216, 217, 231, 232, 234, 236, 237, 240, 243, 245, 249, 250, 253, 254, 260, 263, 266, 267, 268], "rewamp": [1, 267], "outlin": [1, 267], "ad": [1, 8, 9, 10, 37, 39, 53, 73, 75, 150, 174, 215, 251, 265, 267], "construct": [1, 8, 38, 39, 53, 56, 60, 63, 65, 66, 73, 75, 171, 172, 174, 175, 203, 251, 259, 267], "commun": [2, 8, 10, 38, 73, 74, 76, 157, 267], "base": [2, 8, 9, 10, 37, 38, 46, 54, 63, 65, 73, 75, 76, 79, 83, 85, 157, 159, 172, 174, 175, 202, 215, 217, 248, 251, 267], "effort": [2, 9, 39, 53, 267], "constant": [2, 10, 21, 37, 85, 202, 266, 267], "mainten": [2, 39, 267], "new": [2, 8, 9, 10, 39, 54, 65, 70, 73, 76, 77, 81, 82, 83, 85, 90, 157, 159, 172, 175, 184, 233, 251], "inclus": [2, 39, 267], "topic": [2, 10, 70, 73, 74, 76, 171, 251, 267], "welcom": [2, 8, 267], "To": [2, 8, 9, 10, 39, 41, 48, 54, 70, 76, 80, 82, 84, 157, 172, 175, 202, 204, 214, 215, 231, 251, 257, 258, 259, 265, 266, 267], "propos": [2, 9, 202, 215, 267], "bugfix": [2, 267], "straightforward": [2, 8, 9, 251, 267], "see": [2, 3, 8, 9, 10, 37, 39, 48, 53, 54, 65, 74, 77, 79, 81, 84, 85, 157, 158, 159, 171, 172, 175, 201, 202, 215, 231, 238, 248, 249, 251, 256, 265, 266, 267], "below": [2, 8, 9, 39, 53, 59, 70, 76, 84, 157, 159, 166, 175, 202, 215, 251, 258, 267], "For": [2, 8, 9, 10, 37, 39, 53, 54, 70, 76, 77, 78, 79, 81, 82, 84, 85, 157, 158, 159, 171, 172, 175, 196, 201, 202, 216, 231, 245, 251, 257, 258, 263, 265, 266, 267], "read": [2, 9, 10, 37, 38, 53, 63, 70, 73, 74, 82, 160, 170, 173, 198, 203, 231, 267, 268], "first": [2, 8, 9, 10, 37, 39, 47, 53, 54, 70, 73, 74, 75, 77, 81, 82, 84, 85, 157, 158, 159, 175, 179, 188, 198, 201, 202, 203, 215, 216, 217, 238, 239, 248, 251, 258, 265, 267], "open": [2, 8, 9, 10, 11, 24, 36, 38, 42, 48, 73, 74, 76, 82, 84, 86, 185, 201, 202, 203, 204, 214, 231, 238, 253, 259, 267, 268], "an": [2, 9, 10, 11, 14, 15, 17, 32, 35, 36, 37, 38, 39, 41, 46, 48, 50, 53, 54, 59, 63, 70, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 104, 105, 106, 115, 116, 117, 122, 123, 126, 127, 136, 137, 138, 140, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 160, 170, 172, 173, 174, 175, 181, 197, 201, 202, 204, 214, 215, 216, 218, 220, 221, 227, 230, 231, 234, 238, 247, 251, 252, 253, 254, 259, 261, 263, 265, 266, 267, 268], "issu": [2, 8, 39, 70, 77, 202, 251, 266, 267], "github": [2, 8, 39, 64, 73, 238, 244, 267], "discuss": [2, 8, 9, 54, 70, 158, 175, 202, 251, 265, 267], "editor": [2, 8, 10, 70, 73, 75, 85, 86], "contributor": [2, 3, 70, 267], "should": [2, 9, 10, 39, 53, 54, 65, 70, 76, 80, 85, 157, 159, 181, 202, 215, 216, 231, 251, 258, 267], "keep": [2, 9, 10, 53, 54, 73, 75, 76, 85, 197, 251, 266, 267], "follow": [2, 8, 10, 39, 53, 54, 65, 66, 76, 77, 78, 80, 81, 83, 84, 85, 144, 157, 159, 172, 175, 197, 202, 203, 215, 216, 231, 238, 251, 265, 266, 267], "mind": [2, 8, 10, 54, 70, 202, 251, 267], "provid": [2, 8, 9, 37, 39, 53, 70, 77, 78, 85, 86, 157, 159, 172, 175, 201, 202, 203, 215, 216, 231, 238, 251, 257, 258, 267], "self": [2, 9, 10, 39, 66, 75, 76, 78, 83, 231, 267], "contain": [2, 8, 9, 39, 62, 65, 73, 75, 76, 78, 81, 84, 85, 157, 158, 159, 172, 202, 215, 231, 265, 267], "its": [2, 8, 9, 10, 37, 46, 48, 53, 54, 65, 70, 73, 76, 77, 80, 81, 85, 157, 158, 159, 172, 202, 204, 214, 217, 231, 238, 265, 266, 267], "primari": [2, 267], "comput": [2, 8, 9, 10, 37, 38, 39, 48, 57, 58, 65, 70, 73, 75, 78, 80, 85, 157, 159, 166, 172, 174, 193, 201, 203, 204, 214, 215, 217, 218, 238, 241, 251, 257, 265, 266, 267], "stack": [2, 8, 9, 10, 80, 267], "select": [2, 39, 73, 81, 203, 217, 265, 267], "wide": [2, 76, 238, 267], "stabl": [2, 8, 54, 74, 76, 158, 231, 256, 260, 267], "librari": [2, 8, 10, 38, 39, 53, 54, 73, 75, 76, 77, 84, 157, 158, 202, 216, 231, 238, 253, 259, 265, 266, 267], "current": [2, 8, 9, 38, 39, 65, 73, 76, 86, 146, 157, 158, 202, 216, 231, 267], "statmodel": [2, 267], "seaborn": [2, 73, 76, 217, 253, 259, 260, 267], "autom": [2, 8, 9, 54, 238, 251, 267], "appli": [2, 9, 32, 39, 41, 159, 182, 183, 185, 201, 202, 238, 251, 265, 267], "much": [2, 9, 39, 48, 53, 54, 70, 76, 86, 99, 157, 159, 175, 199, 202, 238, 243, 251, 255, 267], "possibl": [2, 8, 9, 39, 53, 54, 70, 74, 76, 77, 78, 85, 175, 186, 202, 215, 216, 231, 251, 265, 266, 267], "each": [2, 8, 9, 37, 39, 53, 54, 55, 59, 63, 65, 66, 73, 74, 76, 81, 85, 157, 159, 169, 171, 172, 175, 196, 197, 201, 202, 203, 215, 231, 235, 237, 251, 253, 256, 265, 267], "basi": [2, 9, 74, 158, 160, 170, 173, 238, 251, 267, 268], "1": [2, 6, 7, 8, 9, 10, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 163, 166, 167, 168, 169, 171, 172, 175, 177, 178, 179, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 215, 216, 222, 224, 225, 226, 227, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 268], "2": [2, 8, 9, 10, 12, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 164, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 181, 183, 184, 187, 188, 190, 191, 194, 196, 198, 201, 203, 204, 205, 206, 207, 213, 215, 216, 222, 225, 226, 227, 229, 231, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 251, 253, 254, 257, 258, 259, 260, 263, 265, 266, 268], "h": [2, 10, 39, 47, 77, 108, 110, 148, 172, 267], "idomat": [2, 267], "style": [2, 8, 9, 10, 70, 73, 75, 78, 85, 99, 100, 108, 118, 127, 132, 147, 148, 171, 259, 265, 267, 268], "e": [2, 8, 9, 10, 37, 39, 53, 54, 76, 77, 78, 79, 80, 81, 84, 85, 139, 154, 157, 158, 159, 169, 171, 202, 231, 249, 251, 265, 266, 267], "g": [2, 8, 9, 37, 39, 46, 48, 53, 54, 76, 77, 79, 80, 81, 84, 85, 111, 113, 126, 139, 154, 158, 159, 169, 175, 202, 206, 207, 231, 248, 249, 251, 265, 266, 267], "import": [2, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 62, 65, 66, 68, 70, 73, 74, 75, 76, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267], "prefer": [2, 8, 9, 10, 53, 54, 70, 73, 202, 245, 265, 267], "oper": [2, 9, 30, 37, 38, 39, 54, 55, 56, 57, 58, 59, 66, 73, 75, 76, 80, 84, 85, 159, 171, 172, 174, 201, 231, 263, 265, 266, 267], "pep8": [2, 10, 267], "convent": [2, 70, 73, 75, 81, 85, 171, 174, 231, 267], "directori": [2, 10, 39, 67, 70, 73, 75, 76, 85, 158, 267], "how": [2, 9, 10, 13, 15, 22, 28, 29, 31, 32, 35, 37, 38, 39, 50, 73, 74, 75, 77, 78, 84, 123, 133, 134, 135, 144, 151, 157, 159, 175, 202, 204, 214, 222, 226, 231, 238, 251, 258, 260, 265, 266, 267], "concis": [2, 81, 267], "paragraph": [2, 81, 215, 267], "subsect": [2, 9, 267], "admonit": [2, 267], "clear": [2, 8, 9, 10, 77, 81, 84, 85, 267], "refer": [2, 8, 38, 47, 53, 73, 74, 75, 77, 81, 86, 158, 174, 175, 202, 251, 267], "output": [2, 8, 10, 37, 39, 53, 54, 65, 70, 73, 74, 75, 84, 85, 86, 175, 198, 217, 238, 266, 267], "screen": [2, 70, 90, 157, 267], "type": [2, 9, 37, 38, 39, 42, 50, 53, 55, 56, 57, 58, 59, 60, 63, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 172, 174, 217, 235, 238, 251, 253, 254, 257, 258, 260, 263, 265, 266, 267], "found": [2, 37, 39, 45, 54, 73, 74, 75, 76, 77, 188, 202, 216, 251, 265, 266, 267], "take": [2, 8, 9, 10, 33, 37, 39, 54, 85, 157, 159, 171, 172, 175, 198, 203, 215, 231, 238, 239, 248, 251, 266, 267], "long": [2, 8, 9, 53, 54, 85, 171, 251, 265, 267], "time": [2, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 65, 68, 76, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 206, 207, 208, 209, 210, 211, 212, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267], "cach": [2, 9, 38, 54, 73, 85, 183, 267], "subsequ": [2, 267], "faster": [2, 8, 38, 39, 73, 77, 171, 175, 215, 267], "builder": [2, 267], "bit": [2, 8, 9, 37, 39, 53, 59, 81, 85, 157, 171, 175, 251, 267], "difficult": [2, 9, 39, 70, 76, 202, 267], "you": [2, 8, 10, 37, 39, 53, 54, 70, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 157, 158, 159, 171, 172, 175, 198, 202, 215, 216, 231, 251, 260, 265, 266, 267], "might": [2, 8, 9, 70, 85, 159, 175, 238, 251, 253, 263, 265, 267], "some": [2, 8, 9, 10, 23, 37, 38, 39, 46, 47, 54, 59, 65, 66, 70, 73, 74, 75, 76, 80, 82, 84, 85, 124, 151, 158, 159, 171, 174, 175, 178, 179, 182, 183, 185, 202, 214, 215, 231, 251, 265, 266, 267], "tex": [2, 10, 267], "tweak": [2, 38, 73, 121, 144, 145, 267], "rst": [2, 3, 10, 70, 86, 206, 267], "usual": [2, 8, 9, 39, 53, 56, 62, 66, 159, 171, 251, 267], "enough": [2, 9, 39, 199, 238, 267], "work": [2, 8, 9, 10, 37, 39, 48, 53, 54, 65, 66, 73, 75, 77, 81, 85, 86, 144, 157, 171, 172, 199, 202, 221, 231, 238, 251, 253, 259, 260, 263, 265, 267], "around": [2, 8, 9, 46, 54, 83, 85, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 171, 172, 178, 199, 201, 202, 215, 216, 251, 265, 267], "problem": [2, 8, 9, 10, 38, 39, 40, 42, 47, 48, 52, 54, 61, 64, 73, 74, 75, 76, 78, 175, 191, 217, 221, 232, 234, 238, 239, 245, 250, 253, 263, 265, 267, 268], "26": [2, 10, 39, 54, 81, 85, 86, 238, 253, 263, 265], "4": [2, 3, 8, 9, 10, 12, 13, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 37, 39, 41, 42, 43, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 63, 65, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 90, 91, 98, 99, 106, 107, 108, 110, 115, 116, 120, 121, 122, 124, 125, 126, 128, 131, 133, 136, 137, 138, 139, 140, 143, 145, 147, 149, 151, 154, 157, 159, 169, 171, 172, 175, 177, 178, 179, 180, 184, 188, 189, 190, 191, 192, 193, 197, 200, 201, 202, 203, 209, 220, 221, 225, 226, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 268], "0": [2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 74, 77, 78, 79, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268], "3": [2, 8, 9, 10, 12, 14, 15, 16, 17, 19, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 65, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 97, 98, 99, 107, 108, 110, 111, 113, 116, 117, 119, 120, 123, 125, 126, 127, 128, 136, 139, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 158, 159, 161, 163, 167, 169, 171, 172, 175, 177, 178, 179, 181, 182, 183, 185, 188, 190, 191, 199, 201, 202, 203, 204, 207, 209, 211, 215, 216, 219, 221, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 251, 253, 254, 255, 257, 258, 259, 260, 263, 265, 266, 268], "8": [2, 8, 9, 10, 12, 19, 20, 21, 24, 25, 26, 27, 37, 39, 41, 43, 46, 48, 50, 53, 54, 59, 62, 65, 74, 76, 77, 79, 81, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 119, 123, 134, 139, 143, 144, 145, 146, 152, 154, 157, 159, 168, 171, 172, 175, 181, 187, 192, 201, 202, 203, 206, 207, 208, 209, 210, 211, 215, 219, 221, 222, 231, 233, 234, 235, 236, 237, 238, 239, 248, 251, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268], "patsi": [2, 267], "6": [2, 8, 10, 13, 17, 24, 28, 33, 37, 39, 41, 43, 44, 48, 50, 53, 54, 55, 57, 58, 59, 65, 76, 77, 79, 80, 81, 82, 85, 86, 87, 90, 98, 99, 110, 119, 126, 128, 136, 137, 138, 145, 146, 157, 158, 159, 165, 171, 172, 175, 179, 181, 184, 187, 188, 193, 201, 202, 203, 208, 209, 210, 211, 215, 231, 233, 234, 236, 237, 238, 244, 245, 247, 248, 249, 251, 254, 258, 259, 260, 263, 265, 266, 267, 268], "pyarrow": [2, 267], "15": [2, 8, 10, 21, 24, 33, 37, 39, 44, 46, 53, 54, 79, 81, 85, 86, 106, 108, 110, 159, 172, 183, 211, 215, 224, 234, 235, 238, 247, 251, 266, 267], "post1": [2, 267], "22": [2, 8, 39, 54, 81, 85, 86, 156, 159, 175, 199, 238, 265], "14": [2, 8, 9, 24, 33, 37, 39, 43, 48, 50, 53, 54, 76, 79, 81, 85, 86, 106, 115, 159, 172, 202, 233, 238, 251, 267], "13": [2, 8, 29, 37, 39, 53, 54, 76, 79, 81, 85, 86, 155, 157, 159, 171, 172, 175, 196, 202, 203, 224, 231, 238, 254, 257, 263, 267], "7": [2, 8, 10, 37, 39, 44, 46, 48, 53, 54, 56, 59, 65, 76, 77, 79, 81, 82, 85, 86, 87, 98, 99, 110, 157, 159, 171, 172, 175, 178, 187, 201, 202, 204, 209, 213, 223, 224, 226, 231, 233, 236, 237, 238, 251, 253, 258, 260, 263, 265, 267, 268], "copybutton": [2, 267], "coverag": [2, 267], "pillow": [2, 8, 267], "pooch": [2, 267], "ipython": [2, 39, 62, 73, 74, 75, 77, 78, 80, 81, 85, 159, 172, 251, 267], "pickleshar": [2, 267], "pre": [2, 8, 76, 238, 267], "commit": [2, 54, 70, 267], "request": [2, 9, 39, 70, 253, 259, 267], "sphinxcontrib": [2, 267], "jqueri": [2, 267], "ensur": [2, 39, 159, 267], "virtual": [2, 9, 267], "instal": [2, 8, 10, 65, 73, 75, 80, 85, 86, 157, 159, 231, 265, 266, 267], "r": [2, 8, 9, 10, 12, 15, 24, 26, 31, 37, 43, 45, 46, 55, 65, 73, 75, 77, 82, 89, 94, 95, 96, 97, 111, 113, 131, 133, 134, 139, 148, 149, 151, 152, 154, 157, 158, 163, 169, 175, 196, 197, 199, 206, 207, 224, 233, 235, 248, 251, 253, 254, 257, 258, 259, 260, 263, 265, 267], "txt": [2, 6, 8, 67, 77, 85, 86, 158, 168, 172, 199, 203, 253, 259, 260, 267], "also": [2, 8, 9, 10, 37, 39, 53, 54, 56, 74, 76, 77, 79, 81, 84, 85, 157, 158, 159, 175, 181, 201, 202, 216, 231, 238, 239, 251, 253, 258, 260, 265, 266, 267], "need": [2, 8, 9, 10, 37, 39, 53, 54, 65, 67, 70, 73, 75, 77, 85, 157, 159, 171, 172, 175, 202, 203, 215, 216, 217, 231, 245, 251, 258, 259, 260, 263, 265, 267], "system": [2, 10, 38, 39, 54, 61, 70, 73, 75, 76, 84, 157, 175, 202, 205, 213, 215, 251, 267, 268], "develop": [2, 9, 10, 39, 65, 76, 157, 267], "header": [2, 8, 9, 39, 253, 259, 260, 267], "python3": [2, 48, 76, 85, 86, 181, 236, 238, 267], "dev": [2, 8, 9, 10, 54, 76, 159, 171, 175, 267], "debian": [2, 267], "compil": [2, 8, 10, 39, 54, 73, 75, 84, 175, 202, 267], "like": [2, 8, 9, 38, 39, 53, 54, 55, 62, 70, 73, 74, 76, 77, 79, 84, 157, 159, 196, 202, 251, 253, 259, 265, 266, 267], "gcc": [2, 39, 86, 267], "gnu": [2, 10, 39, 202, 267], "full": [2, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 70, 73, 75, 76, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 267], "latex": [2, 86, 157, 267], "distribut": [2, 73, 75, 76, 84, 172, 176, 194, 205, 213, 231, 251, 253, 265, 267, 268], "live": [2, 39, 65, 231, 259, 267], "texliv": [2, 267], "extra": [2, 9, 85, 202, 267], "font": [2, 70, 85, 86, 157, 267], "latexmk": [2, 267], "ubuntu": [2, 265, 267], "dvipng": [2, 267], "git": [2, 39, 70, 267], "inkscap": [2, 267], "modifi": [2, 8, 9, 10, 37, 39, 70, 77, 78, 81, 85, 157, 159, 175, 201, 202, 231, 251, 267], "export": [2, 39, 85, 267], "filenam": [2, 10, 39, 54, 76, 77, 86, 203, 267], "2024": [2, 73, 86, 253, 254, 257, 258, 260, 263], "svg": [2, 267], "symlink": [2, 267], "correct": [2, 39, 53, 73, 157, 159, 203, 217, 237, 238, 240, 253, 266, 267], "materi": [3, 70, 267], "under": [3, 9, 10, 53, 70, 73, 84, 217, 234, 249, 265, 267], "creativ": [3, 267], "attribut": [3, 38, 39, 55, 56, 57, 58, 59, 66, 73, 76, 77, 79, 83, 159, 204, 214, 231, 251, 253, 265, 267], "intern": [3, 8, 53, 54, 267], "cc": [3, 267], "http": [3, 8, 9, 10, 37, 54, 64, 70, 74, 76, 77, 81, 82, 84, 85, 86, 158, 159, 183, 215, 231, 238, 251, 253, 256, 259, 260, 265, 266, 267], "creativecommon": [3, 267], "mask": [5, 7, 12, 15, 22, 24, 26, 28, 29, 30, 33, 34, 35, 37, 38, 54, 73, 75, 85, 171, 172, 174, 175, 178, 185, 201, 202, 204, 214, 219, 227, 231, 268], "download": [5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 67, 68, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "sourc": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 67, 68, 70, 73, 74, 76, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "auto_examples_python": [5, 11, 37, 40, 53, 67, 99, 157, 160, 173, 176, 202, 205, 218, 231, 232, 251, 252, 265], "zip": [5, 10, 11, 37, 40, 42, 53, 67, 85, 86, 99, 122, 133, 151, 157, 160, 173, 176, 202, 205, 218, 231, 232, 244, 248, 251, 252, 265], "auto_examples_jupyt": [5, 11, 37, 40, 53, 67, 99, 157, 160, 173, 176, 202, 205, 218, 231, 232, 251, 252, 265], "go": [6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 70, 73, 75, 77, 78, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 206, 207, 208, 209, 210, 211, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "end": [6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 76, 77, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 206, 207, 208, 209, 210, 211, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263], "pyplot": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66, 68, 70, 73, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "plt": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66, 68, 70, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "loadtxt": [6, 8, 158, 168, 172, 199, 202], "popul": [6, 8, 73, 158, 160, 170, 172, 173, 175, 199, 251, 268], "ma": [6, 8, 74, 171], "masked_arrai": [6, 38, 73, 171], "year": [6, 8, 158, 168, 172, 176, 195, 199, 200, 202, 212, 216, 251, 253, 259, 260, 268], "bad_year": [6, 8], "1903": [6, 8, 158], "1910": [6, 8], "1917": [6, 8], "1918": [6, 8], "show": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 65, 68, 70, 74, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 207, 208, 209, 210, 211, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263], "total": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 68, 69, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 268], "run": [6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 68, 73, 75, 76, 78, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263], "script": [6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 68, 70, 73, 75, 78, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 203, 206, 207, 208, 209, 210, 211, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263], "minut": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 76, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263], "071": [6, 7, 220, 226, 230, 268], "second": [6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 68, 74, 77, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 206, 207, 208, 209, 210, 211, 212, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266], "plot_maskedstat": [6, 7, 268], "ipynb": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263], "py": [6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 65, 68, 69, 70, 76, 78, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 268], "00": [7, 36, 47, 52, 53, 69, 98, 118, 130, 155, 156, 157, 170, 187, 194, 200, 202, 213, 230, 237, 238, 250, 251, 253, 254, 257, 258, 260, 261, 263, 264, 268], "execut": [7, 9, 36, 38, 39, 52, 54, 69, 73, 76, 78, 79, 80, 84, 85, 98, 118, 155, 156, 170, 172, 194, 200, 213, 230, 250, 261, 264, 268], "advanced_numpi": [7, 268], "auto_exampl": [7, 36, 52, 69, 70, 98, 118, 155, 156, 170, 194, 200, 213, 230, 231, 250, 261, 264], "mem": [7, 36, 52, 69, 98, 118, 155, 156, 170, 194, 200, 213, 230, 250, 261, 264, 268], "mb": [7, 36, 52, 62, 69, 98, 118, 155, 156, 170, 194, 200, 213, 230, 250, 261, 264, 268], "tool": [8, 10, 37, 39, 53, 54, 73, 74, 76, 85, 174, 202, 251, 256, 265], "Its": [8, 83, 202], "purpos": [8, 9, 53, 76, 197, 202, 265], "implement": [8, 38, 39, 53, 54, 66, 73, 77, 81, 85, 175, 181, 197, 202, 203, 231, 251, 265], "effici": [8, 10, 37, 53, 54, 55, 56, 57, 58, 60, 63, 66, 76, 77, 158, 159, 175, 202, 251], "item": [8, 9, 42, 55, 56, 57, 58, 59, 60, 62, 66, 77, 78, 81, 159, 203, 238, 251], "understand": [8, 9, 10, 39, 54, 76, 77, 85, 175, 203, 251, 265], "detail": [8, 39, 53, 73, 74, 75, 77, 82, 175, 202, 215, 231, 240, 265], "flexibl": [8, 60, 63], "shortcut": 8, "anatomi": 8, "consequ": [8, 9], "tip": [8, 70, 73, 75], "do": [8, 9, 10, 29, 31, 33, 35, 39, 41, 48, 50, 53, 54, 70, 76, 85, 143, 157, 158, 159, 171, 172, 175, 202, 204, 214, 216, 237, 251, 253, 263, 265, 266], "want": [8, 9, 10, 35, 39, 53, 54, 70, 74, 76, 79, 81, 83, 85, 157, 159, 172, 175, 215, 216, 227, 231, 248, 251, 253, 265], "one": [8, 9, 10, 16, 21, 22, 37, 39, 43, 44, 53, 66, 70, 74, 76, 77, 78, 80, 81, 83, 84, 85, 157, 158, 159, 171, 172, 175, 202, 203, 215, 231, 238, 251, 253, 260, 265, 266], "offer": [8, 77, 85, 202], "sever": [8, 10, 37, 70, 76, 77, 83, 85, 147, 157, 159, 202, 225, 231, 238, 251, 266], "wai": [8, 9, 21, 38, 39, 41, 54, 70, 73, 74, 76, 85, 86, 157, 159, 175, 181, 202, 215, 238, 251, 266], "wrap": [8, 39, 198], "ani": [8, 9, 39, 54, 66, 70, 73, 75, 76, 81, 83, 85, 154, 157, 159, 172, 175, 202, 215, 238, 251, 266], "without": [8, 9, 43, 53, 78, 157, 172, 175, 216, 249, 251], "unnecessari": [8, 39], "copi": [8, 38, 39, 47, 54, 73, 75, 76, 77, 83, 85, 86, 172, 174, 175, 181, 182, 197, 201, 202, 203, 251, 263], "them": [8, 9, 10, 39, 53, 54, 70, 74, 76, 77, 81, 130, 157, 159, 171, 175, 202, 215, 216, 231, 246, 248, 249, 251, 265, 266], "pep": [8, 9, 39], "3118": 8, "cython": [8, 9, 38, 54, 73], "coupl": [8, 10, 119, 265], "raw": [8, 37, 183, 216], "locat": [8, 9, 39, 73, 75, 85, 86, 99, 100, 118, 202, 216, 268], "element": [8, 37, 39, 55, 56, 57, 58, 59, 60, 62, 63, 74, 77, 78, 85, 159, 175, 201, 202, 214, 231], "typedef": 8, "struct": [8, 24, 37, 39], "pyarrayobject": [8, 39], "pyobject_head": 8, "char": [8, 39], "pyarray_descr": [8, 39], "descr": [8, 251], "int": [8, 12, 15, 22, 24, 25, 26, 28, 30, 31, 34, 37, 39, 48, 74, 76, 77, 79, 80, 127, 139, 154, 159, 171, 197, 201, 202, 204, 219, 226, 231, 240], "nd": [8, 66], "npy_intp": [8, 39], "stuff": [8, 172, 198], "pyobject": [8, 39], "flag": [8, 9, 10, 39, 76, 202, 209, 211, 215], "weakreflist": 8, "x": [8, 10, 13, 21, 24, 25, 29, 30, 31, 33, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 62, 65, 68, 70, 74, 76, 79, 80, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 110, 121, 122, 123, 124, 125, 127, 130, 131, 132, 134, 135, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 157, 158, 159, 161, 163, 164, 166, 167, 169, 171, 172, 175, 177, 178, 179, 180, 181, 186, 187, 188, 189, 201, 202, 203, 209, 211, 215, 227, 231, 233, 234, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 257, 258, 259, 260, 265, 266], "dtype": [8, 35, 37, 39, 53, 55, 56, 57, 58, 59, 60, 63, 65, 158, 159, 171, 175, 181, 201, 202, 206, 207, 209, 211, 215, 216, 227, 231, 265], "int32": [8, 10, 59, 159, 171], "x01": 8, "x00": 8, "x02": 8, "x03": 8, "address": [8, 10, 37, 84, 265], "__array_interface__": 8, "64803824": 8, "whole": [8, 9, 37, 65, 157, 265], "fals": [8, 9, 23, 37, 39, 42, 48, 54, 65, 74, 76, 77, 78, 85, 86, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 140, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 159, 171, 172, 175, 177, 201, 202, 233, 251, 253, 265, 266], "none": [8, 9, 24, 37, 39, 48, 74, 76, 78, 81, 85, 86, 89, 95, 96, 97, 117, 134, 152, 157, 159, 201, 202, 234, 247, 251, 259, 260], "i4": [8, 159], "typestr": 8, "shape": [8, 10, 12, 13, 15, 16, 19, 20, 21, 23, 24, 26, 29, 31, 33, 37, 39, 47, 53, 55, 56, 57, 58, 59, 60, 63, 65, 66, 73, 75, 158, 159, 171, 172, 174, 182, 183, 185, 197, 198, 199, 201, 202, 204, 206, 216, 231, 238, 239, 241, 242, 246, 247, 249, 251, 257, 258, 265], "remind": [8, 77, 159, 172, 251], "two": [8, 9, 16, 35, 37, 39, 53, 54, 65, 70, 73, 74, 80, 81, 85, 159, 171, 175, 176, 194, 198, 202, 215, 217, 227, 231, 235, 238, 239, 251, 255, 266, 268], "mai": [8, 10, 37, 39, 48, 53, 54, 70, 74, 77, 79, 80, 81, 82, 85, 159, 171, 175, 202, 231, 251, 253, 265], "same": [8, 9, 10, 39, 53, 66, 70, 73, 76, 77, 78, 81, 83, 84, 85, 157, 159, 171, 175, 198, 202, 217, 251, 263, 266], "y": [8, 13, 24, 25, 29, 30, 31, 33, 35, 37, 39, 43, 45, 46, 47, 48, 50, 53, 68, 70, 80, 81, 90, 108, 110, 121, 122, 123, 124, 125, 127, 130, 131, 132, 134, 135, 139, 140, 143, 144, 145, 146, 149, 150, 152, 153, 154, 157, 158, 159, 161, 163, 164, 166, 167, 169, 171, 172, 175, 177, 178, 190, 191, 201, 202, 203, 206, 207, 209, 211, 215, 227, 231, 233, 234, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 257, 258, 259, 260, 265, 266], "9": [8, 10, 14, 16, 19, 20, 21, 30, 34, 35, 39, 41, 43, 50, 53, 54, 56, 59, 65, 74, 76, 78, 79, 81, 85, 86, 87, 90, 91, 98, 99, 108, 110, 117, 132, 157, 158, 159, 161, 170, 171, 172, 175, 178, 179, 196, 202, 209, 226, 229, 233, 234, 236, 237, 238, 245, 251, 252, 257, 260, 261, 265, 268], "doe": [8, 9, 10, 26, 39, 53, 66, 73, 74, 75, 77, 79, 80, 81, 84, 159, 181, 198, 202, 203, 251, 260, 265, 266], "own": [8, 10, 64, 70, 73, 74, 75, 77, 79, 81, 83, 85, 157, 159, 174, 251], "1234": 8, "repres": [8, 159, 202, 215, 216, 231, 251, 265, 266], "frombuff": 8, "int8": [8, 55, 56, 57, 58, 171], "true": [8, 9, 10, 13, 14, 17, 19, 20, 23, 27, 29, 31, 32, 35, 37, 39, 42, 48, 53, 65, 74, 77, 78, 79, 86, 95, 96, 97, 103, 133, 139, 151, 154, 157, 159, 171, 172, 175, 182, 183, 186, 187, 193, 201, 202, 227, 231, 233, 235, 236, 238, 243, 244, 246, 251, 253, 263, 265, 266], "c_contigu": 8, "f_contigu": 8, "owndata": 8, "writeabl": 8, "align": [8, 39, 70, 157], "writebackifcopi": 8, "indic": [8, 10, 24, 33, 35, 37, 54, 55, 57, 58, 63, 66, 77, 78, 159, 172, 175, 178, 197, 201, 202, 227, 231, 238, 240, 251, 253, 263, 265], "statu": [8, 53, 187, 202], "describ": [8, 9, 76, 81, 172, 196, 202, 215, 216, 231, 251, 265], "singl": [8, 9, 10, 39, 65, 76, 77, 202, 203, 215, 239, 251, 260, 263, 265], "scalar": [8, 53, 55, 77, 159, 175, 202], "int16": [8, 171], "float64": [8, 39, 53, 60, 63, 65, 159, 171], "et": [8, 54, 265], "al": [8, 54, 265], "str": [8, 76, 77, 79, 80, 237], "unicod": [8, 9, 77], "void": [8, 39, 204], "items": [8, 171], "byteord": 8, "big": [8, 54, 81], "endian": 8, "littl": [8, 39, 251], "applic": [8, 9, 10, 37, 38, 61, 73, 75, 76, 84, 159, 201, 202, 231, 238, 253], "field": [8, 99, 152, 156, 157, 171, 238, 268], "sub": [8, 55, 159, 175, 202, 265], "structur": [8, 9, 24, 25, 37, 38, 53, 54, 57, 58, 60, 61, 63, 73, 75, 76, 85, 174, 201, 202, 231, 251], "class": [8, 37, 38, 39, 55, 56, 57, 58, 59, 61, 64, 70, 73, 77, 80, 81, 82, 83, 85, 157, 159, 216, 231, 239, 245, 251, 266], "int64": [8, 55, 56, 57, 58, 59, 63, 159, 171], "chunk_id": 8, "riff": 8, "chunk_siz": 8, "unsign": [8, 171, 231], "wave": [8, 53, 159], "fmt_id": 8, "fmt": [8, 43, 48, 50, 157], "fmt_size": 8, "audio_fmt": 8, "num_channel": 8, "sample_r": 8, "byte_r": 8, "block_align": 8, "bits_per_sampl": 8, "data_id": 8, "data_s": 8, "44": [8, 35, 86, 159, 227, 231, 237, 251, 254, 265], "begin": [8, 74, 77, 81, 85, 157, 159, 202], "actual": [8, 10, 39, 57, 58, 62, 85, 175, 181, 202, 251, 265], "sound": [8, 9, 159, 251], "wav_header_dtyp": 8, "u4": 8, "32": [8, 10, 30, 37, 54, 81, 86, 139, 154, 159, 171, 175, 196, 202, 203, 216, 231, 237, 238, 253], "s4": [8, 171], "u2": 8, "s1": 8, "just": [8, 9, 70, 74, 76, 77, 80, 84, 85, 159, 251, 258], "fun": [8, 50, 53, 187, 202], "itself": [8, 9, 39, 53, 75, 81, 85, 251, 265], "cannot": [8, 9, 10, 39, 77, 81, 175, 202, 251, 266], "here": [8, 9, 10, 37, 39, 46, 47, 53, 54, 70, 74, 76, 77, 82, 83, 84, 85, 99, 157, 171, 172, 202, 227, 235, 238, 248, 251, 253, 260, 263, 265, 266], "wavread": 8, "mappingproxi": 8, "uint32": [8, 159, 171], "16": [8, 16, 21, 25, 33, 35, 37, 39, 48, 53, 54, 79, 81, 85, 86, 89, 97, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 119, 120, 142, 157, 171, 175, 201, 202, 215, 225, 227, 231, 238, 250], "uint16": [8, 171, 231], "20": [8, 10, 12, 16, 19, 20, 21, 26, 29, 30, 31, 35, 37, 39, 43, 44, 47, 48, 50, 51, 53, 54, 60, 79, 81, 85, 86, 108, 110, 119, 129, 133, 136, 148, 151, 157, 158, 159, 161, 167, 171, 172, 175, 181, 196, 209, 227, 231, 233, 234, 238, 242, 247, 251, 254, 257, 258, 265], "24": [8, 33, 36, 37, 39, 54, 81, 85, 86, 126, 137, 138, 139, 144, 154, 159, 175, 238, 266], "28": [8, 33, 35, 37, 39, 54, 81, 86, 175, 196, 202, 209, 227, 231, 238, 253, 258, 265], "34": [8, 10, 54, 81, 86, 147, 159, 203, 216, 237, 238, 263], "36": [8, 10, 81, 86, 237, 238, 251, 265], "40": [8, 10, 19, 20, 33, 37, 81, 86, 117, 140, 159, 175, 196, 237, 247, 265], "correspond": [8, 10, 37, 39, 53, 54, 55, 57, 58, 60, 70, 73, 77, 83, 157, 159, 172, 181, 202, 215, 216, 231, 238, 251, 253, 257, 258, 265], "name": [8, 9, 10, 39, 70, 74, 76, 77, 79, 81, 83, 85, 159, 171, 203, 231, 240, 251, 253, 254, 259, 260, 265], "offset": [8, 59, 89, 97, 131, 149, 157, 171, 202, 215, 254, 257, 260], "mini": 8, "spars": [8, 38, 54, 55, 56, 59, 60, 63, 64, 73, 85, 251], "onli": [8, 9, 22, 39, 41, 43, 53, 54, 62, 65, 66, 74, 76, 81, 82, 84, 85, 99, 157, 158, 159, 181, 197, 198, 202, 203, 215, 216, 231, 238, 239, 249, 251, 253, 260, 265], "offset_1": 8, "offset_2": 8, "offset_3": 8, "count": [8, 9, 39, 48, 73, 75, 77, 159, 201, 202, 235, 265], "start": [8, 9, 38, 39, 46, 57, 58, 65, 70, 73, 77, 80, 81, 84, 157, 159, 172, 175, 202, 231, 238, 251], "sampl": [8, 70, 73, 75, 171, 176, 186, 194, 214, 234, 237, 251, 268], "rate": [8, 65, 202, 235, 251], "f": [8, 9, 10, 13, 17, 18, 19, 20, 27, 31, 32, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 77, 82, 85, 122, 123, 127, 129, 144, 146, 148, 157, 159, 172, 177, 187, 188, 190, 191, 197, 202, 203, 215, 235, 236, 241, 245, 253, 254, 257, 258, 259, 260, 263, 265, 266], "wav_head": 8, "fromfil": [8, 9, 37], "close": [8, 9, 33, 37, 48, 53, 79, 82, 86, 157, 185, 201, 202, 203], "17402l": 8, "16l": 8, "16000l": 8, "32000l": 8, "t": [8, 9, 10, 35, 39, 43, 45, 46, 47, 48, 50, 53, 54, 66, 73, 74, 76, 77, 78, 79, 80, 81, 83, 85, 89, 97, 134, 135, 139, 152, 153, 154, 157, 158, 166, 167, 168, 169, 171, 172, 175, 180, 189, 190, 191, 197, 198, 202, 208, 209, 210, 211, 215, 217, 227, 231, 245, 249, 251, 253, 254, 257, 258, 260, 263], "17366l": 8, "16000": 8, "let": [8, 9, 10, 39, 53, 85, 157, 171, 172, 175, 201, 202, 215, 238, 251, 254, 265], "try": [8, 9, 10, 37, 39, 53, 54, 65, 70, 73, 75, 76, 157, 158, 159, 175, 198, 202, 203, 215, 238, 244, 251, 254, 263, 265, 266], "access": [8, 9, 10, 41, 54, 57, 58, 59, 60, 62, 65, 66, 76, 77, 85, 157, 159, 171, 216, 231, 251], "when": [8, 9, 37, 38, 39, 53, 54, 56, 59, 60, 63, 70, 73, 74, 76, 79, 80, 81, 85, 157, 159, 172, 175, 202, 215, 221, 231, 243, 251, 263, 265], "get": [8, 9, 38, 39, 46, 48, 66, 73, 80, 84, 85, 157, 175, 198, 202, 215, 243, 251, 253, 257, 258, 259, 263], "There": [8, 9, 10, 39, 70, 74, 76, 157, 159, 171, 199, 202, 251, 266], "exist": [8, 10, 39, 53, 76, 81, 82, 86, 198, 202, 203, 216, 251, 253, 259, 260, 266], "modul": [8, 9, 10, 18, 37, 38, 39, 54, 61, 66, 70, 73, 74, 75, 76, 77, 81, 84, 157, 175, 202, 203, 215, 216, 231, 265], "wavfil": 8, "audiolab": 8, "etc": [8, 9, 10, 37, 73, 74, 75, 77, 81, 83, 84, 85, 159, 171, 172, 175, 201, 202, 214, 231, 238, 251, 257, 258], "load": [8, 9, 37, 39, 42, 73, 75, 84, 86, 174, 182, 183, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 216, 220, 231, 238, 240, 241, 244, 248, 253, 254, 256, 259, 260, 265], "assign": [8, 9, 54, 63, 73, 75, 80, 81, 84, 159, 171, 172, 175, 201, 202, 231, 251, 263], "arithmet": [8, 10, 55, 56, 57, 58, 60, 63, 66, 77, 85, 175, 266], "manual": [8, 39, 73, 75, 76, 174, 251, 258], "astyp": [8, 12, 15, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 37, 39, 65, 158, 171, 182, 197, 201, 202, 204, 219, 226, 231], "nutshel": 8, "valu": [8, 9, 10, 33, 37, 39, 42, 48, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 73, 74, 75, 76, 77, 78, 80, 84, 157, 159, 166, 171, 172, 175, 181, 186, 191, 198, 201, 203, 215, 216, 231, 236, 237, 238, 251, 257, 258, 260, 263, 266], "operand": [8, 79, 175], "matter": [8, 39, 81, 251, 265], "largest": [8, 22, 65, 172], "safe": [8, 78, 86], "abl": [8, 9, 76, 83, 172, 251, 263, 265, 266], "both": [8, 39, 53, 54, 57, 58, 65, 74, 78, 157, 159, 175, 202, 227, 231, 251, 253, 266], "pick": [8, 9, 39, 172], "lose": [8, 157], "situat": [8, 10, 32, 39, 53, 249, 251], "256": [8, 12, 15, 21, 22, 24, 26, 28, 34, 37, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 123, 130, 144, 150, 157, 204, 226, 231, 254, 265], "257": 8, "258": 8, "259": 8, "260": 8, "setitem": 8, "exact": [8, 38, 65, 73, 74, 172], "rule": [8, 9, 39, 77, 81, 85, 159, 171, 172, 202, 251], "0x01": 8, "0x02": 8, "0x03": 8, "0x04": 8, "uint8": [8, 37, 158, 171, 231], "OR": 8, "float32": [8, 39, 65, 158, 171, 206, 207, 216], "switch": [8, 54, 202, 251, 265], "anoth": [8, 9, 10, 53, 77, 81, 82, 85, 86, 175, 202, 238, 249, 251, 253, 265, 266], "i2": 8, "513": 8, "1027": 8, "0x0201": 8, "0x0403": 8, "least": [8, 9, 38, 39, 70, 73, 75, 76, 202, 251, 253, 254, 257, 258, 260, 263, 265], "signific": [8, 175, 215, 265], "left": [8, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 74, 77, 78, 81, 89, 95, 96, 97, 105, 117, 120, 128, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 175, 178, 182, 183, 185, 198, 204, 214, 215, 233, 234, 237, 238, 241, 251], "creat": [8, 9, 37, 39, 42, 43, 48, 55, 56, 57, 58, 59, 60, 63, 65, 70, 73, 74, 75, 76, 77, 78, 82, 83, 84, 90, 157, 169, 172, 175, 181, 215, 218, 230, 231, 239, 242, 245, 246, 251, 260, 266, 268], "shorthand": [8, 85], "67305985": 8, "0x04030201": 8, "alter": [8, 9, 157], "adjust": [8, 46, 157, 175, 202, 231, 251], "328193": 8, "color": [8, 12, 15, 24, 26, 42, 43, 46, 48, 50, 73, 75, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 106, 107, 108, 109, 115, 116, 118, 123, 125, 129, 130, 139, 140, 144, 145, 148, 150, 154, 172, 175, 188, 197, 198, 204, 214, 229, 231, 233, 234, 237, 238, 239, 245, 246, 247, 248, 251, 254, 263, 268], "rgba": 8, "10": [8, 10, 12, 15, 17, 20, 22, 24, 26, 28, 29, 30, 34, 37, 39, 41, 42, 46, 48, 53, 54, 59, 62, 65, 76, 77, 78, 79, 81, 85, 86, 89, 97, 98, 102, 105, 106, 108, 110, 112, 115, 117, 123, 127, 133, 134, 144, 146, 151, 152, 157, 159, 171, 172, 175, 184, 185, 187, 188, 190, 196, 198, 199, 201, 202, 203, 204, 214, 215, 216, 225, 231, 234, 236, 238, 241, 245, 246, 247, 251, 258, 263, 265], "where": [8, 9, 10, 39, 54, 57, 58, 65, 76, 85, 86, 157, 159, 169, 175, 181, 202, 215, 231, 249, 251, 265], "last": [8, 9, 10, 39, 53, 54, 56, 57, 58, 70, 73, 76, 77, 79, 81, 158, 159, 175, 216, 217, 260, 265], "three": [8, 9, 39, 55, 56, 57, 58, 70, 77, 81, 159, 204, 214, 215, 251, 265, 266], "alpha": [8, 32, 37, 89, 99, 100, 118, 119, 120, 123, 126, 130, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 231, 241, 246, 249, 251, 263, 268], "channel": [8, 74, 158, 231], "assert": [8, 39, 203], "i1": 8, "occupi": 8, "exactli": [8, 9, 53, 76, 78, 202, 265], "769": 8, "1026": 8, "happen": [8, 9, 10, 202], "look": [8, 9, 10, 39, 47, 53, 54, 73, 74, 77, 79, 99, 156, 157, 159, 175, 216, 217, 238, 260, 266, 268], "store": [8, 9, 39, 43, 48, 50, 55, 56, 57, 58, 59, 60, 62, 63, 66, 77, 86, 159, 203, 216, 251, 265], "tobyt": 8, "x04": 8, "stand": [8, 9, 157], "hexadecim": 8, "so": [8, 9, 10, 39, 53, 54, 74, 76, 80, 85, 157, 159, 172, 175, 198, 202, 204, 214, 215, 216, 231, 238, 251, 260, 266], "ask": [8, 39, 54, 73, 75, 157, 251, 263], "which": [8, 9, 10, 37, 39, 53, 54, 62, 65, 70, 76, 77, 78, 80, 81, 83, 84, 85, 86, 125, 145, 158, 159, 171, 172, 175, 191, 202, 204, 214, 215, 216, 238, 243, 247, 251, 253, 263, 265, 266], "therefor": [8, 9, 77, 85, 157, 201, 202, 215], "becom": [8, 9, 39, 70, 76, 251], "expect": [8, 9, 66, 159, 169, 175, 202, 231, 233, 235, 237, 243, 251], "0x0103": 8, "convert": [8, 33, 37, 39, 53, 56, 60, 65, 66, 73, 82, 202, 203, 231, 257, 258, 260], "decim": [8, 9, 78, 203, 266], "result": [8, 9, 37, 39, 41, 42, 46, 53, 54, 65, 74, 76, 85, 90, 154, 157, 159, 169, 172, 175, 179, 197, 202, 203, 205, 207, 213, 215, 216, 231, 239, 242, 243, 251, 253, 254, 257, 258, 260, 263, 265, 268], "But": [8, 9, 76, 78, 81, 85, 157, 171, 175, 251, 265], "your": [8, 9, 10, 37, 38, 39, 54, 70, 73, 75, 76, 77, 78, 79, 80, 81, 84, 86, 157, 159, 172, 203, 231, 251, 265], "most": [8, 9, 10, 37, 39, 54, 56, 57, 58, 76, 78, 79, 81, 84, 85, 157, 159, 175, 202, 215, 231, 238, 251, 266], "number": [8, 9, 10, 57, 58, 65, 66, 73, 74, 75, 76, 79, 84, 85, 157, 158, 171, 172, 175, 179, 181, 192, 197, 199, 201, 203, 216, 231, 234, 236, 237, 238, 251, 253, 259, 260, 263, 266], "0x0301": 8, "termin": [8, 53, 65, 80, 85, 187, 202], "verifi": [8, 175, 253], "doesn": [8, 9, 74, 81], "directli": [8, 9, 39, 56, 59, 74, 85, 157, 175, 197, 202, 215, 238, 251], "explain": [8, 43, 49, 51, 54, 70, 78, 85, 157, 171, 231, 234, 251, 254, 265], "well": [8, 9, 10, 37, 39, 46, 53, 65, 70, 73, 74, 75, 76, 78, 85, 157, 159, 174, 175, 231, 238, 251, 266], "question": [8, 9, 231, 265], "A": [8, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 54, 61, 66, 67, 69, 70, 73, 76, 77, 78, 85, 86, 99, 129, 131, 133, 134, 135, 139, 156, 157, 159, 166, 171, 172, 175, 176, 185, 192, 194, 197, 202, 215, 217, 231, 232, 234, 250, 253, 263, 266, 268], "x05": 8, "x06": 8, "x07": 8, "x08": 8, "At": [8, 53, 85, 216, 251], "answer": [8, 9, 10, 39, 74, 251], "jump": [8, 10, 53, 175], "next": [8, 9, 10, 39, 78, 85, 157, 175, 251], "per": [8, 54, 73, 76, 90, 157, 159, 171, 175, 192, 251, 259, 260], "byte_offset": 8, "flat": [8, 40, 52, 268], "simpl": [8, 9, 10, 23, 24, 26, 30, 34, 37, 39, 54, 59, 67, 69, 70, 73, 75, 76, 77, 85, 99, 129, 130, 131, 133, 134, 135, 156, 172, 175, 176, 177, 179, 194, 195, 200, 202, 217, 218, 222, 230, 231, 232, 234, 238, 240, 250, 252, 259, 260, 261, 266, 268], "built": [8, 9, 39, 54, 73, 76, 78, 79, 186, 231, 237], "return": [8, 9, 10, 24, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 53, 54, 65, 73, 74, 75, 76, 77, 78, 79, 84, 117, 123, 127, 144, 146, 157, 159, 166, 172, 175, 177, 179, 181, 187, 188, 190, 191, 196, 202, 203, 207, 209, 211, 215, 231, 234, 247, 251, 265, 266], "default": [8, 9, 53, 65, 66, 73, 74, 75, 76, 81, 85, 159, 187, 216, 231, 236, 238, 241, 251, 259, 265], "caus": [8, 9], "confus": [8, 9, 53, 85, 237, 238, 251], "inspect": [8, 10, 37, 54, 202, 215, 265], "preserv": [8, 9, 37, 159], "row": [8, 54, 56, 57, 59, 60, 63, 66, 74, 157, 158, 159, 172, 175, 197, 202, 251, 265], "column": [8, 55, 58, 60, 63, 66, 74, 157, 158, 159, 172, 175, 197, 203, 251, 253, 255, 256, 259, 265], "similarli": [8, 9, 10, 53, 159, 197, 202], "higher": [8, 159, 175, 231, 251, 266], "vari": [8, 9, 39, 74, 231, 234, 251], "fastest": [8, 53, 54], "smaller": [8, 37, 54, 157, 158, 201, 202, 204, 214, 231, 249, 251, 255], "mathrm": 8, "d_1": 8, "d_2": 8, "d_n": 8, "s_1": 8, "s_2": 8, "s_n": 8, "s_j": 8, "d_": 8, "j": [8, 10, 57, 58, 62, 65, 159, 166, 172, 175, 215, 246], "n": [8, 9, 10, 12, 15, 22, 24, 26, 28, 34, 37, 54, 55, 62, 65, 66, 74, 76, 77, 81, 88, 122, 123, 127, 129, 130, 132, 133, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 171, 190, 201, 202, 203, 208, 209, 210, 211, 215, 216, 226, 231, 259, 266], "behavior": [8, 53, 159, 216, 251, 263], "transposit": [8, 175], "affect": [8, 39, 77, 157, 259, 265], "differ": [8, 9, 10, 16, 37, 38, 39, 46, 47, 48, 54, 59, 70, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 108, 110, 116, 117, 157, 158, 159, 172, 174, 175, 201, 202, 204, 214, 215, 216, 231, 234, 251, 252, 253, 254, 256, 259, 260, 261, 263, 268], "prior": [8, 53], "could": [8, 9, 10, 39, 54, 78, 85, 157, 171, 175, 202, 203, 239, 251], "incorrect": [8, 39], "larg": [8, 37, 39, 53, 54, 65, 74, 76, 77, 84, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 231, 234, 238, 251, 253, 255, 263, 265, 266], "sinc": [8, 9, 33, 39, 81, 82, 85, 157, 202, 251, 266], "includ": [8, 9, 10, 39, 53, 65, 70, 73, 76, 85, 157, 159, 202, 217, 251], "check": [8, 10, 37, 39, 53, 65, 70, 85, 157, 159, 172, 175, 181, 201, 202, 203, 204, 214, 216, 222, 231, 251, 265, 266], "overlap": [8, 35, 227, 231], "guarante": [8, 39, 175, 202], "consist": [8, 39, 53, 77, 159, 202, 238, 251], "non": [8, 10, 37, 38, 39, 40, 49, 52, 60, 63, 73, 75, 76, 84, 201, 202, 217, 232, 250, 253, 263, 265, 268], "produc": [8, 9, 37, 202, 215], "howev": [8, 9, 10, 39, 53, 54, 74, 76, 77, 80, 85, 159, 175, 202, 216, 238, 251, 263, 265], "being": [8, 9, 63, 85, 251, 265], "ultim": 8, "than": [8, 9, 10, 37, 48, 53, 54, 55, 70, 73, 74, 75, 76, 77, 85, 159, 175, 201, 202, 204, 214, 215, 231, 251, 255, 260, 265], "otherwis": [8, 9, 53, 85, 159], "everyth": [8, 9, 74, 75, 76, 78, 175], "possibli": [8, 10], "pointer": [8, 39], "never": [8, 171, 263], "800": 8, "80": [8, 35, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 157, 159, 215, 225, 227, 231, 237, 238, 247, 251, 265], "1600": 8, "240": 8, "swap": [8, 10, 39], "reshap": [8, 12, 23, 37, 39, 47, 55, 59, 65, 73, 75, 172, 174, 204, 237, 238, 239, 247], "plai": [8, 157], "arang": [8, 13, 24, 25, 31, 37, 39, 42, 54, 59, 105, 106, 107, 108, 110, 115, 116, 117, 121, 122, 131, 133, 140, 142, 149, 151, 157, 159, 164, 169, 172, 175, 181, 187, 188, 192, 196, 202, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 234, 247, 251], "far": [8, 9, 59, 76, 157, 202, 215, 251], "given": [8, 9, 10, 39, 53, 65, 81, 85, 157, 159, 171, 172, 175, 202, 215, 216, 231, 238, 251, 265, 266], "lib": [8, 10, 39, 48, 85, 86, 181, 236, 238, 259, 260], "stride_trick": [8, 10], "as_strid": [8, 10], "stai": 8, "insid": [8, 9, 10, 37, 70, 74, 81, 85, 157, 216, 231], "bound": [8, 9, 10, 11, 36, 37, 38, 39, 43, 73, 77, 177, 198, 202, 268], "fakedim": 8, "hint": [8, 39, 85, 159, 172, 175, 202, 203, 251, 265, 266], "spoiler": 8, "someth": [8, 9, 39, 159, 251], "outer": [8, 105], "product": [8, 10, 55, 57, 58, 65, 66, 74], "x2": [8, 35, 39, 157, 227, 231, 246, 247], "y2": [8, 35, 122, 142, 157, 227, 231], "18": [8, 39, 54, 79, 80, 81, 85, 86, 159, 196, 202, 233, 257, 261, 265], "21": [8, 39, 54, 65, 77, 79, 81, 83, 85, 86, 159, 175, 196, 202, 203, 207, 212, 216, 234, 238, 251, 258, 265], "seem": [8, 10, 175, 216, 238, 251, 260, 265], "somehow": [8, 251], "familiar": [8, 39, 198, 202, 231], "newaxi": [8, 47, 48, 159, 164, 166, 172, 175, 198, 234, 238, 242, 251], "inde": [8, 9, 10, 54, 181, 248], "challeng": [8, 46, 47, 238], "matrix": [8, 38, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 73, 74, 159, 172, 175, 202, 214, 237, 238, 253, 254, 257, 258, 260, 263, 265, 266], "assum": [8, 66, 216, 253, 254, 257, 258, 260, 263, 265], "x_diag": 8, "super": 8, "And": [8, 39, 43, 50, 70, 85, 159, 179, 181, 203, 215, 237, 239, 251], "move": [8, 54, 73, 75, 76, 86, 159, 251], "diag": [8, 54, 159, 202], "tensor": 8, "trace": [8, 48], "rang": [8, 9, 10, 22, 24, 28, 29, 37, 41, 48, 53, 60, 65, 73, 74, 75, 77, 79, 84, 102, 104, 109, 111, 112, 113, 114, 129, 139, 148, 154, 157, 158, 159, 166, 172, 175, 198, 201, 202, 203, 216, 231, 236, 237, 238, 244, 245, 248, 249, 251], "sum": [8, 9, 10, 22, 24, 28, 37, 47, 50, 53, 54, 56, 73, 75, 169, 172, 174, 201, 202, 203, 204, 214, 215, 237, 251, 265], "todo": 8, "s2": 8, "perform": [8, 9, 12, 24, 26, 53, 54, 65, 73, 77, 174, 198, 201, 202, 217, 232, 235, 236, 238, 250, 257, 258, 263, 265, 266, 268], "20000": [8, 251], "67": [8, 33, 37, 53, 237, 238, 251, 258], "out": [8, 9, 10, 37, 39, 48, 54, 65, 74, 76, 77, 78, 79, 81, 85, 86, 158, 159, 175, 182, 198, 201, 202, 203, 238, 251, 255, 265], "timeit": [8, 38, 39, 73, 76, 159, 171, 175], "17": [8, 39, 53, 54, 79, 81, 85, 86, 118, 159, 194, 196, 202, 238, 250], "u": [8, 9, 10, 39, 42, 43, 54, 77, 78, 85, 134, 139, 152, 154, 157, 159, 171, 175, 198, 201, 202, 251, 254, 263, 265, 266], "39": [8, 10, 81, 86, 199, 238, 251, 263, 265], "loop": [8, 10, 38, 39, 54, 60, 73, 75, 76, 77, 159, 171, 172, 175, 203, 251], "mean": [8, 9, 11, 12, 15, 22, 24, 26, 28, 34, 36, 37, 42, 54, 62, 73, 76, 78, 81, 157, 159, 169, 171, 172, 175, 202, 204, 214, 226, 231, 234, 235, 238, 241, 251, 253, 268], "std": [8, 19, 20, 33, 37, 54, 76, 159, 171, 172, 175, 182, 201, 202, 251, 253, 254, 257, 258, 260, 263, 265], "100": [8, 10, 29, 33, 37, 41, 46, 47, 48, 53, 54, 65, 68, 70, 76, 78, 90, 159, 172, 175, 178, 179, 180, 189, 190, 201, 202, 204, 206, 207, 216, 219, 230, 231, 238, 239, 242, 245, 251, 266, 268], "000": [8, 54, 76, 159, 171, 251, 253, 254, 257, 258, 260, 263, 265], "33": [8, 10, 53, 54, 81, 86, 159, 196, 202, 238, 251, 253], "536": 8, "pull": [8, 39, 70, 238], "If": [8, 9, 10, 39, 53, 54, 70, 74, 76, 78, 80, 81, 85, 157, 158, 159, 171, 175, 202, 215, 231, 251, 253, 265, 266], "consecut": [8, 9, 192, 202], "fit": [8, 12, 37, 38, 39, 40, 52, 73, 74, 75, 76, 158, 160, 170, 173, 176, 194, 195, 200, 205, 213, 216, 217, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 257, 258, 259, 260, 263, 265, 268], "small": [8, 10, 15, 18, 37, 39, 43, 53, 54, 62, 76, 83, 159, 192, 201, 202, 215, 231, 234, 238, 253], "rightarrow": [8, 266], "fewer": [8, 65, 76, 251], "transfer": [8, 54], "numexpr": [8, 54], "mitig": 8, "evalu": [8, 9, 39, 46, 53, 77, 78, 81, 177, 191, 202, 216, 238, 251, 265, 266], "express": [8, 38, 53, 73, 75, 77, 84, 157, 159, 238, 251, 253, 254, 265, 266], "numba": 8, "w": [8, 9, 10, 47, 54, 65, 82, 86, 111, 112, 114, 139, 148, 154, 233, 248], "coher": 8, "elementwis": [8, 66, 73, 75, 172, 174, 202], "subtract": 8, "special": [8, 9, 10, 38, 59, 66, 73, 75, 76, 77, 81, 83, 85, 157, 171, 265, 266], "automat": [8, 9, 10, 39, 54, 73, 76, 78, 202, 204, 214, 229, 263, 265], "suppli": [8, 65], "care": [8, 78, 85, 157, 231, 238], "rest": [8, 9, 54, 85, 157, 175, 203], "user": [8, 9, 10, 54, 65, 66, 74, 76, 85, 86, 157, 202, 231, 253], "ufunc_loop": 8, "arg": [8, 9, 10, 39, 76, 81, 157, 190, 202, 209, 211, 215, 240], "step": [8, 37, 38, 48, 54, 65, 73, 75, 76, 77, 81, 84, 157, 159, 169, 172, 175, 201, 202, 216, 217, 234, 238, 251], "elementwise_funct": 8, "input_1": 8, "input_2": 8, "must": [8, 9, 10, 39, 55, 70, 81, 82, 85, 172, 175, 215, 251, 265], "onc": [8, 9, 10, 39, 41, 54, 60, 62, 77, 80, 147, 159, 171, 231, 251, 259], "shown": [8, 9, 76, 157, 159, 202, 215, 238], "npy_byt": 8, "input": [8, 37, 39, 54, 73, 74, 75, 76, 79, 81, 84, 85, 159, 175, 198, 215, 217, 233, 238, 251, 265], "third": [8, 9, 159], "python_ufunc": 8, "pyufunc_fromfuncanddata": 8, "null": [8, 10, 39, 202, 265], "ntype": 8, "num_input": 8, "num_output": 8, "identity_el": 8, "docstr": [8, 37, 38, 39, 65, 73, 74, 75, 76, 84, 85, 159, 171, 175, 203, 204, 214, 231], "unus": 8, "multipl": [8, 39, 54, 59, 66, 70, 73, 80, 81, 99, 128, 141, 155, 157, 159, 171, 175, 202, 215, 217, 231, 252, 259, 260, 261, 266, 268], "combin": [8, 10, 39, 54, 65, 70, 76, 157, 159, 175, 202, 238, 251, 259, 263, 265], "veri": [8, 9, 39, 46, 47, 53, 56, 59, 65, 70, 74, 76, 77, 81, 84, 85, 157, 159, 175, 181, 202, 215, 216, 249, 251, 255], "form": [8, 9, 39, 81, 85, 172, 202, 265, 266], "made": [8, 9, 159, 265], "ones": [8, 25, 33, 35, 37, 39, 53, 59, 65, 105, 106, 108, 110, 115, 129, 148, 157, 158, 159, 175, 201, 202, 203, 225, 227, 231, 247, 251, 253], "pyufunc_f_f": 8, "elementwise_func": 8, "pyufunc_ff_f": 8, "pyufunc_d_d": 8, "doubl": [8, 9, 39, 62, 65, 77], "pyufunc_dd_d": 8, "npy_cdoubl": 8, "in1": 8, "in2": 8, "except": [8, 38, 39, 73, 75, 76, 84, 86, 159, 171], "abov": [8, 9, 39, 53, 54, 59, 74, 77, 78, 80, 159, 172, 175, 198, 202, 215, 238, 251, 260, 265], "fractal": [8, 166, 172], "defin": [8, 10, 38, 39, 53, 70, 73, 75, 79, 80, 84, 85, 159, 172, 177, 197, 202, 203, 204, 214, 215, 216, 251, 263, 266], "z": [8, 47, 48, 77, 78, 81, 127, 129, 131, 132, 143, 146, 149, 157, 159, 166, 172, 175, 190, 202, 239, 246, 247, 253, 258, 265], "leftarrow": 8, "complex": [8, 9, 65, 66, 73, 77, 159, 171, 181, 202, 208, 215, 265, 266], "repeat": [8, 10, 39, 55, 59, 73, 77, 159, 217, 251], "finit": [8, 55, 56, 59, 62, 202], "belong": [8, 172, 202, 227], "mandel": 8, "z0": [8, 190, 202], "sai": [8, 9, 76, 77, 199, 251], "until": [8, 9, 10, 48, 157, 202, 216, 251, 265], "real": [8, 9, 53, 54, 65, 66, 76, 77, 181, 197, 198, 202, 231, 249, 251, 254, 266], "1000": [8, 22, 28, 37, 45, 54, 65, 159, 169, 175, 193, 202, 234], "determin": [8, 74, 157, 169, 202, 204, 214, 215, 251], "our": [8, 9, 10, 39, 45, 46, 53, 54, 77, 81, 85, 159, 172, 188, 202, 215, 238, 249, 251, 260, 263], "pyufunc_": 8, "helper": [8, 9, 10, 42, 48, 53], "write": [8, 9, 10, 38, 39, 70, 73, 74, 76, 80, 81, 82, 85, 86, 157, 158, 160, 170, 171, 172, 173, 202, 203, 204, 214, 215, 253, 259, 265, 268], "mandelplot": 8, "complex_doubl": 8, "npy_bool": 8, "npy_ubyt": 8, "npy_short": 8, "npy_ushort": 8, "npy_int": 8, "npy_uint": 8, "npy_long": 8, "npy_ulong": 8, "npy_longlong": 8, "npy_ulonglong": 8, "npy_float": 8, "npy_doubl": [8, 39], "npy_longdoubl": 8, "npy_cfloat": 8, "npy_clongdoubl": 8, "npy_datetim": 8, "npy_timedelta": 8, "npy_object": 8, "npy_str": 8, "npy_unicod": 8, "npy_void": 8, "cdef": [8, 39], "mandel_single_point": 8, "z_in": 8, "c_in": 8, "z_out": 8, "nogil": [8, 9], "NOT": [8, 175], "allow": [8, 9, 10, 39, 41, 60, 76, 77, 78, 81, 85, 157, 159, 175, 204, 214, 251, 266], "global": [8, 9, 10, 38, 54, 73, 75, 84, 177, 188, 202], "lock": [8, 9], "releas": [8, 9, 73, 84], "henc": [8, 77, 231], "local": [8, 9, 10, 35, 37, 46, 54, 65, 73, 76, 81, 86, 177, 188, 202, 217, 227, 238, 248], "variabl": [8, 9, 10, 39, 53, 54, 73, 75, 76, 80, 83, 84, 85, 157, 171, 172, 186, 202, 215, 251, 253, 254, 257, 258, 260, 263, 266], "declar": [8, 9, 39, 80, 81, 266], "receiv": [8, 10], "tradit": 8, "pass": [8, 9, 10, 39, 53, 66, 73, 75, 76, 79, 84, 85, 86, 157, 159, 175, 202, 215, 254, 263, 266], "break": [8, 9, 10, 41, 48, 54, 73, 75, 76, 79, 84, 85], "boilerpl": [8, 39], "definit": [8, 9, 37, 44, 65, 73, 75, 84, 202, 216, 251, 266], "cimport": [8, 39], "import_arrai": [8, 39], "import_ufunc": 8, "pyufuncgenericfunct": 8, "initi": [8, 10, 35, 39, 53, 65, 73, 75, 86, 188, 191, 201, 227, 231], "loop_func": 8, "input_output_typ": 8, "ident": [8, 9, 39, 78, 202, 254], "ensembl": [8, 235, 251], "linspac": [8, 41, 42, 44, 45, 46, 49, 51, 53, 62, 68, 70, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 121, 123, 124, 127, 130, 140, 143, 144, 146, 150, 157, 158, 159, 161, 163, 166, 167, 177, 179, 180, 184, 186, 189, 190, 191, 193, 196, 198, 202, 206, 207, 216, 234, 239, 242, 245, 246, 251, 257, 258, 265], "1j": [8, 78, 159, 166, 172], "imshow": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 46, 47, 48, 73, 75, 99, 105, 141, 155, 156, 158, 159, 162, 165, 166, 172, 177, 178, 182, 183, 185, 192, 197, 198, 201, 202, 204, 214, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 237, 238, 251, 268], "ab": [8, 16, 37, 41, 48, 50, 51, 53, 78, 79, 166, 172, 175, 181, 197, 199, 202, 203], "extent": [8, 43, 46, 47, 48, 50, 166, 172, 177], "grai": [8, 10, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 77, 157, 158, 159, 165, 166, 172, 178, 182, 183, 185, 188, 197, 201, 202, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "com": [8, 64, 85, 86, 183, 238], "wiki": [8, 9, 74], "marklodato": 8, "creatingufunc": 8, "accept": [8, 9, 10, 39, 55, 56, 57, 58, 59, 60, 63, 202, 251], "precis": [8, 9, 53, 54, 62, 65, 81, 202, 237, 238, 251, 266], "mandel_single_point_singleprec": 8, "signatur": [8, 9, 39, 76, 81, 85, 157], "act": [8, 9], "core": [8, 10, 37, 39, 53, 54, 76, 174, 202, 251], "alreadi": [8, 9, 39, 76, 85, 157, 159, 175, 202, 216, 238, 251], "pyufunc_fromfuncanddataandsignatur": 8, "linear": [8, 37, 38, 57, 58, 61, 73, 74, 75, 175, 180, 184, 216, 217, 231, 232, 238, 250, 253, 254, 257, 258, 260, 268], "algebra": [8, 53, 64, 73, 75, 175, 217], "enabl": [8, 10, 39, 53, 65, 76, 159, 215, 251, 260, 265], "rng": [8, 10, 12, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 33, 34, 37, 45, 47, 49, 53, 54, 63, 65, 111, 113, 122, 133, 135, 139, 143, 151, 153, 154, 157, 158, 159, 162, 163, 167, 169, 175, 179, 180, 181, 182, 184, 193, 201, 202, 226, 231, 234, 242, 245, 247, 249, 251, 257, 258, 265], "random": [8, 10, 12, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 33, 34, 37, 45, 47, 49, 53, 54, 63, 65, 73, 75, 78, 111, 113, 122, 133, 135, 139, 142, 143, 151, 153, 154, 157, 158, 159, 160, 162, 163, 167, 170, 172, 173, 179, 180, 181, 182, 184, 185, 186, 192, 193, 201, 218, 226, 230, 234, 242, 245, 247, 249, 251, 257, 258, 265, 268], "default_rng": [8, 10, 12, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 33, 34, 37, 45, 47, 49, 53, 54, 63, 65, 111, 113, 122, 133, 135, 139, 143, 151, 153, 154, 157, 158, 159, 162, 163, 167, 169, 175, 179, 180, 181, 182, 184, 193, 201, 202, 226, 231, 234, 242, 245, 247, 249, 251, 257, 258, 265], "27446968": [8, 10, 12, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 33, 34, 37, 45, 47, 49, 53, 63, 65, 159, 163, 167, 175, 179, 181, 184, 193, 226, 234, 245, 247, 249, 251, 257, 258, 265], "linalg": [8, 53, 54, 65, 73, 74, 75, 85, 172, 175], "det": [8, 74, 202], "01829761": 8, "0077266": 8, "05336566": 8, "_umath_linalg": 8, "matric": [8, 38, 55, 56, 61, 65, 73, 175, 202, 217, 251, 253, 256, 259], "tensordot": 8, "einsum": 8, "gufunc_loop": 8, "previous": [8, 9, 39, 76, 251], "input_1_stride_m": 8, "input_1_stride_n": 8, "after": [8, 9, 10, 65, 76, 77, 78, 85, 157, 171, 175, 251, 252, 261, 263, 265, 268], "input_2_strides_n": 8, "input_2_strides_p": 8, "output_strides_n": 8, "output_strides_p": 8, "matmul_for_strided_matric": 8, "suppos": [8, 9, 83, 85, 202, 216, 231, 251, 266], "handl": [8, 10, 39, 73, 75, 77, 84, 85, 157, 175, 202, 231, 266], "binari": [8, 37, 73, 82, 85, 158, 159, 178, 185, 201, 202, 217, 226, 237, 251], "easi": [8, 9, 39, 53, 54, 56, 59, 73, 74, 75, 76, 84, 198, 266], "whatev": [8, 9, 251], "would": [8, 9, 10, 39, 54, 70, 76, 157, 196, 198, 201, 202, 238, 251, 259, 263, 266], "No": [8, 10, 39, 77, 175, 253, 254, 257, 258, 260, 263, 265], "level": [8, 9, 10, 39, 48, 54, 73, 75, 76, 84, 85, 157, 159, 215, 231, 238, 265], "pybufferproc": 8, "tp_as_buff": 8, "pilbuff": 8, "pil": [8, 18, 37], "200": [8, 17, 37, 65, 77, 121, 124, 158, 167, 169, 175, 234, 251, 258], "255": [8, 9, 29, 37, 158, 231], "red": [8, 77, 81, 89, 91, 92, 93, 94, 95, 96, 97, 130, 157, 234, 237, 238, 251, 254], "whose": [8, 159, 175, 215], "rr": 8, "gg": 8, "bb": 8, "aa": 8, "squeez": 8, "img": [8, 12, 15, 26, 33, 37, 158, 165, 198, 231], "save": [8, 9, 37, 54, 62, 157, 158, 159, 172, 202, 216, 231], "png": [8, 18, 37, 54, 70, 86, 157, 158, 165, 172, 197, 198, 202, 206, 231], "q": [8, 10], "again": [8, 39, 79, 159, 238, 251, 253], "exchang": 8, "between": [8, 9, 16, 39, 53, 54, 74, 76, 77, 79, 81, 85, 130, 175, 191, 197, 202, 215, 231, 251, 253, 254, 255, 263], "know": [8, 9, 10, 37, 38, 39, 54, 73, 74, 157, 171, 175, 202, 231, 251, 266], "254": [8, 24, 36, 268], "opaqu": 8, "ok": [8, 24, 39, 79], "origin": [8, 16, 37, 38, 39, 46, 47, 48, 53, 70, 73, 77, 85, 105, 127, 146, 157, 159, 169, 175, 177, 181, 189, 192, 197, 202, 204, 214, 216, 219, 238, 251, 257, 258, 263], "turn": [8, 9, 10, 53, 157], "noth": [8, 9, 10, 39, 79], "about": [8, 9, 38, 39, 70, 73, 78, 81, 82, 84, 85, 157, 159, 175, 202, 215, 238, 251], "happili": 8, "test2": 8, "present": [8, 9, 39, 70, 74, 253, 259, 260], "specif": [8, 10, 37, 38, 39, 53, 65, 70, 73, 74, 75, 76, 84, 157, 202, 238, 251], "approach": [8, 9, 47, 53, 73, 75, 217, 231, 238, 265], "slowli": 8, "awai": 8, "Not": [8, 53, 76, 78, 81, 86, 259], "doc": [8, 9, 10, 54, 70, 74, 76, 77, 82, 84, 85, 86, 158, 159, 175, 231, 256], "171694552": 8, "readonli": 8, "u1": 8, "asarrai": [8, 48, 54, 181, 202], "variant": [8, 202, 216], "bbb": 8, "ccc": 8, "lstrip": 8, "upper": [8, 10, 48, 89, 96, 97, 157, 169, 198, 202, 204, 214, 216], "instanc": [8, 9, 10, 53, 54, 157, 159, 175, 202, 215, 251, 253, 265, 266], "subclass": [8, 55, 56, 57, 58, 59, 60, 66], "invalid": [8, 10, 54, 76, 79], "fourth": 8, "99": [8, 14, 17, 25, 30, 33, 39, 54, 81, 105, 117, 159, 175, 178, 182, 183, 185, 251], "One": [8, 9, 37, 77, 85, 215, 238, 251], "mx": 8, "fill_valu": [8, 171], "999999": [8, 171], "ignor": [8, 9, 10, 166, 265], "75": [8, 44, 54, 102, 108, 110, 123, 125, 135, 139, 140, 144, 145, 153, 154, 157, 175, 233, 237, 238, 251], "respect": [8, 39, 70, 74, 78, 80, 85, 216, 251, 263, 266], "dot": [8, 54, 66, 90, 157, 159, 202], "avail": [8, 9, 10, 37, 39, 53, 54, 65, 70, 74, 76, 80, 84, 85, 202, 215, 216, 225, 231, 238, 251, 265], "fill": [8, 9, 70, 99, 144, 156, 157, 159, 201, 202, 231, 263, 268], "back": [8, 39, 70, 85, 157, 175, 181, 260, 263, 265], "nomask": 8, "log": [8, 9, 48, 175, 202, 207, 216, 253, 254, 257, 258, 259, 260, 263, 265, 266], "693147180559": 8, "098612288668": 8, "1e": [8, 10, 46, 48, 53, 54, 65, 79, 171, 172, 184, 199, 202, 207], "streamlin": 8, "seamless": 8, "deal": [8, 10, 53, 54, 73, 75, 76, 174], "tune": [8, 157, 251], "canadian": 8, "ranger": 8, "were": [8, 9, 39, 144, 157, 215, 251, 265], "distract": 8, "hare": [8, 158, 168, 172, 199], "lynx": [8, 158, 168, 172, 199], "got": 8, "wrong": [8, 9, 10, 39], "carrot": [8, 158, 168, 172, 199], "farmer": 8, "alert": 8, "though": [8, 251], "over": [8, 9, 10, 39, 73, 75, 84, 85, 157, 172, 202, 203, 216, 217, 234, 266], "axi": [8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41, 43, 44, 48, 49, 50, 51, 54, 59, 65, 66, 73, 75, 99, 100, 105, 118, 125, 129, 145, 151, 169, 172, 175, 178, 182, 183, 185, 199, 201, 202, 206, 207, 212, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 234, 235, 239, 242, 243, 245, 246, 251, 268], "40472": 8, "72727272727": 8, "18627": 8, "272727272728": 8, "42400": 8, "21087": 8, "656489006717": 8, "15625": 8, "799814240254": 8, "3322": 8, "5062255844787": 8, "line": [8, 9, 10, 37, 38, 48, 53, 62, 73, 75, 76, 77, 78, 79, 81, 82, 85, 86, 90, 99, 100, 108, 118, 144, 150, 158, 159, 172, 175, 181, 187, 192, 197, 202, 203, 215, 231, 246, 249, 251, 257, 268], "line2d": [8, 62, 157, 158, 159, 172, 175, 181, 187, 192, 202, 215, 249, 251, 257], "arr": [8, 202, 207, 212], "arr2": 8, "addit": [8, 9, 10, 38, 39, 47, 53, 73, 80, 83, 84, 85, 144, 175, 202, 215, 265], "www": [8, 10, 84, 85, 86, 251, 265, 266], "talk": 8, "882": 8, "don": [8, 9, 10, 39, 43, 53, 54, 74, 76, 78, 80, 85, 171, 175, 215, 251, 263, 265], "fanci": [8, 37, 63, 66, 73, 75, 171, 172, 174, 175], "tracker": 8, "click": [8, 70, 157, 251], "sign": [8, 41, 76, 78, 171, 215, 231, 265], "account": [8, 70, 74, 198, 251], "mail": [8, 73, 75], "unsur": 8, "repli": 8, "week": 8, "ticket": 8, "permut": 8, "fail": [8, 10, 39, 74, 236, 238, 251], "cryptic": 8, "messag": [8, 39, 78, 79, 80, 85, 187, 202], "skip": [8, 9, 82, 85, 157, 159, 175, 215], "traceback": [8, 9, 10, 39, 56, 79, 81, 175], "stdin": [8, 9, 175], "_gener": 8, "4844": 8, "axiserror": 8, "64": [8, 21, 25, 37, 171, 215, 237, 248, 251, 265], "window": [8, 39, 74, 80, 82, 84, 85, 157, 159, 192, 202], "great": [8, 265], "rais": [8, 9, 39, 73, 74, 75, 76, 84, 99, 157, 263], "proper": [8, 9], "offici": [8, 39, 74], "tarbal": 8, "visual": [8, 10, 38, 40, 52, 53, 54, 61, 73, 75, 76, 157, 174, 177, 202, 217, 219, 232, 238, 240, 244, 250, 252, 254, 256, 261, 268], "studio": [8, 10, 76], "2008": [8, 215], "snippet": [8, 10, 76], "reproduc": [8, 10, 157, 159, 179, 257, 258], "platform": [8, 74, 84, 86, 171, 215], "linux": [8, 10, 39, 76, 80, 84, 85, 86, 231, 265], "osx": [8, 39], "x86": 8, "ppc": 8, "__version__": [8, 231], "__file__": [8, 39, 85], "case": [8, 9, 10, 38, 39, 54, 73, 157, 159, 171, 175, 202, 215, 216, 238, 251, 266], "broken": [8, 85, 251], "ly": [8, 23, 29, 37], "reinstal": 8, "registr": [8, 37, 38, 73, 231], "regist": [8, 9], "subscrib": 8, "deliveri": 8, "subscript": 8, "option": [8, 9, 10, 37, 39, 41, 48, 53, 54, 62, 65, 73, 74, 75, 77, 81, 85, 118, 159, 202, 204, 214, 251, 253, 266, 268], "bottom": [8, 9, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 89, 95, 96, 97, 105, 108, 110, 117, 122, 128, 133, 151, 157, 178, 182, 183, 185, 204, 214, 233, 234, 237, 238, 251], "mailman3": 8, "send": [8, 9], "activ": [8, 10], "hi": [8, 77], "edit": [8, 38, 70, 73], "my": 8, "xxxxx": 8, "cheer": 8, "guid": [8, 10, 38, 54, 69, 70, 73, 85, 157, 171, 231, 268], "intimid": 8, "thing": [8, 9, 10, 39, 54, 77, 238, 251], "patch": [8, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 233], "complain": 8, "alwai": [8, 9, 39, 53, 54, 66, 74, 158, 263, 265], "irk": 8, "brows": [8, 74, 204, 214], "featur": [9, 35, 38, 62, 70, 73, 74, 76, 78, 80, 81, 84, 124, 157, 202, 217, 224, 227, 233, 235, 238, 239, 240, 245, 251, 265], "consid": [9, 39, 48, 53, 54, 83, 84, 85, 175, 202, 249, 251, 265], "sens": [9, 39, 53, 80, 202, 215, 251], "everi": [9, 10, 67, 70, 77, 85, 157, 216, 251], "thei": [9, 10, 38, 39, 53, 73, 74, 76, 77, 81, 157, 159, 172, 175, 202, 215, 216, 251, 259, 260, 265, 266], "complic": [9, 37, 158, 231, 251], "program": [9, 10, 39, 53, 54, 70, 73, 75, 76, 80, 84, 85, 86, 202, 203, 251, 265], "particularli": [9, 251, 260], "It": [9, 10, 38, 39, 53, 65, 70, 73, 77, 79, 85, 157, 159, 175, 181, 201, 202, 231, 238, 249, 251, 265, 266], "underlin": 9, "pure": [9, 38, 39, 73, 175], "through": [9, 10, 39, 48, 54, 77, 84, 85, 157, 159, 175, 204, 214, 216, 251, 263], "syntax": [9, 10, 76, 77, 78, 81, 84, 85, 171, 172, 265, 266], "complement": 9, "stdlib": 9, "clever": [9, 10, 202], "angl": [9, 39, 157], "via": [9, 39, 53, 66, 73, 76, 159, 197, 217, 265, 266], "enhanc": [9, 62, 73, 80, 157, 217, 251], "As": [9, 10, 39, 53, 74, 76, 78, 79, 157, 202, 215, 216, 249, 251, 253, 263, 266], "wa": [9, 39, 53, 76, 79, 80, 198, 201, 202, 216, 251, 263], "solv": [9, 53, 54, 59, 65, 73, 74, 175, 191, 202, 217], "duplic": [9, 56, 60, 70], "wast": [9, 59, 62, 251], "home": [9, 10, 39, 48, 73, 76, 85, 86, 144, 183, 199, 217, 238, 253, 260, 263], "grown": 9, "interoper": [9, 38, 73], "guido": [9, 251], "rossum": 9, "static": [9, 38, 39, 73, 85], "adher": 9, "protocol": [9, 38, 39, 73, 76, 159], "basic": [9, 38, 39, 53, 55, 73, 75, 76, 81, 84, 157, 161, 162, 174, 181, 185, 202, 203, 215, 217, 222, 231, 266], "method": [9, 37, 38, 39, 40, 43, 46, 47, 48, 50, 52, 54, 61, 62, 65, 73, 75, 76, 82, 83, 84, 85, 157, 159, 187, 190, 197, 199, 202, 215, 217, 227, 238, 251, 253, 254, 257, 258, 260, 263, 265, 266, 268], "sequenc": [9, 73, 74, 75, 85, 159], "": [9, 10, 22, 24, 37, 38, 39, 40, 47, 48, 52, 54, 65, 70, 73, 74, 75, 77, 78, 79, 81, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 108, 110, 111, 112, 113, 114, 135, 153, 171, 172, 174, 175, 181, 190, 198, 199, 202, 206, 207, 212, 215, 216, 217, 231, 234, 238, 245, 247, 248, 253, 258, 268], "stopiter": [9, 79], "hold": [9, 39, 159, 263], "state": [9, 172, 191, 202, 215], "posit": [9, 10, 39, 56, 57, 58, 59, 65, 70, 79, 81, 85, 117, 120, 157, 159, 169, 171, 175, 181, 202, 215], "side": [9, 53, 65, 73, 77, 78, 202, 251], "concurr": 9, "separ": [9, 12, 35, 37, 54, 73, 74, 77, 175, 202, 217, 227, 231, 246, 247, 248, 253, 256, 260, 266], "logic": [9, 78, 85, 175], "__iter__": 9, "keystrok": 9, "num": [9, 157, 159, 179, 196, 202, 203], "__reversed__": 9, "reverseiter": 9, "swallow": 9, "finish": [9, 85, 157, 175, 238], "explicit": [9, 157, 171, 202, 215], "invoc": [9, 81], "exhaust": [9, 82, 99, 157], "achiev": [9, 39, 65, 265], "pervas": 9, "unord": [9, 77], "concept": [9, 73, 77, 217], "stretch": 9, "fstab": 9, "thread": [9, 10], "sequenti": [9, 53], "comprehens": [9, 73, 75, 76, 84, 203], "increas": [9, 37, 73, 74, 78, 85, 203, 234, 236, 238, 251, 259, 260, 265], "clariti": 9, "enclos": [9, 37, 77, 78], "parenthes": [9, 77, 81], "round": [9, 63, 106, 107, 115, 116, 171], "rectangular": 9, "short": [9, 10, 70, 76, 77, 215, 251], "circuit": 9, "genexpr": 9, "0x": [9, 37, 172, 201, 202, 231], "extend": [9, 77, 81, 201, 202, 217, 266], "dictionari": [9, 66, 73, 75, 76, 81, 159, 202, 251, 265], "curli": 9, "brace": 9, "pair": [9, 73, 217, 237, 246, 251, 252, 253, 261, 266, 268], "kei": [9, 10, 42, 54, 66, 77, 78, 81, 85, 86, 203], "gotcha": 9, "mention": 9, "leak": 9, "beazlei": [9, 77, 86], "curiou": 9, "cours": [9, 70, 73, 84, 159, 175, 251], "coroutin": 9, "keyword": [9, 39, 70, 74, 76, 81, 157, 175, 204, 214, 253, 266], "yield": [9, 10, 54], "mere": 9, "presenc": [9, 254], "natur": [9, 53, 62, 73, 175, 202, 217], "statement": [9, 10, 39, 73, 75, 77, 79, 84, 85, 159], "invok": [9, 38, 73], "even": [9, 53, 65, 84, 159, 175, 216, 251], "reachabl": 9, "normal": [9, 12, 15, 16, 26, 33, 45, 47, 49, 53, 135, 153, 157, 172, 176, 180, 181, 193, 194, 198, 202, 216, 234, 242, 245, 247, 249, 251, 253, 257, 258, 265, 268], "bodi": [9, 81], "stop": [9, 65, 77, 81], "befor": [9, 10, 39, 54, 65, 73, 75, 80, 84, 85, 159, 201, 202, 231, 238, 251, 252, 261, 265, 268], "recurs": [9, 86], "encount": [9, 10, 39, 54, 74, 83, 199], "give": [9, 10, 39, 46, 53, 74, 76, 85, 157, 159, 172, 174, 175, 202, 216, 251, 259, 263, 265, 266], "suspend": 9, "def": [9, 10, 24, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 53, 54, 65, 76, 79, 81, 83, 85, 108, 110, 117, 123, 127, 144, 146, 157, 166, 172, 177, 179, 187, 188, 190, 191, 196, 197, 202, 203, 207, 209, 211, 215, 233, 234, 247, 251], "gen": 9, "life": [9, 38, 73, 202, 249, 251], "contrari": [9, 84], "immedi": 9, "__next__": 9, "halt": 9, "fall": [9, 260], "reach": [9, 39, 65, 202], "what": [9, 10, 38, 39, 53, 54, 73, 75, 76, 77, 81, 157, 158, 171, 172, 174, 175, 202, 215, 217, 238, 253, 263, 265, 266], "control": [9, 39, 48, 70, 73, 75, 76, 81, 84, 114, 157, 181, 249, 251, 254, 263, 265, 266], "caller": [9, 81], "view": [9, 10, 38, 54, 73, 75, 76, 174, 175, 232, 250, 251, 265, 268], "almost": [9, 10, 39, 53, 62, 157, 231, 265], "illus": 9, "strictli": [9, 39, 157], "interpret": [9, 10, 38, 39, 73, 78, 80, 84, 85, 86, 159, 265], "restor": [9, 20, 225, 231, 259], "why": [9, 38, 39, 53, 54, 61, 73, 75, 159, 202, 216, 217, 265], "part": [9, 10, 37, 38, 39, 66, 70, 73, 75, 79, 85, 157, 159, 172, 175, 181, 197, 202, 215, 217, 231, 238, 265, 266], "done": [9, 39, 53, 54, 70, 159, 169, 198, 238, 265], "nevertheless": [9, 175, 251], "magic": [9, 39, 74, 76, 157, 175], "advantag": [9, 39, 53, 158], "shorter": 9, "easier": [9, 38, 53, 54, 73, 75, 216, 251], "kept": 9, "oppos": [9, 39, 84, 157], "broader": 9, "power": [9, 37, 74, 76, 78, 157, 176, 194, 199, 202, 231, 245, 251, 265, 266, 268], "initialis": [9, 39], "decid": [9, 251, 266], "find": [9, 10, 11, 12, 36, 37, 38, 39, 40, 43, 52, 54, 73, 75, 76, 86, 172, 175, 176, 181, 194, 195, 196, 200, 216, 231, 251, 253, 265, 266, 268], "extract": [9, 10, 22, 38, 73, 75, 159, 172, 178, 201, 202, 217, 238], "highlight": [9, 85, 253, 259, 260], "interest": [9, 10, 37, 38, 39, 53, 61, 70, 73, 77, 78, 157, 158, 175, 177, 201, 202, 216, 231, 238, 251, 253, 265], "reus": [9, 73, 75, 76, 83, 84], "reason": [9, 10, 39, 54, 70, 159, 198, 202, 238, 251, 260, 265], "revers": [9, 42, 74, 77, 157, 159], "obviou": [9, 78, 199], "either": [9, 39, 85, 231, 251], "share": [9, 38, 39, 73, 159, 202], "mutabl": [9, 77, 81], "thank": [9, 79, 83, 256], "342": [9, 224, 230, 268], "bore": [9, 202], "resum": 9, "inject": 9, "similar": [9, 39, 53, 54, 83, 157, 159, 202, 231, 251], "fact": [9, 251], "equival": [9, 53, 202, 265, 266], "throw": 9, "unlik": [9, 66, 76, 265, 266], "becaus": [9, 39, 46, 76, 77, 80, 85, 157, 175, 198, 216, 238, 251, 259, 260, 263], "associ": [9, 77, 81, 251, 265], "explicitli": [9, 10, 48, 157, 159, 172, 236, 238, 266], "propag": [9, 11, 36, 37, 73, 75, 174, 215, 268], "manner": [9, 251], "intercept": [9, 253, 254, 257, 258, 260, 263, 265], "final": [9, 39, 73, 74, 75, 157, 202, 216, 238], "claus": 9, "abort": 9, "sake": [9, 81], "worth": [9, 39, 53, 54, 202], "forc": [9, 33, 38, 73, 159, 171, 265, 266], "__del__": 9, "destroi": 9, "itertool": [9, 10], "generatorexit": 9, "els": [9, 10, 39, 48, 73, 75, 79, 81, 84, 85, 171, 175, 203, 233, 237, 238], "indexerror": [9, 10, 79], "preview": 9, "380": 9, "yet": [9, 10, 70, 76, 251, 253], "subgener": 9, "concern": [9, 265], "difficulti": [9, 53], "subgen": 9, "some_other_gener": 9, "interact": [9, 38, 39, 54, 66, 70, 73, 75, 80, 84, 85, 157, 159, 217, 252, 261, 268], "properli": [9, 157], "consider": [9, 54, 55], "guard": 9, "previou": [9, 39, 54, 76, 78, 79, 83, 85, 175, 216, 231, 251, 265], "Such": [9, 74, 201, 202, 215, 265], "id13": 9, "suffic": 9, "introduc": [9, 70, 73, 84, 202, 217], "behav": [9, 39, 53, 251, 263], "repeatedli": [9, 251], "forward": [9, 39, 76, 159, 251], "amaz": 9, "appear": [9, 157, 198, 251], "apologet": 9, "bruce": 9, "eckel": 9, "hide": 9, "behind": [9, 54, 251, 256, 265], "symbol": [9, 42, 53, 73, 76, 85, 157, 217], "\u2461": 9, "\u2460": 9, "readi": [9, 53, 76, 157], "newli": [9, 159], "attach": [9, 81, 202], "semant": [9, 81], "318": [9, 258], "effect": [9, 38, 54, 65, 73, 157, 198, 202, 238, 251, 253, 254, 255, 259, 263, 265], "temporari": 9, "prone": 9, "top": [9, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 70, 89, 95, 96, 97, 105, 117, 122, 128, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 172, 178, 182, 183, 185, 198, 215, 233, 234, 237, 238, 251], "chosen": [9, 202, 265], "specifi": [9, 39, 53, 65, 73, 74, 81, 85, 86, 157, 159, 172, 202, 217, 253, 254, 257, 258, 260, 263], "prefix": [9, 10, 76, 86], "hard": [9, 10, 39, 46, 53, 65, 248, 251], "miss": [9, 10, 37, 38, 73, 75, 81, 174, 231, 251, 263, 265], "accord": [9, 37, 202, 216, 231, 247, 251, 265], "exploit": 9, "registri": 9, "anyth": [9, 70, 78, 151, 251], "substitut": 9, "behaviour": 9, "intend": 9, "unpredict": 9, "preparatori": 9, "likewis": 9, "deriv": [9, 46, 53, 83, 157, 202, 238, 251, 265, 266], "On": [9, 53, 70, 85, 159, 175, 238, 244, 251], "hand": [9, 53, 65, 77, 175, 202, 251], "suffici": [9, 175, 238, 251], "simpler": [9, 39, 73, 216, 238, 245, 265, 266], "__call__": [9, 202], "theori": [9, 62, 201, 202], "lambda": [9, 10, 42, 203, 240, 245], "compar": [9, 10, 37, 47, 53, 73, 75, 85, 169, 172, 176, 194, 201, 202, 215, 217, 225, 227, 231, 232, 250, 251, 268], "bare": [9, 84, 202], "nice": [9, 39, 74, 85, 157, 201, 202, 251], "less": [9, 38, 39, 54, 73, 81, 85, 202, 203, 231, 238, 251, 265], "cleaner": 9, "customis": 9, "those": [9, 39, 54, 202, 216, 251], "simple_decor": 9, "decorator_with_argu": 9, "_decor": 9, "inner": [9, 39, 181], "too": [9, 10, 39, 43, 48, 53, 76, 85, 157, 215, 234, 243, 251], "abc": 9, "trivial": [9, 10, 39], "categori": [9, 73, 251, 254], "nested": 9, "worst": 9, "nest": [9, 73, 159], "replacing_decorator_with_arg": 9, "_wrapper": 9, "kwarg": [9, 81, 144, 157], "unfortun": 9, "appar": [9, 251], "mislead": [9, 251], "__init__": [9, 83, 85], "constructor": [9, 55, 56, 57, 58, 59, 60, 63, 83], "decorator_class": 9, "init": [9, 39, 83, 251], "job": [9, 198], "deco_inst": 9, "foo": [9, 39], "often": [9, 10, 53, 54, 65, 76, 77, 78, 202, 215, 231, 238, 245, 248, 249, 251], "lowercas": 9, "letter": [9, 159, 251], "realiti": 9, "replacing_decorator_class": 9, "pretti": [9, 43, 46, 47, 53, 243], "mangl": 9, "afterward": 9, "lost": 9, "partial": [9, 62, 202], "transplant": 9, "__doc__": [9, 39, 85], "__module__": 9, "__name__": [9, 10, 39, 54, 85, 203, 233, 236, 241, 251], "__annotations__": 9, "extens": [9, 39, 54, 70, 85, 157, 159, 266], "__defaults__": 9, "__kwdefaults__": 9, "help": [9, 38, 39, 54, 65, 70, 73, 75, 77, 157, 159, 171, 172, 175, 202, 251, 265, 266], "useless": [9, 10, 54, 76], "ugli": [9, 140, 239], "dynam": [9, 84], "eval": [9, 117, 157], "realli": [9, 39, 53, 54, 81, 171, 251], "classmethod": 9, "insert": [9, 10, 39, 70, 76, 77, 157, 159, 253], "paramet": [9, 38, 45, 53, 61, 73, 74, 75, 77, 83, 84, 157, 159, 172, 176, 194, 202, 215, 216, 217, 232, 234, 249, 250, 253, 254, 257, 258, 263, 265, 268], "cl": [9, 10, 266], "still": [9, 39, 53, 70, 76, 171, 198], "namespac": [9, 81, 85], "pollut": 9, "altern": [9, 39, 40, 52, 53, 54, 77, 86, 157, 175, 266, 268], "multitud": 9, "staticmethod": 9, "_": [9, 86, 108, 110, 139, 154, 202, 249, 251], "think": [9, 54, 62, 76, 251, 265], "connect": [9, 22, 37, 39, 62, 73, 75, 76, 157, 176, 194, 218, 227, 230, 268], "despit": 9, "properti": [9, 38, 73, 75, 215, 217], "getter": 9, "setter": 9, "taken": [9, 53, 104, 202, 231, 265], "calcul": [9, 73, 77, 202, 203, 216, 217, 251, 257, 258], "fly": [9, 10, 38, 73], "obvious": [9, 39], "rectangl": [9, 142, 233], "edg": [9, 11, 33, 36, 38, 73, 99, 100, 118, 157, 198, 231, 268], "area": [9, 77, 157, 201, 202, 231], "length": [9, 39, 57, 58, 59, 81, 203, 215, 239, 251, 254, 265], "delet": [9, 86], "Their": 9, "fget": 9, "fset": 9, "fdel": 9, "deleg": 9, "crystal": 9, "del": 9, "premis": 9, "violat": [9, 10, 265], "invent": [9, 202], "good": [9, 10, 38, 39, 53, 54, 73, 75, 76, 77, 81, 84, 99, 156, 157, 158, 202, 215, 238, 243, 248, 251, 265, 268], "newer": [9, 66], "lru_cach": 9, "memoiz": 9, "arbitrari": [9, 39, 86, 157, 231, 266], "maintain": [9, 70, 74, 238], "limit": [9, 10, 37, 39, 53, 73, 75, 76, 90, 169, 202, 215, 217, 251, 265], "total_ord": 9, "__lt__": 9, "__gt__": 9, "__le__": 9, "stderr": 9, "anymor": [9, 253], "func": [9, 10, 70, 198, 251, 266], "find_answ": 9, "look_for_next_answ": 9, "append": [9, 41, 43, 48, 50, 76, 77, 81, 82, 85, 139, 154, 157, 159, 203], "fine": [9, 37, 39], "fairli": [9, 251], "compact": 9, "unread": 9, "vector": [9, 38, 45, 54, 55, 56, 57, 58, 59, 65, 66, 73, 74, 99, 156, 157, 175, 246, 247, 248, 251, 265, 268], "generator_func": 9, "wordprocessor": 9, "cleanup": 9, "cleanmdashesextens": 9, "mdash": 9, "em": 9, "dash": [9, 99, 100, 118, 157, 246, 247, 268], "decentralis": 9, "noun": 9, "verb": 9, "simpli": [9, 10, 39, 47, 54, 76, 159, 202, 251], "entiti": [9, 265], "charact": [9, 76, 77, 79, 85, 171], "liter": [9, 70, 77, 79], "notat": [9, 77, 83], "databas": [9, 251], "imposs": [9, 85], "distinguish": [9, 81, 84, 251], "en": [9, 70, 76, 81], "3129": 9, "moin": 9, "pythondecoratorlibrari": 9, "pypi": 9, "ii": 9, "iii": 9, "__enter__": 9, "__exit__": 9, "var": [9, 70, 81, 202, 203, 253, 259, 265, 266], "do_someth": 9, "simplest": [9, 10, 21, 73, 217, 251], "343": [9, 241, 250, 268], "permit": [9, 56, 215], "leav": [9, 78, 251], "block": [9, 11, 36, 37, 38, 65, 66, 73, 76, 78, 81, 85, 159, 202, 251, 268], "isn": [9, 53], "underneath": 9, "successfulli": [9, 53, 187, 202], "thrown": [9, 76], "rethrown": 9, "sure": [9, 10, 39, 54, 65, 70, 85, 157, 175], "obj": [9, 159, 263], "tmp": [9, 37, 76, 85, 86, 158, 203], "exit": [9, 10, 54, 86], "resourc": [9, 70, 79, 157, 238], "phase": [9, 202, 204, 214], "acquir": 9, "conveni": [9, 38, 39, 73, 76, 77, 81, 86, 159, 251], "With": [9, 10, 46, 53, 77, 78, 157, 175, 202, 231, 238, 251], "fileinput": 9, "tempfil": 9, "bz2": 9, "bz2file": 9, "gzip": 9, "gzipfil": 9, "tarfil": 9, "zipfil": 9, "ftplib": 9, "nntplib": 9, "multiprocess": 9, "rlock": 9, "unlock": 9, "semaphor": 9, "memoryview": 9, "localcontext": 9, "temporarili": [9, 166], "_winreg": 9, "pyhkei": 9, "hive": 9, "catch_warn": [9, 166], "kill": 9, "contextlib": 9, "parallel": 9, "futur": [9, 70, 231, 253, 263], "threadpoolexecutor": 9, "pool": 9, "processpoolexecutor": 9, "gil": 9, "sy": [9, 13, 21, 31, 37, 42, 48, 73, 75, 76, 84, 85, 172, 203], "exc_info": 9, "easili": [9, 47, 76, 231, 251, 265, 266], "abil": [9, 39, 251], "classic": [9, 76], "come": [9, 39, 53, 62, 76, 85, 99, 157, 175, 202, 251, 265], "unit": [9, 54, 202, 251, 263, 265], "right": [9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 48, 53, 54, 65, 70, 74, 77, 79, 81, 89, 95, 96, 97, 99, 105, 117, 128, 139, 154, 156, 157, 159, 175, 178, 182, 183, 185, 201, 202, 204, 214, 215, 233, 234, 237, 238, 251, 265, 268], "kind": [9, 37, 39, 70, 79, 154, 157, 159, 184, 202, 251, 253, 259, 265], "assert_rais": 9, "unittest": 9, "testcas": 9, "assertionerror": 9, "issubclass": 9, "keyerror": [9, 79], "said": [9, 39], "sweeter": 9, "flow": [9, 73, 75, 76, 81, 83, 84, 198, 233], "contextmanag": 9, "some_gener": 9, "setup": [9, 39, 85, 216], "obei": [9, 202], "enforc": [9, 198], "importantli": [9, 85, 171], "protect": 9, "rewrit": [9, 175], "explor": [10, 54, 73, 76, 157, 186, 202, 217, 235, 238, 251], "strategi": [10, 54, 251, 265], "emploi": [10, 66, 251], "tailor": 10, "nosetest": 10, "everyon": 10, "twice": [10, 78, 157], "re": [10, 38, 73, 76, 77, 78, 85, 190, 191, 202, 203, 215, 238, 251, 266], "ever": [10, 39, 251], "buggi": [10, 202], "stupid": 10, "kiss": 10, "yourself": [10, 39, 80, 85], "dry": 10, "piec": [10, 39, 53, 238, 251], "knowledg": [10, 53, 77, 215], "unambigu": 10, "authorit": 10, "within": [10, 46, 53, 65, 76, 81, 85, 157, 202, 251], "algorithm": [10, 37, 38, 41, 46, 48, 73, 76, 81, 202, 203, 215, 227, 231, 238, 251, 266], "interdepend": 10, "loos": 10, "function": [10, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 65, 66, 70, 73, 74, 75, 77, 78, 83, 84, 85, 99, 141, 153, 155, 156, 157, 158, 169, 171, 172, 174, 175, 176, 179, 186, 194, 195, 200, 203, 204, 214, 215, 216, 226, 231, 241, 243, 251, 253, 254, 265, 266, 268], "meaning": [10, 37, 85, 231], "pylint": 10, "pycheck": 10, "flake8": 10, "focu": [10, 53, 181, 231, 251], "detect": [10, 38, 73, 77, 159, 181, 215, 231, 260, 265], "recommend": [10, 65, 76, 159, 175, 202, 251, 265], "thu": [10, 39, 46, 47, 53, 54, 70, 76, 78, 85, 159, 175, 202, 216, 251, 265], "catch": [10, 38, 73, 75, 84], "id": [10, 233], "highli": [10, 231, 251], "gain": [10, 54], "bind": [10, 37, 77, 231], "buffer": [10, 38, 39, 73], "kate": 10, "configur": [10, 85, 157], "plugin": [10, 38, 73], "kdialog": 10, "msgbox": 10, "textmat": 10, "shell": [10, 74, 76, 77, 78, 80, 85, 86], "tm_pycheck": 10, "framework": [10, 76, 84, 86, 257, 258], "bin": [10, 12, 26, 37, 86, 186, 193, 202, 204, 208, 209, 210, 211, 215], "Then": [10, 53, 54, 70, 83, 157, 202, 265, 266], "ctrl": 10, "shift": [10, 76, 183, 201, 202], "report": [10, 38, 73, 76, 237, 238, 251], "vim": 10, "vimrc": 10, "f5": 10, "autocmd": 10, "filetyp": 10, "mp": 10, "echo": 10, "imap": 10, "esc": [10, 39], "map": [10, 37, 39, 77, 85, 105, 159, 227, 239, 245], "autowrit": 10, "emac": 10, "defun": 10, "thisfil": 10, "mode": [10, 21, 37, 39, 73, 75, 183, 198, 201, 202], "toggl": 10, "nil": [10, 65], "hook": 10, "php": [10, 84], "script_id": 10, "2441": 10, "ftplugin": 10, "indent": [10, 78, 81, 85], "syntast": 10, "flymak": 10, "emacswiki": 10, "meta": 10, "enter": [10, 76, 78, 79, 85, 159], "kick": 10, "silver": 10, "bullet": [10, 70], "favor": [10, 202], "isol": 10, "outsid": [10, 37, 81, 265], "cycl": [10, 251], "reliabl": [10, 54, 216], "divid": [10, 55, 172, 199, 251], "conquer": 10, "failur": [10, 202], "patient": [10, 251], "while": [10, 38, 39, 53, 70, 73, 75, 76, 79, 84, 85, 157, 171, 201, 202, 203, 234, 238, 251, 255, 265, 266], "gone": 10, "tight": [10, 50, 157, 202, 212, 235, 239, 242, 243, 245, 246], "suit": [10, 80, 85, 158], "pdb": 10, "walk": [10, 73, 75, 160, 170, 173, 268], "down": [10, 23, 37, 39, 54, 76, 198, 251], "breakpoint": 10, "ye": [10, 66, 85], "runtim": 10, "launch": [10, 159], "index_error": 10, "drop": [10, 158, 251], "src": [10, 81, 85, 86], "lst": [10, 203], "len": [10, 39, 42, 53, 74, 78, 105, 108, 110, 117, 139, 154, 159, 203, 208, 209, 210, 211, 215, 237, 244, 248, 251], "__main__": [10, 54, 73, 75, 81, 84, 86, 203, 233], "foobar": [10, 79], "61": [10, 203], "cell": [10, 76, 77, 79, 81, 238, 244], "syntaxerror": [10, 76, 77], "ipdb": [10, 76], "quit": [10, 39, 74, 76, 99, 156, 157, 158, 175, 251, 268], "varoquau": [10, 85], "usr": [10, 85, 86], "python2": [10, 39, 86], "1296": 10, "main": [10, 38, 39, 59, 70, 73, 85, 86, 157, 183, 265], "_runscript": 10, "mainpyfil": 10, "1215": 10, "bdb": 10, "372": [10, 265], "exec": [10, 76], "cmd": [10, 80, 85], "string": [10, 38, 39, 73, 75, 76, 78, 80, 81, 82, 85, 86, 159, 171, 203, 260], "uncaught": 10, "cont": 10, "restart": [10, 53], "believ": 10, "wiener_filt": 10, "filter": [10, 11, 19, 32, 36, 38, 73, 75, 85, 176, 194, 204, 214, 217, 218, 219, 226, 229, 230, 268], "blank": 10, "comment": [10, 39, 157, 171], "wiener": [10, 37, 182, 201, 202], "noisi": [10, 16, 19, 20, 21, 37, 38, 40, 52, 73, 163, 167, 182, 201, 202, 268], "sp": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 85, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 201, 202, 204, 206, 207, 209, 211, 215, 216, 227, 231, 265], "ont": 10, "inu": 10, "iterated_wien": 10, "noisy_img": 10, "35": [10, 44, 54, 81, 86, 158, 159, 196, 207, 233, 238, 253, 263, 265], "denoised_img": 10, "local_mean": [10, 14, 37], "ext": 10, "tep": 10, "context": [10, 38, 53, 73, 83, 85], "l_var": 10, "local_var": 10, "37": [10, 76, 81, 86, 171, 196, 202, 237, 238, 251, 253, 254, 265], "38": [10, 81, 86, 196, 202, 237, 238, 251, 253, 254, 265], "5868": 10, "5379": 10, "5316": 10, "5071": 10, "4799": 10, "5149": 10, "5013": 10, "363": 10, "437": 10, "346": [10, 263], "262": 10, "4355": 10, "410": 10, "344": 10, "392": [10, 257], "604": [10, 175, 253], "3377": 10, "435": 10, "362": 10, "308": [10, 253, 265], "275": [10, 253], "198": [10, 175, 260], "1632": 10, "548": [10, 42, 52, 268], "290": [10, 19, 20, 37], "248": [10, 257], "263": 10, "1653": 10, "466": [10, 253, 265], "789": [10, 259, 261, 268], "736": [10, 175], "1835": 10, "1725": 10, "1940": 10, "min": [10, 37, 48, 89, 92, 93, 94, 95, 96, 97, 157, 175, 196, 202, 203, 239], "oh": 10, "dear": 10, "variat": [10, 11, 36, 37, 83, 186, 202, 225, 265, 268], "runtimewarn": [10, 48, 54, 199], "noise_level": 10, "nois": [10, 37, 53, 179, 184, 202, 215, 242, 249, 251, 265], "quickli": [10, 76, 157, 202, 251, 259], "seterr": 10, "floatingpointerror": 10, "anaconda": [10, 39, 76, 80, 265], "site": [10, 39, 48, 76, 85, 86, 181, 203, 236, 238, 253], "util": [10, 39, 85, 86, 202, 231], "py3compat": 10, "pyc": [10, 39, 54, 85], "execfil": [10, 54, 85], "fname": 10, "176": [10, 13, 36, 171, 268], "177": [10, 48, 251], "178": [10, 251, 254, 261, 265], "__builtin__": 10, "physiqu": 10, "cuso": 10, "2013": 10, "55": [10, 159, 181, 203, 233], "pl": 10, "matshow": [10, 222], "noisy_fac": [10, 182, 201, 202], "cut": [10, 181], "cmap": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 43, 46, 47, 48, 50, 105, 123, 127, 131, 144, 146, 149, 157, 158, 159, 162, 165, 172, 177, 178, 182, 183, 185, 192, 201, 202, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 237, 238, 239, 246, 247, 251, 258, 263], "cm": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 42, 43, 46, 47, 48, 50, 105, 123, 131, 133, 144, 149, 151, 157, 158, 159, 162, 165, 172, 177, 178, 182, 183, 185, 197, 201, 202, 237, 238, 239, 246, 247, 251, 258], "56": [10, 196, 202, 251], "57": [10, 12, 26, 265], "denoised_fac": 10, "58": [10, 33, 37, 53, 54, 196, 202, 203, 253, 254, 257, 258, 260, 263], "59": [10, 196, 202], "41": [10, 54, 81, 86, 159, 237, 254, 265], "42": [10, 81, 86, 159, 206, 247, 251, 260, 265], "poor": [10, 76], "man": 10, "tediou": [10, 53], "nose": [10, 238], "ipdbplugin": 10, "set_trac": 10, "captur": [10, 54, 79, 249, 251, 265], "pudb": 10, "semi": [10, 157], "consol": [10, 76, 85, 157], "mu": [10, 139, 154, 215], "l": [10, 12, 15, 22, 24, 26, 28, 33, 34, 37, 39, 43, 47, 53, 54, 76, 77, 79, 85, 86, 105, 108, 157, 159, 172, 175, 226, 229, 231], "goe": [10, 39, 263], "bt": 10, "opposit": [10, 201, 202, 216], "overrid": [10, 66, 85], "frame": [10, 73, 75, 157, 174, 217], "eof": 10, "pdef": 10, "tbreak": 10, "pdoc": 10, "whati": 10, "alia": [10, 76], "pinfo": 10, "unalia": 10, "pp": [10, 215], "unt": 10, "disabl": [10, 39], "condit": [10, 46, 47, 48, 65, 73, 75, 79, 84, 172, 191, 202, 238, 253, 263, 265], "miscellan": [10, 175], "undocu": 10, "retval": 10, "rv": [10, 186, 202], "crash": [10, 39], "embed": [10, 73, 76, 215, 217], "macro": [10, 236, 237, 238, 251], "gdbinit": 10, "feel": [10, 238, 259], "free": [10, 37, 53, 65, 76, 84, 157, 238, 251, 265], "debuggingwithgdb": 10, "segfault": 10, "libthread_db": 10, "signal": [10, 37, 54, 73, 75, 76, 85, 159, 176, 182, 194, 201, 215, 268], "sigsegv": 10, "_strided_byte_copi": 10, "dst": 10, "0x8537478": 10, "360": 10, "343g": 10, "outstrid": 10, "0x86c0690": 10, "instrid": 10, "elsiz": 10, "multiarrai": [10, 54], "ctor": 10, "365": [10, 196, 260], "_fast_mov": 10, "0x004af4f5": 10, "_copy_from_same_shap": 10, "dest": 10, "myfunc": 10, "0x496780": 10, "748": [10, 253], "dit": 10, "dataptr": [10, 39], "stride": [10, 37, 38, 39, 54, 73, 77], "maxaxi": 10, "trigger": 10, "hit": [10, 37, 54, 215], "0x080ddd23": 10, "call_funct": 10, "0x85371ec": 10, "arrayprint": 10, "156": [10, 260], "_leading_trail": 10, "ndarrai": [10, 37, 38, 39, 54, 62, 66, 73, 74, 159, 175, 231], "remot": [10, 215], "0x85371b0": 10, "_nc": 10, "0xb7f93a64": 10, "throwflag": 10, "ceval": 10, "3750": 10, "pyeval_evalframeex": 10, "2412": 10, "pyfram": 10, "158": [10, 254, 265], "0x080dc97a": 10, "0x82f064c": 10, "print_big_arrai": 10, "small_arrai": 10, "0x853ecf0": 10, "big_arrai": 10, "0x853ed20": 10, "1630": 10, "make_big_arrai": 10, "2e6": 10, "alloc": [10, 39, 54, 62], "memori": [10, 37, 38, 39, 48, 53, 54, 62, 73, 76, 77, 159, 171, 175, 251], "hopefulli": 10, "legibl": [10, 54], "seek": [10, 202, 251], "to_debug": 10, "root": [10, 53, 54, 73, 75, 158, 169, 175, 176, 194, 268], "task": [10, 37, 53, 66, 78, 202, 231, 251, 266], "bench": [10, 42], "1d": [10, 38, 41, 66, 73, 159, 160, 170, 173, 175, 176, 189, 194, 202, 216, 251, 265, 268], "finder": 10, "brenth": 10, "604678": 10, "brentq": 10, "594454": 10, "ridder": 10, "778394": 10, "bisect": 10, "2148380": 10, "tan": [10, 266], "dilat": [10, 11, 36, 37, 85, 201, 202, 231, 268], "tanh": 10, "contract": 10, "gradient": [10, 33, 37, 38, 40, 43, 46, 52, 65, 73, 172, 218, 230, 231, 235, 268], "sin": [10, 39, 68, 70, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 121, 124, 130, 131, 134, 140, 149, 150, 152, 157, 175, 178, 179, 181, 184, 187, 188, 189, 192, 201, 202, 247, 265, 266], "monoton": 10, "maxima": [10, 35, 175, 201, 202, 206, 207, 212, 216, 227, 231], "apply_optim": 10, "lower": [10, 46, 47, 48, 105, 127, 146, 177, 192, 202, 204, 214, 216, 241, 251], "full_output": [10, 53], "function_cal": [10, 202], "bench_optim": 10, "param_grid": 10, "compare_optim": 10, "grid": [10, 38, 73, 75, 90, 99, 121, 124, 140, 141, 155, 156, 164, 166, 172, 175, 177, 188, 258, 268], "admit": [10, 46, 53], "random_a": 10, "random_b": 10, "8i": 10, "radial": [11, 36, 37, 268], "sharpen": [11, 36, 38, 73, 231, 268], "blur": [11, 32, 36, 38, 73, 176, 195, 197, 200, 202, 268], "synthet": [11, 36, 37, 38, 73, 201, 202, 231, 246, 268], "eros": [11, 36, 37, 201, 202, 231, 268], "denois": [11, 36, 38, 73, 176, 182, 195, 200, 218, 230, 268], "geometr": [11, 36, 38, 73, 74, 75, 176, 194, 231, 268], "transform": [11, 12, 26, 36, 38, 54, 70, 73, 75, 76, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 175, 176, 181, 194, 197, 198, 218, 230, 231, 233, 238, 244, 248, 251, 253, 259, 260, 266, 268], "box": [11, 36, 37, 38, 73, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 255, 256, 268], "measur": [11, 36, 38, 39, 53, 73, 75, 85, 159, 184, 204, 214, 215, 216, 217, 226, 227, 232, 238, 249, 250, 255, 268], "median": [11, 19, 36, 37, 175, 182, 202, 204, 214, 225, 231, 251, 265, 268], "histogram": [11, 12, 36, 37, 73, 176, 193, 194, 201, 202, 204, 214, 218, 229, 230, 235, 251, 268], "segment": [11, 36, 38, 39, 53, 73, 217, 218, 230, 268], "greyscal": [11, 36, 37, 268], "sobel": [11, 36, 37, 218, 230, 231, 268], "morphologi": [11, 25, 30, 36, 38, 73, 75, 85, 176, 194, 204, 214, 217, 268], "gaussian": [11, 19, 36, 37, 53, 73, 75, 159, 176, 182, 194, 195, 197, 200, 202, 209, 211, 217, 225, 226, 231, 268], "mixtur": [11, 36, 37, 265, 268], "model": [11, 36, 37, 45, 73, 75, 157, 209, 211, 216, 217, 232, 233, 234, 236, 237, 238, 241, 242, 243, 245, 246, 250, 253, 254, 257, 258, 260, 263, 268], "watersh": [11, 36, 37, 73, 218, 230, 268], "granulometri": [11, 36, 37, 268], "spectral": [11, 36, 37, 176, 194, 202, 268], "cluster": [11, 36, 37, 85, 233, 251, 268], "analysi": [12, 24, 26, 37, 38, 54, 73, 202, 217, 231, 232, 239, 250, 251, 252, 257, 258, 260, 261, 268], "threshold": [12, 73, 204, 214, 218, 230, 268], "foreground": [12, 73, 217], "sklearn": [12, 33, 37, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "gaussianmixtur": 12, "im": [12, 15, 16, 21, 22, 24, 25, 26, 28, 34, 37, 197, 226, 231, 266], "ndimag": [12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 38, 73, 75, 85, 178, 182, 183, 185, 198, 201, 204, 214, 227, 231], "gaussian_filt": [12, 14, 15, 19, 21, 22, 24, 26, 28, 32, 34, 37, 182, 198, 201, 202], "sigma": [12, 14, 15, 22, 24, 26, 28, 34, 37, 182, 201, 202, 215, 225, 226, 231], "hist": [12, 26, 37, 186, 193, 202, 229, 235, 251], "bin_edg": [12, 26, 37], "60": [12, 26, 37, 159, 204, 246, 251, 265], "bin_cent": [12, 26, 37], "classif": [12, 37, 73, 217, 232, 238, 239, 245, 250, 268], "n_compon": [12, 237, 238, 244, 248, 251], "means_": 12, "binary_img": [12, 15, 26, 37], "figsiz": [12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 48, 49, 50, 51, 65, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 126, 136, 137, 138, 140, 143, 145, 157, 169, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 208, 209, 210, 211, 215, 219, 220, 221, 223, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 257], "subplot": [12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 65, 73, 75, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 117, 126, 143, 145, 147, 151, 156, 178, 182, 183, 185, 201, 202, 208, 209, 210, 211, 215, 219, 221, 223, 225, 226, 227, 228, 229, 247, 268], "131": [12, 14, 17, 19, 20, 26, 30, 32, 34, 35, 226, 229, 234], "132": [12, 14, 17, 19, 20, 26, 30, 32, 34, 35, 79, 226, 229, 265], "lw": [12, 26, 62, 104, 108, 109, 110, 121, 124, 140, 150, 157, 158, 163, 229, 234], "axvlin": [12, 26, 43, 50, 102, 229], "fontsiz": [12, 16, 19, 20, 21, 26, 43, 48, 50, 89, 97, 105, 108, 110, 123, 132, 139, 144, 154, 157, 233, 238], "gca": [12, 26, 89, 95, 96, 97, 117, 132, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157], "transax": [12, 26, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "ytick": [12, 26, 42, 48, 89, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 152, 153, 154, 157, 181, 233, 234, 237, 238, 247, 251], "133": [12, 14, 17, 19, 20, 26, 30, 32, 34, 35, 37, 171, 226, 229, 265], "nearest": [12, 16, 25, 26, 27, 30, 33, 35, 37, 127, 146, 158, 165, 183, 201, 202, 220, 221, 223, 224, 225, 227, 228, 229, 231, 232, 237, 246, 250, 251, 268], "subplots_adjust": [12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 105, 117, 128, 178, 182, 183, 185, 234, 237, 253], "wspace": [12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 178, 182, 183, 185, 234, 237], "02": [12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 30, 34, 47, 48, 86, 118, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 181, 187, 206, 216], "hspace": [12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 237], "449": [12, 36, 268], "plot_gmm": [12, 36, 268], "broad": 13, "cast": [13, 38, 39, 73, 75, 77, 174, 181], "dataset": [13, 14, 17, 18, 19, 20, 23, 27, 29, 31, 32, 37, 39, 73, 85, 158, 172, 182, 183, 201, 202, 205, 213, 231, 232, 234, 235, 236, 238, 239, 241, 243, 244, 246, 248, 250, 254, 259, 260, 268], "sx": [13, 21, 31, 37, 172], "ogrid": [13, 29, 31, 37, 172, 175], "region": [13, 15, 37, 73, 166, 217], "block_mean": [13, 37], "label": [13, 22, 28, 31, 33, 34, 35, 37, 42, 48, 73, 75, 89, 96, 97, 175, 177, 178, 179, 180, 181, 184, 186, 188, 189, 190, 193, 201, 202, 204, 214, 218, 227, 230, 233, 234, 237, 238, 240, 241, 244, 245, 247, 248, 251, 268], "max": [13, 24, 31, 37, 48, 89, 92, 93, 94, 95, 96, 97, 157, 159, 171, 175, 196, 201, 202, 203, 204, 206, 207, 212, 216, 231, 239], "plot_block_mean": [13, 36, 268], "blurred_fac": [14, 37, 182, 201, 202], "very_blur": [14, 37], "uniform_filt": [14, 37], "01": [14, 17, 25, 28, 30, 33, 35, 46, 48, 52, 53, 54, 65, 105, 108, 110, 117, 118, 121, 124, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 178, 179, 182, 183, 185, 192, 200, 202, 246, 250, 268], "285": [14, 36, 268], "plot_blur": [14, 36, 268], "hole": [15, 37, 201, 202], "white": [15, 37, 77, 89, 122, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 201, 202, 259], "open_img": [15, 37], "binary_open": [15, 24, 30, 37, 185, 201, 202, 204, 231], "black": [15, 37, 53, 77, 123, 140, 144, 157, 172, 201, 202, 214, 238], "close_img": [15, 37], "binary_clos": [15, 37, 185, 201, 202], "128": [15, 79, 101, 103, 171, 196, 200, 257, 261, 265, 268], "141": [15, 16, 21, 25, 36, 37, 182, 185, 225, 227, 268], "142": [15, 16, 21, 25, 157, 182, 185, 225, 227], "143": [15, 16, 21, 25, 182, 185, 225, 227, 265], "144": [15, 16, 21, 25, 182, 185, 202, 225, 227, 253], "contour": [15, 17, 24, 37, 43, 46, 47, 48, 50, 73, 75, 99, 141, 155, 156, 218, 230, 231, 246, 247, 268], "linewidth": [15, 24, 41, 43, 44, 48, 49, 50, 51, 68, 70, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 106, 107, 115, 116, 118, 123, 125, 134, 140, 144, 145, 152, 157, 177, 181, 268], "080": [15, 36, 268], "plot_clean_morpho": [15, 36, 268], "distance_transform_bf": [16, 25, 37], "im_nois": [16, 37], "im_m": [16, 37], "median_filt": [16, 19, 37, 182, 201, 202, 204], "vmin": [16, 17, 19, 20, 37, 197], "vmax": [16, 17, 19, 20, 28, 37, 48], "hot": [16, 54, 123, 131, 144, 149, 157, 159, 162], "plot_denois": [16, 36, 268], "30": [17, 32, 37, 41, 48, 54, 81, 86, 89, 97, 157, 159, 162, 175, 183, 193, 198, 201, 202, 206, 209, 211, 215, 238, 241, 242, 247, 251, 253, 260, 263, 265], "50": [17, 20, 33, 37, 45, 53, 89, 97, 157, 159, 166, 172, 178, 179, 183, 184, 185, 186, 201, 202, 204, 206, 207, 216, 224, 231, 234, 237, 238, 246, 247, 251], "05": [17, 36, 41, 43, 48, 86, 105, 122, 129, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 168, 172, 178, 182, 183, 185, 206, 230, 233, 234, 237, 260, 263, 268], "364": [17, 36, 268], "plot_display_fac": [17, 36, 268], "v3": [18, 37, 158], "iio": [18, 37, 158], "imwrit": [18, 37, 158], "558": [18, 36, 253, 268], "plot_fac": [18, 36, 268], "demo": [19, 20, 23, 48, 54, 73, 75, 85, 86, 104, 106, 107, 111, 112, 113, 114, 115, 117, 124, 126, 127, 132, 141, 144, 147, 148, 149, 155, 156, 176, 179, 182, 183, 187, 188, 192, 194, 202, 232, 234, 250, 251, 268], "230": [19, 20, 37, 172], "220": [19, 20, 37], "320": [19, 20, 27, 37], "gauss_denois": [19, 37], "med_denois": [19, 37], "207": [19, 36, 268], "plot_face_denois": [19, 36, 268], "tv": [20, 225], "skimag": [20, 35, 37, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231], "denoise_tv_chambol": [20, 225, 231], "tv_denois": 20, "weight": [20, 37, 202, 216, 225, 231, 233, 237, 238, 251, 256, 263, 265], "218": [20, 36, 265, 268], "plot_face_tv_denois": [20, 36, 268], "rotat": [21, 23, 37, 105, 108, 110, 183, 201, 202, 224, 231, 233], "sob": [21, 37], "hypot": [21, 31, 37], "squar": [21, 25, 30, 37, 38, 65, 73, 74, 75, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 169, 175, 182, 201, 202, 231, 251, 253, 254, 257, 258, 260, 263, 265], "07": [21, 42, 47, 53, 171, 251, 258, 261, 263, 268], "221": [21, 36, 268], "plot_find_edg": [21, 36, 268], "label_im": [22, 28, 33, 34, 37], "nb_label": [22, 28, 34, 37], "compon": [22, 37, 54, 73, 75, 159, 176, 194, 217, 218, 230, 268], "mask_siz": [22, 28, 37], "remove_pixel": [22, 28, 37], "uniqu": [22, 28, 37, 39, 53, 77, 175], "searchsort": [22, 28, 37], "slice_x": [22, 37], "slice_i": [22, 37], "find_object": [22, 37, 178, 201, 202, 231], "ax": [22, 29, 31, 37, 41, 43, 48, 50, 73, 75, 89, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 168, 172, 175, 177, 181, 188, 198, 201, 202, 208, 209, 210, 211, 215, 231, 233, 234, 237, 238, 242, 246, 247, 251, 258, 265, 268], "019": [22, 36, 268], "plot_find_object": [22, 36, 268], "lx": [23, 29, 37], "crop": [23, 37, 172, 178, 182, 201, 202, 204, 214, 231], "crop_fac": [23, 37, 172], "flip": [23, 37], "flip_ud_fac": [23, 37], "flipud": [23, 37], "rotate_fac": [23, 37], "45": [23, 37, 86, 159, 201, 202, 233, 237, 251, 265], "rotate_face_noreshap": [23, 37], "151": [23, 183, 201, 202, 227, 230, 253, 260, 268], "152": [23, 27, 36, 183, 268], "153": [23, 37, 183], "154": [23, 183, 260], "155": [23, 183, 199, 200, 268], "454": [23, 36, 268], "plot_geom_fac": [23, 36, 268], "disk_structur": [24, 37], "bool": [24, 33, 35, 37, 74, 77, 159, 175, 227, 231], "granulo": [24, 37], "19": [24, 37, 39, 54, 59, 79, 81, 85, 86, 196, 202, 238, 265], "121": [24, 28, 33, 219, 221, 223, 228], "opened_mor": 24, "122": [24, 28, 33, 151, 155, 219, 221, 223, 228, 268], "95": [24, 122, 123, 125, 127, 129, 130, 133, 134, 135, 139, 159, 238, 251], "plot_granulo": [24, 36, 268], "illustr": [25, 41, 73, 84, 159, 202, 216, 221, 228, 229, 234, 254], "63": [25, 37, 254, 260, 265], "bigger_point": [25, 37], "grey_dil": [25, 37], "dist": [25, 37, 186, 202, 253], "dilate_dist": [25, 37], "nipy_spectr": [25, 28, 31, 33, 34, 35, 42, 226, 227, 228], "054": [25, 36, 54, 268], "plot_greyscale_dil": [25, 36, 268], "129": [26, 36, 258, 265, 268], "plot_histo_segment": [26, 36, 268], "demonstr": [27, 39, 101, 102, 181, 215, 243, 245], "340": [27, 37, 258], "510": [27, 37, 265], "530": [27, 37, 260], "plot_interpolation_fac": [27, 36, 268], "quantiti": [28, 235, 251, 252, 261, 265, 268], "label_clean": 28, "040": [28, 36, 119, 134, 156, 260, 268], "plot_measure_data": [28, 36, 268], "trick": [29, 37, 38, 53, 54, 70, 73, 75, 172, 175, 202], "23": [29, 37, 39, 41, 54, 81, 83, 85, 86, 159, 196, 202, 216, 238, 258], "120": [29, 37, 258, 265], "400": [29, 37, 238], "161": [29, 36, 253, 268], "plot_numpy_arrai": [29, 36, 268], "open_squar": [30, 37], "eroded_squar": [30, 37], "binary_eros": [30, 37, 201, 202, 231], "reconstruct": [30, 37, 181, 201, 202], "binary_propag": [30, 37], "038": [30, 36, 108, 118, 268], "plot_propag": [30, 36, 268], "rbin": [31, 37], "radial_mean": [31, 37], "174": [31, 36, 251, 268], "plot_radial_mean": [31, 36, 268], "noiseless": 32, "invers": [32, 53, 65, 175, 181, 198, 202, 216, 224, 231], "blurred_f": [32, 37], "filter_blurred_f": [32, 37], "tight_layout": [32, 41, 42, 44, 48, 49, 51, 126, 136, 137, 138, 169, 175, 191, 192, 219, 220, 221, 223, 226, 227, 228, 229, 234, 235, 240, 241, 243], "450": [32, 36, 237, 251, 268], "plot_sharpen": [32, 36, 268], "feature_extract": [33, 37], "spectral_clust": [33, 37], "center1": [33, 37], "center2": [33, 37], "center3": [33, 37], "center4": [33, 37], "70": [33, 37, 158, 159, 192, 237], "radius1": [33, 37], "radius2": [33, 37], "radius3": [33, 37], "radius4": [33, 37], "circle1": [33, 37], "circle2": [33, 37], "circle3": [33, 37], "circle4": [33, 37], "graph": [33, 37, 62, 231], "img_to_graph": [33, 37], "decreas": [33, 37, 78, 85, 251, 253], "weakli": [33, 37], "voronoi": [33, 37], "exp": [33, 37, 41, 44, 46, 48, 49, 53, 123, 127, 144, 146, 157, 175, 198, 202, 209, 211, 215, 266], "solver": [33, 38, 48, 53, 57, 58, 59, 61, 64, 66, 73, 202], "arpack": [33, 37, 54, 65], "amg": [33, 65], "numer": [33, 38, 39, 53, 75, 76, 84, 85, 159, 172, 215, 251, 253, 256, 263, 265, 266], "unstabl": [33, 53, 202], "n_cluster": [33, 37], "436": [33, 36, 268], "plot_spectral_clust": [33, 36, 268], "073": [34, 36, 136, 156, 184, 194, 268], "plot_synthetic_data": [34, 36, 268], "peak_local_max": [35, 227, 231], "x1": [35, 227, 231, 246, 247], "y1": [35, 122, 142, 157, 227, 231], "52": [35, 159, 196, 202, 227, 231, 237, 251], "r1": [35, 227, 231], "r2": [35, 227, 231], "mask_circle1": [35, 227, 231], "mask_circle2": [35, 227, 231], "logical_or": [35, 175, 227, 231], "marker": [35, 42, 65, 73, 75, 99, 100, 118, 150, 217, 227, 234, 253, 254, 263, 265, 268], "distanc": [35, 160, 169, 170, 173, 175, 215, 227, 231, 253, 268], "distance_transform_edt": [35, 227, 231], "peak_idx": [35, 227, 231], "footprint": [35, 215, 227, 231], "peak_mask": [35, 227, 231], "zeros_lik": [35, 159, 227, 231], "057": [35, 36, 110, 118, 187, 194, 268], "plot_watershed_segment": [35, 36, 268], "190": [36, 201, 202, 254, 260, 265], "image_process": [36, 268], "multidimension": [37, 38, 39, 73, 85, 159], "submodul": [37, 65, 85, 202, 231, 251], "dimension": [37, 39, 42, 54, 65, 73, 74, 159, 201, 202, 217, 231, 248], "routin": [37, 76, 158, 175, 202, 231], "dedic": [37, 38, 76, 84, 85, 202, 217, 226, 231, 265], "ct": [37, 231], "mri": [37, 159, 231, 265], "2d": [37, 62, 66, 132, 149, 157, 159, 160, 170, 172, 173, 175, 178, 198, 216, 232, 237, 248, 250, 251, 258, 265, 268], "pixel": [37, 90, 157, 159, 172, 201, 202, 204, 214, 227, 231, 237, 238, 251], "imread": [37, 158, 165, 197, 198, 202, 204, 231], "768": [37, 172, 231, 260], "1024": [37, 77, 135, 153, 157, 172, 231], "camera": [37, 220, 221, 223, 229, 231], "tofil": 37, "face_from_raw": 37, "2359296": 37, "memmap": [37, 159], "face_memmap": 37, "10000": [37, 175], "random_": 37, "02d": 37, "glob": [37, 73, 75, 84, 203], "filelist": 37, "sort": [37, 42, 63, 73, 75, 77, 78, 79, 105, 174, 203, 206, 207, 216, 251], "retriev": [37, 77, 251, 257, 258, 265], "grayscal": [37, 172, 219], "axesimag": [37, 158, 159, 165, 172, 198, 201, 202, 231, 238], "contrast": [37, 159, 202, 231, 254, 263, 265, 266], "1023": [37, 201, 202], "767": [37, 117, 118, 201, 202, 268], "draw": [37, 48, 49, 51, 76, 144, 145, 154, 157, 202, 231, 251], "quadcontourset": [37, 231, 247], "intens": [37, 231], "bilinear": 37, "machineri": [37, 56, 59], "127": [37, 253], "slice": [37, 38, 56, 57, 58, 59, 60, 63, 73, 75, 77, 81, 157, 174, 175, 201, 202, 222, 231, 239], "145": 37, "134": [37, 78, 179, 194, 265, 268], "125": [37, 74, 131, 156, 268], "96": [37, 171, 237, 238, 251, 254, 265], "92": [37, 127, 251], "94": [37, 237, 238, 265], "113": [37, 186, 194, 221, 230, 257, 265, 268], "48026784261067": 37, "250": [37, 53, 265], "_static": [37, 231], "zoom": [37, 183, 201, 202], "minimum": [37, 40, 52, 65, 84, 159, 175, 176, 188, 194, 202, 231, 268], "maximum": [37, 48, 53, 65, 73, 75, 175, 201, 202, 231], "stat": [37, 73, 75, 85, 186, 253, 257, 258, 259, 260, 265], "scoreatpercentil": 37, "satur": 37, "darkest": 37, "lightest": 37, "jpg": [37, 204, 214], "tiff": 37, "neighbor": [37, 73, 201, 202, 217, 231, 232, 236, 250, 268], "neighbourhood": [37, 231], "choos": [37, 38, 70, 73, 85, 175, 202, 231, 251, 260], "disk": [37, 159, 171, 227, 231], "uniform": [37, 111, 113, 122, 139, 142, 154, 157, 159, 223, 231, 251], "approxim": [37, 38, 65, 73, 75, 174, 202, 215], "laplacian": 37, "isotrop": 37, "straight": [37, 157, 251], "boundari": [37, 65, 157, 215, 239, 251], "low": [37, 39, 53, 202, 251], "curvatur": [37, 53], "standard_norm": [37, 159, 182, 185, 201, 202], "rank": [37, 53, 231, 265], "maximum_filt": 37, "percentile_filt": 37, "ellips": 37, "closest": [37, 172, 251], "wikipedia": [37, 81, 203, 231], "probe": [37, 231], "el": [37, 201, 202], "generate_binary_structur": [37, 201, 202], "minim": [37, 38, 43, 46, 47, 48, 50, 65, 73, 177, 187, 201, 215, 231, 251], "binary_dil": [37, 85, 201, 202, 231], "grei": [37, 159, 172], "corner": [37, 157, 201, 202, 204, 214, 231], "tophat": [37, 231], "spatial": [37, 85, 251], "eroded_img": 37, "reconstruct_img": 37, "logical_not": 37, "eroded_tmp": 37, "reconstruct_fin": 37, "00640699": 37, "00082232": 37, "accur": [37, 202, 251], "glu": 37, "eigen_solv": 37, "dimag": 37, "mean_valu": 37, "mean_val": 37, "reassign": 37, "center_of_mass": 37, "maximum_posit": 37, "scope": [37, 70, 202], "broadcast": [37, 38, 54, 73, 75, 172, 174, 202], "regular": [37, 73, 74, 75, 150, 217, 232, 250, 253, 268], "fake": [37, 38, 73], "dimens": [37, 38, 39, 47, 53, 54, 73, 75, 159, 174, 231, 238], "regularli": [37, 77, 202], "space": [37, 53, 59, 76, 77, 78, 85, 157, 159, 171, 175, 181, 202, 231, 248, 251, 253], "correl": [37, 74, 172, 249, 251], "fourier": [37, 73, 75, 76, 85, 197, 198], "wavelet": 37, "spectrum": [37, 192, 197, 202], "opencv": [37, 231, 238], "cellprofil": 37, "itk": [37, 231], "strive": [38, 251], "educ": [38, 252, 259, 261, 265, 268], "profici": 38, "coder": 38, "expert": [38, 73], "tackl": 38, "bidirect": [38, 73], "chain": [38, 73, 75, 174, 232, 250, 251, 263, 268], "decor": [38, 54, 73, 99, 141, 149, 155, 157, 188, 268], "standard": [38, 39, 73, 74, 75, 76, 81, 84, 175, 186, 202, 204, 214, 253, 254, 257, 258, 259, 260, 263, 265], "manag": [38, 39, 73, 76, 79, 171, 238, 259, 265], "descriptor": [38, 73, 231], "wav": [38, 73], "scheme": [38, 59, 61, 73, 251], "fortran": [38, 54, 73, 75, 77, 84, 159, 202, 216], "diagon": [38, 66, 73, 202, 238], "cpu": [38, 54, 73, 251], "dissect": [38, 73], "univers": [38, 73, 76], "ufunc": [38, 73], "exercis": [38, 46, 73, 75, 76, 84, 98, 160, 170, 173, 174, 198, 207, 212, 213, 215, 217, 263, 268], "scratch": [38, 73, 157, 202], "solut": [38, 39, 46, 47, 53, 62, 65, 73, 75, 85, 86, 88, 157, 172, 191, 199, 200, 216, 217, 248, 251, 263, 264, 266, 268], "sibl": [38, 73, 171], "chararrai": [38, 73], "maskedarrai": [38, 73, 75, 174], "domain": [38, 73, 76, 202, 266], "awar": [38, 73], "recarrai": [38, 73], "summari": [38, 61, 73, 75, 81, 159, 174, 201, 213, 215, 216, 217, 253, 254, 257, 258, 260, 263, 265, 268], "contribut": [38, 73, 74, 215], "bug": [38, 39, 55, 73, 159], "avoid": [38, 39, 54, 70, 73, 76, 77, 198, 202, 239, 251, 260], "best": [38, 42, 53, 54, 73, 175, 179, 180, 181, 188, 189, 190, 193, 234, 245, 251, 258, 266], "practic": [38, 39, 73, 75, 81, 84, 159, 215, 251, 265], "troubl": [38, 73, 202, 251], "pyflak": [38, 73], "fast": [38, 43, 53, 55, 56, 57, 58, 59, 62, 66, 73, 75, 76, 86, 157, 159, 231, 251], "spell": [38, 73], "checker": [38, 73], "workflow": [38, 70, 73, 75, 157], "debugg": [38, 39, 73, 76], "postmortem": [38, 73], "command": [38, 54, 73, 75, 76, 79, 84, 85, 120, 157, 222, 266], "fault": [38, 39, 73], "gdb": [38, 73], "profil": [38, 73, 76, 85], "svd": [38, 73, 202], "storag": [38, 61, 73], "typic": [38, 61, 73, 78, 175, 202, 214, 238, 251, 259, 260], "prerequisit": [38, 61, 73, 231], "sparsiti": [38, 57, 58, 60, 61, 63, 73], "linearoper": [38, 61, 73], "precondit": [38, 46, 61, 73], "eigenvalu": [38, 54, 61, 64, 73, 172, 202], "eigen": [38, 61, 73], "smooth": [38, 40, 49, 52, 65, 73, 76, 176, 194, 201, 202, 231, 268], "minima": [38, 73, 175, 176, 194, 202, 204, 214, 268], "convex": [38, 40, 41, 52, 73, 268], "versu": [38, 51, 73, 99, 100, 118, 153, 157, 216, 268], "cost": [38, 39, 54, 73], "constraint": [38, 40, 52, 73, 215, 268], "review": [38, 73, 157], "intuit": [38, 73, 172, 251, 254, 263, 265], "descent": [38, 40, 52, 73, 268], "conjug": [38, 65, 73, 76, 159], "newton": [38, 47, 48, 73, 202], "quasi": [38, 65, 73, 202], "hessian": [38, 47, 48, 73], "2nd": [38, 73, 172, 202], "differenti": [38, 62, 73, 202, 217], "shoot": [38, 73], "powel": [38, 46, 47, 48, 73], "simplex": [38, 73], "nelder": [38, 48, 73, 187], "mead": [38, 48, 73, 187], "brute": [38, 73, 188], "search": [38, 48, 73, 74, 77, 85, 86, 157, 159, 175, 202], "exercic": [38, 73, 175], "norm": [38, 65, 73, 172, 186, 197, 202, 253], "curv": [38, 39, 40, 52, 73, 75, 76, 157, 176, 194, 195, 200, 209, 211, 268], "ctype": [38, 73], "swig": [38, 73], "further": [38, 73, 75, 77, 198, 202, 251, 266], "rout": [39, 175], "nativ": [39, 77, 80], "primarili": [39, 238], "commonli": [39, 54, 202, 238], "goal": [39, 70, 83, 215, 216, 231, 238, 251], "flavour": [39, 159], "technologi": 39, "merit": 39, "shortcom": 39, "appropri": [39, 202], "certainli": 39, "consult": 39, "techniqu": [39, 54, 73, 202, 238, 251], "wrapper": [39, 65, 251], "These": [39, 53, 76, 175, 215, 238, 251], "four": [39, 76, 78, 157, 251], "perhap": 39, "known": [39, 53, 56, 60, 63, 73, 75, 159, 174, 175], "probabl": [39, 73, 75, 76, 157, 158, 171, 172, 175, 186, 198, 199, 206, 207, 251], "understood": 39, "criteria": 39, "autogener": 39, "leverag": 39, "slow": [39, 47, 57, 58, 60, 62, 63, 66], "push": [39, 70, 251], "co": [39, 45, 53, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 134, 152, 157, 158, 163, 167, 179, 196, 202, 247, 265, 266], "math": [39, 53, 54, 157, 181, 202, 203], "mostli": [39, 202, 260], "serv": 39, "cosin": [39, 89, 90, 96, 97, 157, 159], "due": [39, 63, 159, 202, 251, 255, 265], "backbon": 39, "cpython": 39, "virtu": 39, "pars": [39, 76, 85, 158], "later": [39, 85, 157, 175, 251], "lot": [39, 78, 175, 238, 249, 251], "entir": [39, 266], "usabl": 39, "disadvantag": 39, "substanti": 39, "amount": [39, 80, 201, 202, 238, 249, 251, 265], "overhead": [39, 53], "track": [39, 54, 73, 75, 85], "mainli": [39, 202], "didact": [39, 198, 238, 251], "anyon": [39, 74], "addition": [39, 215], "cpycheck": 39, "discov": [39, 199], "cos_func": 39, "pyarg_parsetupl": 39, "libm": 39, "py_buildvalu": 39, "pymethoddef": 39, "cosmethod": 39, "meth_vararg": 39, "py_major_vers": 39, "pymoduledef": 39, "cmodpydem": 39, "pymoduledef_head_init": 39, "cos_modul": 39, "pymodinit_func": 39, "pyinit_cos_modul": 39, "pymodule_cr": 39, "initcos_modul": 39, "py_initmodul": 39, "endif": 39, "massag": [39, 260], "although": [39, 76], "amortis": 39, "grow": [39, 62, 169, 175, 202, 231, 251], "remain": [39, 238], "distutil": 39, "rather": [39, 59, 70, 74, 78, 85, 202, 215, 251], "ext_modul": 39, "cd": [39, 76, 85], "interfacing_with_c": 39, "python_c_api": 39, "build_ext": 39, "inplac": [39, 263], "temp": [39, 85, 86], "x86_64": 39, "pthread": 39, "fno": 39, "strict": [39, 85], "alias": [39, 76, 99, 100, 118, 157, 268], "o2": 39, "dndebug": 39, "fwrapv": 39, "o3": 39, "wall": 39, "wstrict": 39, "prototyp": 39, "fpic": 39, "lpython2": 39, "metadata": 39, "3149": 39, "longer": [39, 85, 251], "dir": [39, 85, 231], "__package__": [39, 85], "5403023058681398": 39, "14159265359": 39, "robust": [39, 53, 85, 202, 253], "typeerror": [39, 56, 79, 81], "11bee483665d": 39, "analog": [39, 63, 157], "custom": [39, 76, 79, 83, 157], "arrayobject": 39, "cos_func_np": 39, "ret": 39, "npyiter": 39, "npy_uint32": 39, "op_flag": 39, "iterator_flag": 39, "op_dtyp": 39, "npyiter_iternextfunc": 39, "iternext": 39, "pyarray_typ": 39, "npy_iter_zerosize_ok": 39, "speed": [39, 54, 73, 75, 202, 205, 207, 212, 213, 231, 251, 268], "npy_iter_buff": 39, "innermost": 39, "npy_iter_external_loop": 39, "npy_iter_growinn": 39, "npy_iter_readonli": 39, "npy_iter_nbo": 39, "npy_iter_align": 39, "npy_iter_writeonli": 39, "npy_iter_alloc": 39, "pyarray_descrfromtyp": 39, "npyiter_multinew": 39, "npy_keepord": 39, "npy_equiv_cast": 39, "py_decref": 39, "npyiter_getiternext": 39, "npyiter_dealloc": 39, "fetch": 39, "npyiter_getoperandarrai": 39, "py_incref": 39, "npyiter_getiters": 39, "necessari": [39, 70, 73, 77, 84, 85, 157, 159, 175, 217, 231, 258], "npyiter_getdataptrarrai": 39, "strideptr": 39, "npyiter_getinnerstridearrai": 39, "innersizeptr": 39, "npyiter_getinnerloopsizeptr": 39, "contigu": [39, 62], "sizeof": 39, "pyinit_cos_module_np": 39, "pyerr_occur": 39, "initcos_module_np": 39, "get_includ": 39, "include_dir": 39, "convinc": 39, "ourselv": [39, 53], "pi": [39, 68, 70, 78, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 121, 124, 130, 133, 139, 140, 150, 151, 154, 157, 178, 181, 184, 192, 196, 201, 202, 247, 266], "x_empti": 39, "y_empti": 39, "array_equ": [39, 175], "x_2d": [39, 248, 251], "ravel": [39, 175, 204, 239, 247], "y_2d": 39, "x_not_native_byteord": 39, "newbyteord": 39, "y_not_native_byteord": 39, "x_incorrect_dtyp": 39, "foreign": 39, "dll": 39, "roughli": [39, 54], "speak": [39, 157], "dylib": 39, "mac": [39, 80, 85], "advertis": 39, "find_librari": 39, "cdll": 39, "loadlibrari": 39, "windll": 39, "msvcrt": 39, "argtyp": 39, "c_doubl": 39, "restyp": 39, "somewhat": [39, 81, 266], "decept": 39, "__builtins__": [39, 85], "tell": [39, 54, 85, 202, 266], "argumenterror": 39, "certain": [39, 54, 79, 80, 85, 171, 238, 251, 266], "cookbook": [39, 74, 202], "ctypeslib": 39, "cos_doubl": 39, "in_arrai": 39, "out_arrai": 39, "resid": [39, 251], "phoni": 39, "libcos_doubl": 39, "wl": 39, "sonam": 39, "rm": [39, 76, 175, 235, 251], "vf": 39, "makefil": [39, 70], "test_cos_doubl": 39, "proce": 39, "npct": 39, "c_int": 39, "array_1d_doubl": 39, "ndpointer": 39, "ndim": [39, 159, 171], "mechan": [39, 62, 265], "libcd": 39, "load_librari": 39, "cos_doubles_func": 39, "inher": 39, "prealloc": 39, "empty_lik": [39, 159], "varieti": [39, 76, 84, 182, 183, 201, 202, 236, 265], "term": [39, 47, 53, 70, 76, 81, 202, 203, 251, 265, 266], "burden": 39, "tend": [39, 53, 202, 231, 251, 265], "human": [39, 53], "indirect": 39, "tricki": [39, 157, 197], "enorm": 39, "steep": 39, "imagin": [39, 202, 251], "expos": [39, 53, 158, 159, 251, 265], "swig_file_with_init": 39, "grain": [39, 73, 75, 201, 202], "exclus": [39, 159, 175], "stage": 39, "cos_module_wrap": 39, "_cos_modul": 39, "luckili": 39, "_newclass": 39, "_object": 39, "_swig_getattr": 39, "_swig_properti": 39, "_swig_repr": 39, "_swig_setattr": 39, "_swig_setattr_nondynam": 39, "typemap": 39, "convers": [39, 56, 66, 77, 80, 175, 231], "quick": [39, 73, 75, 76, 203, 217, 265], "in_array1": 39, "dim1": 39, "size_in": 39, "inplace_array1": 39, "size_out": 39, "inlin": [39, 43, 48, 50, 123, 132, 144, 157, 159], "observ": [39, 54, 186, 193, 202, 251, 253, 254, 257, 258, 260, 263, 265, 266], "wish": [39, 54, 202, 214, 251, 265], "_cos_doubl": 39, "cos_doubles_wrap": 39, "490": 39, "fragment": 39, "numpy_backward_compat": 39, "ndarraytyp": 39, "1722": 39, "ndarrayobject": 39, "2706": 39, "npy_deprecated_api": 39, "npy_no_deprecated_api": 39, "npy_1_7_api_vers": 39, "swig_numpi": 39, "superset": 39, "annot": [39, 73, 75, 89, 97, 150, 233], "increment": [39, 60, 63, 66], "bottleneck": [39, 54], "path": [39, 43, 48, 50, 73, 75, 85, 157, 203, 231, 253, 259, 260], "overcom": [39, 215], "ship": [39, 76, 231], "cmdclass": 39, "__test__": 39, "25": [39, 48, 54, 74, 78, 81, 85, 86, 102, 108, 110, 121, 122, 125, 130, 131, 139, 145, 149, 154, 157, 159, 172, 185, 189, 196, 201, 202, 209, 233, 236, 237, 238, 251, 260, 265], "27": [39, 53, 54, 74, 81, 85, 86, 211, 215, 238, 259, 260], "506": 39, "libc": 39, "cdefin": 39, "pyarray_data": 39, "253": 39, "__ufunc_api": 39, "236": [39, 254, 265], "_import_umath": 39, "cython_numpi": 39, "tabl": [39, 70, 73, 77, 81, 157, 217, 251], "summar": 39, "aspect": [39, 105, 192, 251, 253, 259, 265], "Of": [39, 60, 265], "blog": 39, "post": [39, 73, 76, 217], "insight": [39, 54, 231, 251, 265], "cleverli": 39, "inspir": 39, "brand": 39, "idea": [39, 175, 202, 231, 251], "pleas": [39, 53, 70, 79, 85, 215, 238, 244], "machin": [39, 73, 76, 217, 232, 233, 247, 250, 268], "especi": [39, 76, 80, 81, 82, 157, 175, 231], "involv": [39, 81, 253], "fragil": 39, "respond": 39, "badli": 39, "devis": 39, "potenti": 39, "overflow": [39, 166, 202, 218, 230, 231, 268], "obtain": [39, 76, 77, 86, 159, 169, 172, 175, 251], "submit": 39, "notic": [39, 159, 202, 263], "workaround": 39, "closer": [39, 159], "neighborhood": [40, 52, 53, 251, 268], "brent": [40, 52, 268], "geometri": [40, 52, 53, 268], "comparison": [40, 52, 53, 171, 172, 175, 265, 268], "converg": [41, 48, 65, 202, 236, 238, 251], "x_0": [41, 202], "epsilon": 41, "artifici": [41, 81, 251], "all_x": 41, "all_i": 41, "minimize_scalar": [41, 53, 202], "bracket": [41, 53, 202], "maxit": [41, 65], "tol": [41, 46, 53, 65], "finfo": [41, 171], "ep": [41, 171], "success": [41, 53, 169, 187, 202, 251], "this_x": 41, "markers": [41, 46, 48, 65, 111, 112, 113, 114, 157, 224], "markeredgewidth": [41, 111, 112, 113, 114, 157], "rx": [41, 48], "ylim": [41, 44, 48, 49, 51, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 103, 107, 109, 116, 117, 122, 124, 130, 134, 135, 142, 148, 150, 152, 153, 157, 177, 234], "ymin": [41, 44, 49, 51, 234], "ymax": [41, 234], "semilogi": [41, 42, 48], "ylabel": [41, 42, 48, 62, 169, 175, 181, 191, 192, 196, 199, 202, 206, 207, 208, 209, 210, 211, 212, 215, 234, 235, 239, 240, 241, 243, 257, 265], "xlabel": [41, 62, 169, 175, 181, 191, 192, 196, 199, 202, 206, 207, 208, 209, 210, 211, 212, 215, 234, 235, 239, 240, 241, 243, 257, 265], "214": [41, 52, 155, 268], "plot_1d_optim": [41, 52, 268], "pickl": [42, 73, 75, 84], "compare_optimizers_pi": 42, "version_info": 42, "pkl": [42, 86], "rb": [42, 86], "n_method": 42, "rosenbrock": [42, 48, 53], "n_dim": 42, "clf": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 233, 235, 236, 237, 238, 243, 246, 247, 251], "method_nam": 42, "n_dim_index": 42, "n_dim_bench": 42, "enumer": [42, 48, 73, 75, 105, 108, 110, 117, 202, 234, 235, 251], "cost_nam": 42, "cost_bench": 42, "method_index": 42, "this_bench": 42, "legend": [42, 48, 73, 75, 89, 96, 97, 168, 172, 177, 179, 180, 181, 184, 186, 188, 189, 190, 193, 199, 202, 209, 211, 215, 234, 241, 244, 245, 248, 251], "xtick": [42, 48, 89, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 152, 153, 154, 157, 233, 234, 237, 238, 247, 251, 255], "xlim": [42, 48, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 130, 134, 135, 142, 148, 150, 152, 153, 157, 177, 199], "loc": [42, 48, 89, 96, 97, 157, 168, 172, 179, 180, 181, 186, 188, 189, 190, 193, 199, 202, 234, 241, 245, 249, 251], "numpoint": 42, "handletextpad": [42, 48], "prop": [42, 48, 231], "frameon": [42, 48, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 157, 233], "twinx": 42, "dim": [42, 239], "47": [42, 86, 158, 212, 237, 251], "ncol": 42, "plot_compare_optim": [42, 52, 268], "mgrid": [43, 46, 47, 48, 50, 53, 134, 152, 157, 175], "sqrt": [43, 46, 47, 50, 51, 53, 54, 89, 97, 131, 134, 139, 149, 152, 154, 157, 159, 164, 169, 171, 175, 190, 202, 235, 251, 266], "gnuplot": [43, 46, 47, 48, 50, 76], "clabel": [43, 48, 50, 123, 132, 144, 157], "1f": [43, 48, 50], "fill_between": [43, 50, 130, 157], "axhlin": [43, 50, 188], "x_2": [43, 50, 53], "x_1": [43, 50, 53, 202], "equal": [43, 53, 65, 78, 80, 129, 172, 175, 218, 230, 231, 265, 266, 268], "accumul": [43, 50], "bfg": [43, 47, 48, 53], "optimum": 43, "f_prime": [43, 47, 48], "082": [43, 52, 254, 265, 268], "plot_constraint": [43, 52, 268], "tangent": [44, 53], "barycent": 44, "85": [44, 76, 233, 234, 251, 253], "045": [44, 52, 90, 98, 268], "plot_convex": [44, 52, 268], "omega": [45, 53, 190, 197, 202], "phi": [45, 53], "param": [45, 81, 179, 202, 257, 258], "params_cov": 45, "curve_fit": [45, 53, 179, 196, 202, 215], "bx": 45, "049": [45, 52, 120, 156, 246, 250, 268], "plot_curve_fit": [45, 52, 179, 194, 268], "unreli": 46, "x0": [46, 48, 53, 65, 177, 187, 202, 209, 211, 215], "adopt": 46, "reli": [46, 53], "162": 46, "won": [46, 83, 85], "g_prime": 46, "x_min": [46, 48, 53, 239, 247], "100j": [46, 47, 48], "gray_r": [46, 47, 48, 157], "dx": [46, 139, 154, 215, 266], "dy": [46, 190, 191, 202], "quiver": [46, 73, 75, 99, 141, 155, 156, 268], "110": [46, 52, 265, 268], "plot_exercise_flat_minimum": [46, 52, 268], "ill": [47, 53], "seen": [47, 53, 77, 81, 175, 251, 265], "judg": [47, 251], "ey": [47, 159, 238, 251], "resiz": [47, 73, 75, 174], "apply_along_axi": [47, 48], "t0": 47, "x_ref": 47, "2f": [47, 48, 122, 157, 206, 207], "f_ref": 47, "x_bfg": 47, "x_l_bfg": 47, "jac": [47, 48, 53, 187, 202], "x_newton": 47, "hess": [47, 48, 53], "cg": [47, 48, 53, 65], "87": [47, 54, 76, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 237, 253], "03": [47, 50, 194, 250, 253, 257, 258, 265, 268], "06": [47, 52, 53, 54, 187, 202, 230, 234, 268], "497": [47, 52, 268], "plot_exercise_ill_condit": [47, 52, 268], "evolut": [48, 169, 196, 199], "abspath": [48, 86], "cost_funct": 48, "mk_quad": 48, "mk_gauss": 48, "rosenbrock_prim": 48, "rosenbrock_hessian": 48, "loggingfunct": 48, "countingfunct": 48, "x_max": [48, 239, 247], "y_min": [48, 239, 247], "y_max": [48, 239, 247], "formatt": [48, 157, 240], "super_fmt": 48, "1i": 48, "elif": [48, 73, 75, 84], "2e": 48, "toi": [48, 53], "fmin_cg": 48, "gradient_desc": 48, "x_i": 48, "y_i": 48, "all_x_i": 48, "all_y_i": 48, "all_f_i": 48, "dx_i": 48, "dy_i": 48, "line_search": 48, "satisfi": [48, 159, 215, 265, 266], "wolf": 48, "r_": 48, "c2": [48, 266], "gradient_descent_adapt": 48, "conjugate_gradi": 48, "callback": [48, 65], "gtol": 48, "newton_cg": 48, "xtol": 48, "ftol": 48, "nelder_mead": 48, "counting_f_prim": 48, "counting_hessian": 48, "logging_f": 48, "counter": [48, 78, 251], "concaten": [48, 77, 80, 81, 159, 203, 253], "log_z": 48, "ptp": 48, "borderaxespad": 48, "handlelength": 48, "opt": [48, 85, 86, 181, 236, 238], "hostedtoolcach": [48, 85, 86, 181, 236, 238], "x64": [48, 85, 86, 181, 236, 238], "_linesearch": 48, "313": 48, "linesearchwarn": 48, "did": [48, 175, 202, 238, 251], "alpha_star": 48, "phi_star": 48, "old_fval": 48, "derphi_star": 48, "scalar_search_wolfe2": 48, "mathematical_optim": [48, 52, 268], "plot_gradient_desc": [48, 52, 268], "68": [48, 265], "232": 48, "retain": [48, 175, 251], "consum": [48, 197], "rcparam": [48, 101, 103, 249], "max_open_warn": 48, "optimizewarn": 48, "unknown": [48, 202, 251, 266], "411": [48, 52, 234, 250, 268], "101": [49, 51, 249, 250, 253, 268], "x_": 49, "31": [49, 54, 81, 86, 159, 171, 175, 196, 202, 236, 238, 253], "016": [49, 52, 268], "plot_noisi": [49, 52, 268], "slsqp": 50, "cobyla": 50, "04": [50, 86, 143, 250, 253, 254, 257, 258, 260, 263, 268], "atleast_1d": [50, 53], "ineq": [50, 53], "046": [50, 52, 94, 98, 253, 260, 268], "plot_non_bounds_constraint": [50, 52, 268], "037": [51, 52, 268], "plot_smooth": [51, 52, 268], "09": [52, 53, 202, 215, 254, 257, 260], "053": [52, 251], "energi": 53, "pai": [53, 85, 171], "book": [53, 76, 84, 265], "boyd": 53, "vandenbergh": 53, "onlin": [53, 70, 74, 175], "noced": 53, "wright": 53, "fletcher": 53, "explan": [53, 59, 77, 247], "scale": [53, 65, 157, 186, 202, 224, 231, 238, 249, 251, 253], "li": 53, "proven": 53, "everywher": 53, "wise": [53, 56, 59, 66, 74, 175], "blue": [53, 77, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 106, 107, 115, 116, 130, 157, 234, 251, 254, 263], "green": [53, 77, 90, 157, 237, 254, 263], "induc": 53, "constrain": [53, 188, 202], "interv": [53, 191, 202, 257, 258], "steepest": 53, "anisotrop": 53, "harder": [53, 76, 85, 172, 251], "prescal": 53, "relat": [53, 86, 159, 202, 231, 252, 259, 260, 262, 264, 265, 268], "bigger": [53, 157, 171, 265], "ellipt": [53, 202], "iso": 53, "experi": [53, 76, 83, 159, 175, 259, 265], "oscil": [53, 176, 194, 202, 268], "vallei": 53, "cross": [53, 70, 73, 74, 159, 217, 234, 241], "friction": 53, "sharp": 53, "reduc": [53, 203, 216, 238, 251, 265], "650": 53, "000e": [53, 202], "nit": [53, 187, 202], "53": [53, 159, 257], "nfev": [53, 187, 202], "81": [53, 231, 237, 258], "njev": [53, 187, 202], "jacobian": [53, 202, 215], "95786": 53, "183e": 53, "990e": 53, "108": 53, "blaze": 53, "overshoot": 53, "lead": [53, 85, 202, 251], "5601357400786612e": 53, "058e": 53, "483e": 53, "08": [53, 251, 257, 261, 268], "nhev": 53, "6277298383706738e": 53, "110e": 53, "781e": 53, "costli": [53, 54], "principl": [53, 73, 217], "broyden": 53, "goldfarb": 53, "shanno": 53, "refin": [53, 202, 204, 214], "empir": 53, "estim": [53, 54, 73, 202, 214, 215, 216, 217, 238, 249, 257, 258, 265], "630637192365927e": 53, "709e": 53, "222e": 53, "hess_inv": [53, 187, 202], "999e": 53, "499e": 53, "sit": 53, "invert": [53, 54, 202], "norm_of_projected_gradient_": 53, "_pgtol": 53, "4417677473": 53, "023e": 53, "593e": 53, "2x2": [53, 65], "lbfgsinvhessproduct": 53, "sensit": [53, 265], "dichotomi": 53, "triangl": 53, "strong": [53, 253, 263], "experiment": [53, 202, 216], "bell": [53, 65, 66], "slower": 53, "11527915993744e": 53, "111": [53, 54, 89, 90, 91, 92, 93, 94, 95, 96, 97, 143, 145, 157, 177, 188, 202, 229, 230, 247, 257, 265, 268], "final_simplex": 53, "115e": 53, "537e": 53, "988e": 53, "unless": [53, 70, 81, 159, 171], "By": [53, 81, 202, 216, 251, 265], "0000": 53, "omit": [53, 76], "larger": [53, 85, 158, 234, 251], "computation": [53, 76, 251], "cheap": 53, "tcg": 53, "analyt": [53, 202], "warm": 53, "relax": [53, 265], "toler": [53, 65, 172], "handi": [53, 62, 76, 157, 251], "check_grad": 53, "384185791015625e": 53, "approx_fprim": 53, "levenberg": [53, 202], "marquardt": [53, 202], "leastsq": [53, 209, 211, 215], "vectori": 53, "arctan": 53, "11111111": 53, "22222222": 53, "33333333": [53, 158], "44444444": 53, "55555556": 53, "66666667": 53, "77777778": 53, "88888889": 53, "took": 53, "6940": 53, "lstsq": 53, "occur": [53, 201, 202, 216, 251], "4812": 53, "9999": 53, "0003": 53, "0004": 53, "0010": 53, "individu": [53, 59, 60, 62, 73, 77, 159, 169, 217, 255], "rewritten": 53, "5811388300841898": 53, "500e": 53, "487e": 53, "162e": 53, "inequ": 53, "fmin_slsqp": [53, 215], "4748737350439685": 53, "250e": 53, "071e": 53, "lasso": [53, 241, 251], "tri": 53, "establish": 53, "permiss": [53, 73, 75], "licens": [53, 73, 84, 85], "ipopt": 53, "pygmo": 53, "prematur": 54, "evil": 54, "line_profil": 54, "breakag": 54, "trade": [54, 73], "realist": 54, "simplic": [54, 238, 251], "ll": [54, 81, 157, 175, 197, 238, 251, 266], "surpris": [54, 159, 171, 202], "elementari": [54, 202, 266], "871": [54, 175, 213, 257], "ica": 54, "fastica": 54, "uncom": 54, "5000": 54, "pca": [54, 73, 217, 232, 237, 250, 268], "whiten": [54, 238, 244, 251], "unsupervis": [54, 73, 217, 233, 238], "princip": [54, 73, 217], "independ": [54, 157, 202, 251, 265], "reduct": [54, 73, 75, 172, 174, 217], "varianc": [54, 73, 202, 217, 232, 250, 257, 258, 268], "unmix": 54, "record": [54, 159, 208, 210, 215, 251], "sensor": 54, "3929": 54, "256016": 54, "916": 54, "551": 54, "ncall": 54, "tottim": 54, "percal": 54, "cumtim": 54, "lineno": 54, "457": [54, 260, 265], "479": 54, "decomp": 54, "849": 54, "random_sampl": 54, "mtrand": 54, "randomst": 54, "017": 54, "021": [54, 263], "function_bas": 54, "645": 54, "asarray_chkfinit": 54, "54": [54, 159, 175, 254, 265], "011": [54, 103, 106, 115, 118, 268], "_dotbla": 54, "005": [54, 260, 263, 265], "002": 54, "001": [54, 238, 247, 253], "195": 54, "gprime": 54, "192": [54, 233, 250, 268], "lapack_lit": 54, "dsyevd": 54, "twodim_bas": 54, "204": 54, "008": 54, "69": [54, 175, 237, 251, 260], "_ica_par": 54, "107": [54, 265], "defmatrix": 54, "239": 54, "__array_finalize__": 54, "004": 54, "_sym_decorrel": 54, "841": [54, 197, 200, 268], "eigh": 54, "172": [54, 263, 265], "isinst": 54, "29": [54, 81, 86, 238, 251, 253, 254, 265], "180": [54, 251], "193": [54, 260], "__new__": 54, "43": [54, 86, 159, 203, 237, 251, 260], "asmatrix": 54, "287": [54, 253], "__mul__": 54, "97": [54, 238, 251, 257], "spend": 54, "prof": 54, "kernprof": 54, "wrote": 54, "lprof": 54, "timer": 54, "27874": 54, "2453": 54, "1274715": 54, "413": 54, "1094": 54, "optimis": 54, "identifi": [54, 231, 238, 251], "uncommon": 54, "bring": [54, 157], "singular": [54, 175, 202, 251], "decomposit": [54, 175, 202, 237, 238, 244, 251], "incomplet": 54, "richer": 54, "full_matric": 54, "295": 54, "293": 54, "65": [54, 89, 157, 204, 237, 265], "demo_opt": 54, "208": [54, 265], "eigenvector": [54, 65, 172], "eigsh": 54, "symmetr": [54, 65, 202], "doubt": 54, "articl": [54, 77], "1e7": 54, "48": [54, 74, 86, 201, 202, 251, 253], "Be": 54, "124": [54, 254, 265], "112": 54, "bewar": [54, 175], "cheaper": [54, 76], "group": [54, 73, 186, 217, 248, 251], "impli": [54, 65], "amongst": 54, "1e4": 54, "89": [54, 237, 251, 265], "188": [54, 265], "80000": 54, "222": 54, "ascontiguousarrai": 54, "resort": [54, 251], "spot": [54, 70, 251], "spent": [54, 76], "unrol": 54, "theoret": [54, 169, 231], "memory_profil": 54, "gperftool": 54, "yep": 54, "repositori": [54, 70, 251], "asv": 54, "runsnakerun": 54, "csr": [55, 56, 57, 65, 66], "dens": [55, 56, 57, 58, 59, 60, 62, 63, 65], "evenli": [55, 159], "indptr": [55, 57, 58], "nonzero": [55, 57, 58, 62, 66, 159, 238], "nnz": 55, "_cs_matrix": [55, 57, 58], "csc": [55, 56, 58, 65, 66], "_data_matrix": [55, 56, 57, 58, 59], "sparsetool": [55, 56, 57, 58, 59, 66], "coord": [55, 56, 57, 58, 224, 231], "discret": [55, 73, 74, 159, 251], "mtx": [55, 56, 57, 58, 59, 60, 63, 65, 66], "bsr_arrai": [55, 66], "3x4": 55, "blocksiz": 55, "1x1": [55, 90, 157], "toarrai": [55, 56, 57, 58, 59, 60, 63, 65, 66], "3x2": 55, "col": [55, 56, 57, 58, 263], "3x3": [55, 57, 58], "ijv": [56, 66], "triplet": [56, 66], "facilit": [56, 66], "among": [56, 201, 202], "togeth": [56, 169, 175, 266], "coo_arrai": [56, 60, 66], "ij": 56, "4x4": [56, 59], "orient": [57, 58, 70, 73, 75, 84, 157, 159, 201, 202, 204, 214], "n_col": 57, "th": [57, 58, 74], "expens": [57, 58, 251, 265], "csc_arrai": [57, 66], "n_row": 58, "csr_arrai": [58, 66], "n_diag": 59, "neg": [59, 77, 202], "pde": [59, 62, 202], "dia_arrai": [59, 66], "vec": [59, 139, 154, 233], "pattern": [60, 63, 73, 74, 75, 77, 84, 238, 266], "apriori": [60, 63], "dok_arrai": [60, 66], "5x5": [60, 175], "ir": 60, "ic": [60, 85, 86], "1x2": 60, "chunk": [62, 77], "1e6": [62, 171], "compress": [62, 66], "pro": [62, 76], "huge": 62, "con": [62, 76, 159], "equat": [62, 73, 202, 217], "engin": [62, 245, 259, 260], "electrotechn": 62, "physic": [62, 83, 175, 265], "node": 62, "spy": [62, 65], "lil_arrai": [63, 65, 66], "prepar": [63, 65], "4x5": 63, "2x4": 63, "pyamg": [64, 65], "multigrid": 64, "pyspars": 64, "sourceforg": [64, 260], "net": [64, 260], "dsolv": [65, 266], "factor": [65, 73, 189, 202, 217, 238, 252, 260, 261, 266, 268], "isolv": 65, "__all__": 65, "arpackerror": 65, "arpacknoconverg": 65, "use_solv": 65, "superlu": 65, "umfpack": 65, "suitespars": 65, "nathaniel": 65, "smith": 65, "spsolv": 65, "_dsolv": 65, "linsolv": 65, "latter": [65, 216], "spdiag": 65, "rh": 65, "mtx1": 65, "use_umfpack": 65, "106": [65, 265], "mtx2": 65, "complex64": [65, 171], "complex128": [65, 159, 171], "1000x1000": 65, "setdiag": 65, "tocsr": 65, "residu": [65, 209, 211, 215, 251, 253, 254, 257, 258, 260, 263, 265], "direct_solv": 65, "bicg": 65, "biconjug": 65, "bicgstab": 65, "stabil": 65, "gmre": 65, "minr": 65, "qmr": 65, "mandatori": [65, 76, 81, 83], "guess": [65, 85, 157, 188, 202, 215, 216], "rel": [65, 172, 238, 251], "precondition": 65, "dramat": 65, "xk": 65, "abstract": 65, "matvec": 65, "mv": 65, "_customlinearoper": 65, "ilu": 65, "spilu": 65, "collect": [65, 76, 77, 78, 79, 81, 175, 179, 238, 245, 251], "fortran77": 65, "subroutin": [65, 202, 216], "lobpcg": 65, "nathan": [65, 66], "eigensolv": 65, "aggreg": [65, 265], "sa": 65, "poisson": 65, "dirichlet": 65, "smoothed_aggregation_solv": 65, "hierarchi": 65, "ml": 65, "rand": 65, "asprecondition": 65, "pcolor": [65, 164, 175], "pyamg_with_lobpcg": 65, "wagner": 65, "lobpcg_sakurai": 65, "2500": 65, "06250083": 65, "06250028": 65, "06250007": 65, "06250005": 65, "0625002": 65, "06250044": 65, "elaps": 65, "seven": 66, "coordin": [66, 99, 151, 156, 157, 268], "aka": 66, "suitabl": 66, "older": 66, "csr_matrix": 66, "multipli": [66, 198], "sparrai": 66, "imaginari": [66, 181], "getnnz": 66, "op": 66, "bsr": 66, "coo": 66, "dia": 66, "lil": 66, "dok": 66, "readm": [67, 86], "065": [68, 69, 92, 98, 247, 250, 268], "plot_simpl": [68, 69, 70, 268], "unclear": 70, "clumsi": 70, "fork": 70, "button": [70, 74], "branch": 70, "taught": 70, "hour": [70, 73, 259, 260], "ecosystem": [70, 73, 75, 85, 157, 175, 217], "easiest": 70, "teach": 70, "io": [70, 73, 74, 75, 76, 81, 85, 86, 158, 231], "beginn": [70, 73, 76], "refrain": 70, "absolut": 70, "blown": [70, 202], "sentenc": [70, 81], "peopl": [70, 238, 251, 265], "hidden": [70, 251], "dure": [70, 76, 84, 172, 175, 215], "oral": 70, "span": [70, 77, 85], "plot_xxx": 70, "xxx": 70, "sphx_glr_plot_simple_001": 70, "target": [70, 215, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 251], "ital": 70, "bold": [70, 233], "technic": [70, 74, 157, 265], "emphasi": 70, "referenc": [70, 81, 175], "intersphinx": 70, "mod": 70, "granular": 70, "flush": [70, 76], "readthedoc": [70, 74, 76, 81], "latest": [70, 76, 81], "central": [73, 202, 251, 265], "expertis": 73, "1rc0": [73, 267], "scientist": [73, 75, 202], "strength": [73, 75, 241, 251], "matlab": [73, 75, 77, 157, 158, 159, 202], "scilab": [73, 75], "octav": [73, 75], "idl": [73, 75, 80, 158, 202], "organ": [73, 75, 83, 84], "shutil": [73, 75, 84], "match": [73, 74, 75, 84, 198, 231, 237, 251, 266], "persist": [73, 75, 81, 84], "forgiv": [73, 75], "oop": [73, 75, 77, 84, 86], "boolean": [73, 74, 75, 77, 172, 174, 251, 265, 266], "flatten": [73, 75, 174, 258], "shuffl": [73, 75, 174], "obscur": [73, 75, 174], "crude": [73, 75, 174, 176, 195, 200, 202, 268], "markov": [73, 75, 174], "instanti": [73, 75, 251], "width": [73, 75, 90, 99, 100, 118, 133, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 215, 233, 239, 251, 254, 265, 268], "spine": [73, 75, 89, 95, 96, 97, 117], "devil": [73, 75], "scatter": [73, 75, 89, 97, 99, 141, 155, 156, 177, 179, 215, 217, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 256, 259, 263, 268], "bar": [73, 75, 99, 133, 141, 151, 155, 156, 212, 216, 255, 268], "pie": [73, 75, 99, 141, 155, 156, 268], "chart": [73, 75, 99, 141, 155, 156, 208, 209, 210, 211, 233, 268], "multi": [73, 75, 84, 159, 231, 251], "polar": [73, 75, 99, 141, 155, 156, 268], "3d": [73, 75, 99, 141, 155, 156, 258, 265, 268], "beyond": [73, 75, 76, 251, 263], "colormap": [73, 75, 99, 100, 118, 159, 172, 197, 263, 268], "hypothesi": [73, 75, 217, 254, 260], "quadratur": [73, 75], "fft": [73, 75, 85, 176, 189, 194, 195, 199, 200, 268], "wind": [73, 75, 202, 205, 207, 212, 213, 268], "predict": [73, 75, 202, 205, 213, 217, 232, 233, 234, 235, 236, 237, 238, 242, 243, 245, 249, 250, 265, 268], "sprog\u00f8": [73, 75, 202], "station": [73, 75, 202], "cumul": [73, 75, 202, 205, 207, 213, 268], "univariatesplin": [73, 75, 206, 207], "gumbel": [73, 75, 205, 213, 268], "topograph": [73, 75, 202], "waveform": [73, 75, 209, 211], "bubbl": [73, 75, 201, 202, 204], "unmolten": [73, 75, 201, 202], "glass": [73, 75, 202, 214], "datafram": [73, 252, 253, 257, 258, 261, 263, 268], "student": [73, 76, 83, 217], "formula": [73, 78, 203, 217, 253, 254, 257, 258, 260, 263], "regress": [73, 76, 217, 232, 234, 249, 250, 252, 253, 254, 259, 260, 261, 263, 268], "categor": [73, 251, 254, 256, 260, 263], "hoc": [73, 217], "anova": [73, 217, 257, 258], "pairplot": [73, 217, 253, 259], "lmplot": [73, 217, 253, 259, 260], "univari": [73, 217], "expand": [73, 217], "calculu": [73, 217], "seri": [73, 217, 263, 265], "expans": [73, 217], "colorspac": [73, 217], "preprocess": [73, 217, 234, 251], "otsu": [73, 218, 230, 268], "walker": [73, 175, 218, 230, 268], "vision": [73, 217, 238], "iri": [73, 232, 244, 245, 248, 250, 252, 261, 265, 268], "supervis": [73, 217, 233, 238], "recap": [73, 217], "handwritten": [73, 217], "digit": [73, 217, 232, 250, 268], "naiv": [73, 202, 217], "bay": [73, 217], "quantit": [73, 217], "price": [73, 85, 217, 234, 235, 243], "classifi": [73, 217, 231, 232, 238, 250, 268], "valid": [73, 79, 217, 234, 237, 241, 243], "hyperparamet": [73, 217], "tsne": [73, 217, 232, 250, 268], "bia": [73, 217, 232, 250, 268], "tradeoff": [73, 217], "caution": [73, 217], "scientificpythonlectur": 73, "rapidli": 74, "throughout": 74, "tab": [74, 76, 77, 85, 202, 265], "vander": 74, "_arrayfunctiondispatch": 74, "vandermond": 74, "progress": [74, 76, 251], "alexandr": 74, "theophil": 74, "array_lik": [74, 159], "versionad": [74, 159], "forth": 74, "polyvand": 74, "column_stack": 74, "000000000000043": 74, "websit": [74, 76, 231], "enrich": [74, 157], "clearer": 74, "recip": 74, "frequent": [74, 157, 266], "od": [74, 176, 194, 202, 255, 268], "psearch": 74, "lookfor": [74, 159, 175], "convolut": [74, 176, 195, 197, 200, 202, 268], "convolv": [74, 159, 198], "polymul": 74, "bartlett": 74, "pyfunc": 74, "_novalu": 74, "otyp": 74, "exclud": [74, 77, 169], "googl": 74, "despair": 74, "vibrant": [74, 76], "engag": 74, "fernando": 76, "perez": 76, "simul": [76, 159, 175, 265], "qualiti": [76, 84, 157, 251], "public": [76, 157], "batteri": 76, "rich": [76, 238, 265], "brick": 76, "reinvent": 76, "wheel": [76, 202], "paid": 76, "programm": [76, 202], "neither": [76, 159], "train": [76, 233, 234, 237, 238, 239, 243, 251], "aliv": 76, "lab": [76, 231], "compani": 76, "collabor": 76, "mayb": [76, 85], "strang": 76, "lengthi": [76, 238], "divert": 76, "reader": [76, 77, 216, 251], "needless": 76, "aim": [76, 202, 266], "heavi": 76, "outperform": 76, "pain": 76, "verbos": [76, 84], "pleasant": 76, "commerci": [76, 84], "restrict": [76, 85, 202], "young": 76, "ex": [76, 83], "thought": 76, "web": [76, 84, 159], "server": 76, "serial": 76, "port": 76, "spread": [76, 255], "spyder": 76, "pycharm": 76, "toolbox": [76, 172, 202], "bundl": 76, "network": [76, 175], "browser": 76, "flavor": 76, "readili": 76, "fulli": [76, 202], "winpython": 76, "consolid": 76, "bless": 76, "devic": [76, 159], "offspr": 76, "press": [76, 77, 78], "hello": [76, 77, 78, 80, 85, 159], "world": [76, 77, 80, 251], "sep": [76, 253, 255, 256, 259, 260, 263, 265], "stream": [76, 86], "stdout": 76, "newlin": [76, 77], "whether": [76, 81, 85, 202, 251, 265], "forcibli": 76, "builtin_function_or_method": [76, 159], "quickstart": 76, "freeli": 76, "my_fil": 76, "who": [76, 85], "info": [76, 85], "tempt": 76, "plan": 76, "evolv": 76, "reusabl": [76, 85], "wealth": 76, "histori": 76, "unix": [76, 84, 85, 86], "navig": [76, 80], "object_nam": 76, "besid": 76, "as_integer_ratio": 76, "to_byt": 76, "bit_count": 76, "denomin": [76, 202, 266], "bit_length": 76, "from_byt": 76, "automag": 76, "preced": 76, "cpast": 76, "past": [76, 85, 251], "mortem": 76, "That": [76, 79, 216, 266], "venv": [76, 85], "lib64": [76, 85], "compilerop": 76, "86": [76, 237, 238, 251, 260], "ast_pars": 76, "84": [76, 237, 251, 254, 265], "ast": 76, "pycf_only_ast": 76, "88": [76, 237, 251, 253, 260, 263], "reset_compiler_flag": 76, "cachingcompil": 76, "0x7f30d02efc10": 76, "8e8bc565444b": 76, "furthermor": [76, 251], "emul": 76, "cp": 76, "cheat": 76, "sheet": 76, "quickref": 76, "5j": 77, "0j": [77, 78], "pocket": 77, "modulo": 77, "sublist": 77, "yellow": 77, "purpl": [77, 248], "panel": [77, 204, 214], "queri": 77, "datastructur": 77, "pink": 77, "rcolor": 77, "rcolors2": 77, "Being": 77, "tripl": 77, "quot": 77, "untermin": 77, "prepend": [77, 159], "backslash": 77, "rememb": [77, 172, 216, 251], "3rd": 77, "6th": 77, "lo": [77, 175], "hl": 77, "accent": 77, "immut": [77, 81], "hezlo": 77, "stdtype": 77, "100000": [77, 186, 202, 203], "102": [77, 185, 194, 268], "processing_of_dataset_": 77, "processing_of_dataset_102": 77, "tel": 77, "5752": 77, "5578": 77, "franci": 77, "5915": 77, "dict_kei": 77, "dict_valu": 77, "resp": [77, 201, 202, 231], "comma": [77, 85, 171], "12345": 77, "54321": 77, "delimit": 78, "depth": [78, 85], "colon": [78, 81, 85], "backspac": 78, "compulsori": [78, 85], "cool": 78, "352j": 78, "vowel": 78, "aeioui": 78, "split": [78, 81, 85, 86, 203, 234, 237, 238, 251, 259, 265], "bother": 78, "Or": [78, 159, 175], "val": [78, 181, 229, 231, 246], "walli": 78, "prod_": 78, "infti": [78, 139, 154], "frac": [78, 89, 97, 139, 154, 157, 172, 202, 215, 266], "4i": 78, "aris": [79, 221], "descript": [79, 157, 251], "zerodivisionerror": 79, "unsupport": 79, "attributeerror": 79, "valueerror": [79, 175], "print_sort": 79, "rerais": 79, "filter_nam": 79, "encod": [79, 231, 265], "ascii": 79, "unicodeerror": 79, "unicodeencodeerror": 79, "codec": 79, "xe9": 79, "ordin": 79, "achilles_arrow": 79, "9990234375": 79, "notifi": 79, "met": 79, "plain": [80, 85], "advis": 80, "congratul": 80, "hellohello": 80, "becam": 80, "repetit": 80, "disk_area": 81, "radiu": [81, 247], "0649999999999995": 81, "double_it": 81, "problemat": 81, "modif": 81, "bigx": 81, "1e9": 81, "add_to_dict": 81, "slicer": 81, "seq": 81, "rhyme": 81, "fish": 81, "java": 81, "distinct": [81, 251], "subtl": 81, "fortun": [81, 238], "try_to_modifi": 81, "77": [81, 158, 251], "addx": 81, "setx": 81, "pack": 81, "variable_arg": 81, "funcnam": 81, "64e466df6d64": 81, "guidelin": [81, 85, 202], "webpag": 81, "numpydoc": 81, "va": [81, 101, 103, 105, 108, 110, 119, 120, 122, 126, 136, 137, 138, 139, 154, 157, 233], "ve": [81, 157, 251], "u_": [81, 203], "greater": [81, 203], "pivot": [81, 203, 265], "workfil": 82, "_io": 82, "textiowrapp": 82, "nand": 82, "inputoutput": 82, "overwrit": 82, "gather": [83, 216, 238, 251], "set_ag": 83, "ag": [83, 251, 259, 265], "set_major": 83, "anna": 83, "classinst": 83, "myclass": 83, "masterstud": 83, "internship": 83, "inherit": 83, "march": 83, "june": 83, "jame": 83, "stokesflow": 83, "turbulentflow": 83, "potentialflow": 83, "chri": 84, "excel": [84, 251, 259, 265], "dive": 84, "charg": 84, "maco": 84, "phone": 84, "favorit": 85, "moreov": [85, 216], "standalon": 85, "argv": [85, 86, 203], "argpars": 85, "frozen": 85, "listdir": [85, 86, 203], "profile_ck2k8f7z": [85, 86], "profile_26m682xb": [85, 86], "profile_9uubmu6o": [85, 86], "profile_7mq49vl8": [85, 86], "profile_3rb9vdbi": [85, 86], "profile_y1p3rvyo": [85, 86], "profile_kyykqx": [85, 86], "profile_dpqx0_vw": [85, 86], "profile_pwzbmtp3": [85, 86], "profile_4_9n3ryf": [85, 86], "profile_9b7x_pag": [85, 86], "clr": [85, 86], "pipe": [85, 86], "1617": [85, 86], "5179": [85, 86], "profile_pc7fylc7": [85, 86], "profile__p5h5ppc": [85, 86], "595": [85, 86, 263], "814": [85, 86], "profile_x4mstgaw": [85, 86], "profile_310tdq6r": [85, 86], "profile_pebpmsqb": [85, 86], "profile__ywru9nv": [85, 86], "profile_9chgyidj": [85, 86], "profile_jwax2bhl": [85, 86], "profile_qcv2_jni": [85, 86], "profile_oc_h6zir": [85, 86], "profile_t_0h4o8i": [85, 86], "profile_c_2eyrp8": [85, 86], "profile_lkjppp5x": [85, 86], "1601": [85, 86], "4963": [85, 86], "profile_x2t_oxup": [85, 86], "profile_hbj21aea": [85, 86], "systemd": [85, 86], "privat": [85, 86], "3795adbe5b1b42309183d6a067bccaf5": [85, 86], "chroni": [85, 86], "servic": [85, 86, 259], "8hhzax": [85, 86], "profile_cesu8d60": [85, 86], "profile_apx_iqtc": [85, 86], "logind": [85, 86], "n77a4k": [85, 86], "profile_hljp9ndj": [85, 86], "profile_odnphug0": [85, 86], "profile_z8fuwnu4": [85, 86], "profile_xdxzjzz7": [85, 86], "haveg": [85, 86], "xqvbra": [85, 86], "profile_6clt2rjv": [85, 86], "profile_s4jdupe7": [85, 86], "profile_2ezqschg": [85, 86], "profile_pvbtrkwv": [85, 86], "profile_mpl_stbo": [85, 86], "profile_4eyx_j57": [85, 86], "x11": [85, 86], "profile_rqiwxfvj": [85, 86], "profile_peqvaz3i": [85, 86], "dotnet": [85, 86], "diagnost": [85, 86, 251], "socket": [85, 86], "profile_zz6rwara": [85, 86], "profile_f75dn8vq": [85, 86], "profile_jux17vrr": [85, 86], "xim": [85, 86], "profile_crzc5e8o": [85, 86], "snap": [85, 86], "profile_12eedl69": [85, 86], "profile_5nrrvojn": [85, 86], "profile_64yeljxq": [85, 86], "profile_325dps4w": [85, 86], "profile_7317plqv": [85, 86], "profile_bdozhfn9": [85, 86], "profile_h926ob79": [85, 86], "aspnet": [85, 86], "profile_4n9he534": [85, 86], "profile_b4xeiklx": [85, 86], "profile_69sm2u8_": [85, 86], "resolv": [85, 86, 266], "4jb2qv": [85, 86], "profile_et_7iubf": [85, 86], "profile_rsy5e_95": [85, 86], "profile_ua_gk06t": [85, 86], "profile_e7z7326i": [85, 86], "profile_lf71uewc": [85, 86], "profile_mfkryvja": [85, 86], "profile_zuw06usv": [85, 86], "star": [85, 251], "profit": 85, "usefulli": 85, "vise": 85, "versa": 85, "clash": 85, "undefin": [85, 266], "hierarch": 85, "print_b": 85, "print_a": 85, "forget": [85, 253], "recogn": [85, 202, 251], "introspect": 85, "python_talk": 85, "scipy_2009_tutori": 85, "0xb7421534": 85, "0xb74214c4": 85, "session": [85, 157], "importlib": 85, "reload": [85, 202], "sometim": [85, 171, 202, 251], "demo2": [85, 86], "thumb": [85, 251], "mymodul": 85, "pythonpath": [85, 86], "python311": [85, 86], "dynload": [85, 86], "somewher": [85, 175], "startup": [85, 157], "emma": 85, "user_defined_modul": 85, "microsoft": 85, "kb": 85, "310519": 85, "new_path": 85, "portabl": [85, 86, 158], "themselv": 85, "_build_util": 85, "_lib": 85, "odr": 85, "conftest": 85, "pxd": 85, "meson": 85, "_distributor_init": 85, "_filter": 85, "_measur": 85, "_interpol": 85, "_ni_docstr": 85, "_fourier": 85, "_ni_support": 85, "_morphologi": 85, "border_valu": 85, "brute_forc": 85, "bear": 85, "rid": [85, 198], "delin": 85, "improp": [85, 266], "indentationerror": 85, "unexpect": 85, "busi": [85, 253], "absenc": 85, "long_lin": 85, "whitespac": 85, "cramp": 85, "beauti": [85, 171], "anybodi": 85, "remaind": [85, 157, 175], "essenti": [86, 202, 251], "addison": [86, 265], "weslei": [86, 265], "profession": [86, 202, 259], "getcwd": 86, "curdir": 86, "profile_ihf87a62": 86, "profile_hwt5gl3k": 86, "profile_vla8egnu": 86, "profile_i9q659ew": 86, "profile_spqcyhij": 86, "profile_4alaajpc": 86, "profile_lyr8jq60": 86, "profile_7laigamd": 86, "profile_2t63ypn4": 86, "profile_2f16_1a8": 86, "profile_pe2iwp3d": 86, "mkdir": 86, "junkdir": 86, "foodir": 86, "rmdir": 86, "fp": [86, 203], "junk": 86, "pathnam": 86, "dirnam": 86, "basenam": 86, "splitext": 86, "isfil": 86, "isdir": 86, "expandus": 86, "join": [86, 99, 100, 118, 157, 203, 235, 260, 268], "noteworthi": 86, "sh": 86, "basic_typ": 86, "standard_librari": 86, "control_flow": 86, "first_step": 86, "python_languag": 86, "reusing_cod": 86, "exit_cod": 86, "runningcommand": 86, "tree": [86, 215, 232, 235, 250, 268], "dirpath": 86, "dhist": 86, "bookmark": 86, "fsldir": 86, "term_program_vers": 86, "fslremotecal": 86, "ps1": 86, "workon_hom": 86, "cburn": 86, "nitool": 86, "getenv": 86, "rmtree": 86, "feb": 86, "doctre": 86, "stan": 86, "46": [86, 196, 202, 237, 251, 253], "wb": [86, 253, 259], "dump": 86, "069": [88, 98, 263, 268], "plot_exercise_1": [88, 98, 157, 268], "dpi": [89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 140, 145, 157], "linestyl": [89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 118, 125, 140, 145, 157, 246, 247, 268], "sine": [89, 90, 96, 97, 157, 179, 202], "set_color": [89, 95, 96, 97, 117, 157], "xaxi": [89, 95, 96, 97, 117, 125, 145, 157], "set_ticks_posit": [89, 95, 96, 97, 117, 157], "set_posit": [89, 95, 96, 97, 117, 157], "yaxi": [89, 95, 96, 97, 117, 125, 145, 157], "xy": [89, 97, 157, 202], "xycoord": [89, 97, 157], "xytext": [89, 97, 157], "textcoord": [89, 97, 157], "arrowprop": [89, 97, 157], "arrowstyl": [89, 97, 157], "connectionstyl": [89, 97, 157], "arc3": [89, 97, 157], "rad": [89, 97, 157], "90": [89, 97, 105, 108, 110, 157, 158, 159, 163, 216, 237], "get_xticklabel": [89, 157], "get_yticklabel": [89, 157], "set_fonts": [89, 157], "set_bbox": [89, 157], "facecolor": [89, 122, 132, 134, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 233, 247], "edgecolor": [89, 122, 134, 142, 152, 157, 247], "088": [89, 98, 123, 125, 145, 155, 156, 206, 213, 240, 250, 268], "plot_exercise_10": [89, 98, 268], "8x6": [90, 157], "inch": [90, 157, 237], "plot_exercise_2": [90, 98, 268], "043": [91, 98, 138, 152, 155, 156, 268], "plot_exercise_3": [91, 98, 268], "plot_exercise_4": [92, 98, 268], "035": [93, 98, 268], "plot_exercise_5": [93, 98, 268], "plot_exercise_6": [94, 98, 268], "endpoint": [95, 96, 97, 159, 253], "051": [95, 98, 122, 148, 155, 156, 253, 268], "plot_exercise_7": [95, 98, 268], "055": [96, 98, 167, 170, 222, 230, 268], "plot_exercise_8": [96, 98, 268], "091": [97, 98, 209, 213, 268], "plot_exercise_9": [97, 98, 268], "586": 98, "relev": [99, 157, 251, 258, 265], "horizont": [99, 156, 157, 218, 230, 231, 268], "arrang": [99, 156, 157, 268], "vertic": [99, 156, 157, 268], "gridspec": [99, 156, 157, 268], "anti": [99, 100, 118, 157, 268], "solid": [99, 100, 118, 157, 246, 247, 268], "joint": [99, 100, 118, 157, 268], "cap": [99, 100, 118, 157, 268], "capstyl": [99, 100, 118, 157, 268], "vignett": [99, 141, 155, 157, 268], "boxplot": [99, 141, 155, 157, 252, 253, 256, 261, 265, 268], "72": [101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 140, 145, 147, 157, 260, 265], "fig": [101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 128, 140, 143, 145, 148, 149, 154, 157, 177, 188, 208, 209, 210, 211, 215, 233, 234, 237, 238, 251, 254, 263], "set_alpha": [101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 133, 151, 157], "antialias": [101, 103, 140, 157, 177], "center": [101, 103, 117, 119, 120, 122, 126, 136, 137, 138, 139, 154, 157, 172, 201, 202, 215, 233, 246, 251], "014": [101, 111, 112, 113, 114, 118, 268], "plot_alias": [101, 118, 268], "018": [102, 118, 260, 268], "plot_alpha": [102, 118, 268], "plot_antialias": [103, 118, 268], "013": [104, 109, 118, 263, 268], "plot_color": [104, 118, 268], "rc": [105, 140], "usetex": 105, "datad": 105, "endswith": [105, 203], "_r": [105, 157], "auto": [105, 159, 192, 236, 238, 251], "get_cmap": 105, "354": [105, 118, 268], "plot_colormap": [105, 118, 268], "dash_capstyl": [106, 157], "butt": [106, 115], "plot_dash_capstyl": [106, 118, 268], "dash_joinstyl": [107, 157], "miter": [107, 116], "bevel": [107, 116], "012": [107, 116, 118, 268], "plot_dash_joinstyl": [107, 118, 268], "mfc": [108, 110, 157, 206, 207], "mec": [108, 110, 157, 206, 207], "n_line": 108, "300": [108, 110, 158, 172, 175, 225, 231, 238, 258], "plot_linestyl": [108, 118, 268], "plot_linewidth": [109, 118, 268], "repr": 110, "n_marker": 110, "plot_mark": [110, 118, 268], "markerfacecolor": [111, 112, 113, 114, 157], "markeredgecolor": [111, 112, 113, 114, 157], "plot_mec": [111, 118, 268], "plot_mew": [112, 118, 268], "plot_mfc": [113, 118, 268], "plot_m": [114, 118, 268], "solid_capstyl": [115, 157], "plot_solid_capstyl": [115, 118, 268], "solid_joinstyl": [116, 157], "plot_solid_joinstyl": [116, 118, 268], "ticklin": 117, "set_minor_loc": [117, 125, 145], "multipleloc": [117, 125, 145], "nullloc": [117, 157], "fixedloc": 117, "indexloc": 117, "linearloc": 117, "logloc": 117, "autoloc": 117, "n_locat": 117, "512": [117, 182, 201, 202, 231, 257], "set_major_loc": [117, 125, 145, 157], "plot_tick": [117, 118, 268], "387": 118, "plot_ax": [119, 120, 156, 268], "agg": [121, 124, 140], "add_ax": [121, 124, 140], "98": [121, 124, 140, 143, 234, 237, 251, 254, 259, 265], "076": [121, 127, 156, 253, 268], "plot_bad": [121, 156, 268], "025": [122, 123, 125, 127, 128, 129, 130, 133, 134, 135, 139, 253, 254, 257, 258, 260, 263, 265], "9999ff": [122, 142, 157], "ff9999": [122, 142, 157], "plot_bar": [122, 156, 268], "meshgrid": [123, 127, 131, 144, 146, 149, 157, 177, 202, 239, 246, 247, 258], "contourf": [123, 131, 132, 144, 149, 157], "plot_contour": [123, 156, 268], "058": [124, 135, 153, 155, 156, 190, 194, 268], "plot_good": [124, 156, 268], "matploblib": 125, "set_xlim": [125, 145, 157, 233, 234], "set_ylim": [125, 145, 157, 233, 234], "set_xticklabel": [125, 133, 145, 147, 151, 157], "set_yticklabel": [125, 133, 145, 147, 151, 157], "plot_grid": [125, 156, 268], "axes_1": 126, "axes_2": 126, "axes_3": 126, "axes_4": 126, "axes_5": 126, "086": [126, 156, 268], "plot_gridspec": [126, 156, 268], "bone": [127, 146, 238, 247], "colorbar": [127, 157, 159, 162, 164, 175, 177, 197, 237, 240, 251], "shrink": [127, 249, 251], "plot_imshow": [127, 156, 268], "975": [128, 132, 253, 254, 257, 258, 260, 263, 265], "041": [128, 156, 253, 268], "plot_multiplot": [128, 156, 268], "explod": [129, 148], "050": [129, 137, 156, 253, 268], "plot_pi": [129, 156, 268], "031": [130, 156, 260, 265, 268], "plot_plot": [130, 156, 268], "mpl_toolkit": [131, 132, 149, 157, 177, 258], "mplot3d": [131, 132, 149, 157, 177, 258], "axes3d": [131, 132, 149, 157, 177, 258], "add_subplot": [131, 132, 177, 188, 234, 237, 238, 251, 258], "plot_surfac": [131, 149, 157, 177, 258], "rstride": [131, 149, 157, 177, 258], "cstride": [131, 149, 157, 177, 258], "zdir": [131, 149], "set_zlim": [131, 149], "plot_plot3d": [131, 132, 156, 268], "get_test_data": 132, "cset": 132, "set_ztick": [132, 149], "text2d": [132, 149], "horizontalalign": [132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "verticalalign": [132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "bbox": [132, 149, 151], "famili": [132, 146, 202, 216], "dejavu": [132, 146], "san": [132, 146], "medium": 132, "063": [132, 156, 268], "theta": [133, 151, 157, 247], "radii": [133, 151, 157], "set_facecolor": [133, 151, 157], "jet": [133, 151, 157], "105": [133, 156, 175, 268], "plot_polar": [133, 156, 268], "arctan2": [134, 135, 152, 153], "plot_quiv": [134, 156, 268], "plot_scatt": [135, 156, 268], "plot_subplot": [136, 137, 138, 156, 268], "eq": [139, 154], "beta": [139, 154, 171], "delta_1": [139, 154], "rho_1": [139, 154], "sigma_2": [139, 154], "alpha_2": [139, 154], "prime_2": [139, 154], "prime_2u": [139, 154], "rho": [139, 154], "cdot": [139, 154, 202, 266], "nabla": [139, 154], "int_": [139, 154], "mc": [139, 154], "m_0": [139, 154], "2c": [139, 154], "f_g": [139, 154], "m_1m_2": [139, 154], "11557c": [139, 154], "clip_on": [139, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154], "583": [139, 156, 268], "plot_text": [139, 156, 268], "030": [140, 156, 268], "plot_ugli": [140, 156, 268], "fancybboxpatch": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154], "add_patch": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 233], "66": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 175, 251], "height": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 256, 263, 265], "165": [142, 143, 144, 145, 146, 148, 150, 152, 153, 154], "boxstyl": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154], "pad": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 198, 263], "zorder": [142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 233, 247], "xx": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 239, 246], "044": [142, 149, 155, 253, 257, 268], "plot_bar_ext": [142, 155, 268], "whisker": 143, "039": [143, 155, 268], "plot_boxplot_ext": [143, 155, 268], "pretty_plot": [144, 155, 268], "plot_contour_ext": [144, 155, 268], "userwarn": 144, "089": [144, 147, 155, 191, 194, 260, 268], "ticker": [145, 157], "plot_grid_ext": [145, 155, 268], "034": [146, 155, 268], "plot_imshow_ext": [146, 155, 268], "multiplot": 147, "plot_multiplot_ext": [147, 155, 268], "gcf": [148, 157, 254, 263], "get_figwidth": 148, "get_figheight": 148, "plot_pie_ext": [148, 155, 268], "93": [149, 237, 251], "plot_plot3d_ext": [149, 155, 268], "violet": 150, "028": [150, 155, 268], "plot_plot_ext": [150, 155, 268], "plot_polar_ext": [151, 155, 268], "arrow": [152, 157, 233], "plot_quiver_ext": [152, 155, 268], "plot_scatter_ext": [153, 155, 268], "485": [154, 155, 268], "plot_text_ext": [154, 155, 268], "903": 156, "bill": 157, "wing": 157, "deil": 157, "graphic": 157, "procedur": 157, "nicer": 157, "influenc": [157, 252, 261, 265, 268], "savefig": [157, 158, 172], "exercise_2": 157, "thicker": 157, "ideal": [157, 238], "pm": 157, "border": [157, 172, 198], "middl": [157, 251], "discard": [157, 181], "chose": [157, 238], "artist": 157, "hardli": 157, "visibl": 157, "implicit": 157, "creation": [157, 202], "placement": 157, "intent": 157, "gui": [157, 247], "resolut": [157, 201, 202, 266], "setp": [157, 181], "set_someth": 157, "programmat": 157, "publish": [157, 251], "partit": [157, 231], "benefit": [157, 175, 260, 265], "b\u00e9zier": 157, "compound": 157, "blend": 157, "shadow": 157, "pipelin": [157, 231, 234, 251, 265], "faq": 157, "troubleshoot": 157, "screenshot": 157, "fmt2": 157, "incredibli": 157, "antialis": 157, "mew": [157, 224], "3x": 158, "2x": 158, "poly1d": [158, 167], "polyfit": [158, 167], "smoother": [158, 251], "sophist": [158, 251], "chebyshev": [158, 160, 170, 173, 268], "coef": [158, 253, 254, 257, 258, 260, 263, 265], "degre": [158, 202, 216, 231, 234, 247, 251], "2000": [158, 163, 253], "1900": 158, "30e3": 158, "4e3": 158, "48300": 158, "1901": 158, "2e3": 158, "1e3": 158, "48200": 158, "1902": 158, "8e3": 158, "41500": 158, "38200": 158, "30000": 158, "4000": 158, "47200": 158, "6100": 158, "70200": 158, "9800": 158, "savetxt": [158, 202], "pop2": [158, 253], "data2": 158, "genfromtxt": [158, 202], "regexp": 158, "pwd": 158, "eleph": [158, 160, 170, 173, 198, 268], "imsav": [158, 202, 231], "red_eleph": 158, "rgb": [158, 231], "tiny_eleph": 158, "npy": [158, 206, 207, 208, 209, 210, 211, 212, 215, 216], "data3": 158, "hdf5": 158, "h5py": 158, "pytabl": 158, "netcdf": 158, "netcdf_fil": 158, "netcdf4": 158, "loadmat": [158, 202], "savemat": [158, 202], "matrixmarket": 158, "mmread": 158, "mmwrite": 158, "readsav": 158, "somebodi": 158, "costless": 159, "lookup": 159, "hardwar": 159, "scan": [159, 214], "103": 159, "883": [159, 253], "subok": 159, "ndmin": 159, "__array__": 159, "desir": [159, 202], "promot": 159, "unchang": 159, "Ones": 159, "meet": [159, 251], "__array_function__": 159, "ones_lik": 159, "full_lik": 159, "uniniti": 159, "nor": [159, 233], "necessarili": [159, 251], "upcast": 159, "mat": [159, 202], "conj": 159, "redo": [159, 239], "odd": [159, 175], "backward": 159, "rare": [159, 171], "mersenn": 159, "twister": 159, "prng": 159, "64613018": 159, "48984931": 159, "50851229": 159, "22563948": 159, "38250769": 159, "61536465": 159, "98131732": 159, "59353096": 159, "seed": [159, 179, 181, 185, 192, 227, 247, 249, 251, 257, 258], "trail": 159, "compactli": 159, "2j": 159, "4j": 159, "bonjour": 159, "hallo": 159, "u7": 159, "uint64": [159, 171], "ipython3": 159, "tidi": 159, "idiom": 159, "unspecifi": [159, 175], "diagram": [159, 232, 250, 251, 268], "51": [159, 186, 237, 265], "par": 159, "examin": [159, 202, 238], "skim": 159, "may_share_memori": 159, "heurist": [159, 231, 266], "sight": 159, "is_prim": 159, "n_max": [159, 166, 172], "prime_siev": 159, "eratosthen": 159, "extract_from_a": 159, "idx": 159, "056": [161, 170, 260, 265, 268], "plot_basic1dplot": [161, 170, 268], "079": [162, 170, 188, 194, 268], "plot_basic2dplot": [162, 170, 268], "084": [163, 169, 170, 210, 213, 268], "plot_chebyfit": [163, 170, 268], "074": [164, 170, 268], "plot_dist": [164, 170, 268], "0x7f9c882ae3d0": 165, "img_r": 165, "0x7f9c7dcee3d0": 165, "img_tini": 165, "297": [165, 170, 251, 268], "plot_eleph": [165, 170, 268], "compute_mandelbrot": 166, "some_threshold": [166, 172], "nx": 166, "ny": [166, 265], "simplefilt": 166, "mandelbrot_set": 166, "601": 166, "401": 166, "085": [166, 170, 223, 230, 268], "plot_mandelbrot": [166, 170, 268], "plot_polyfit": [167, 170, 268], "072": [168, 170, 260, 265, 268], "plot_popul": [168, 170, 268], "realiz": [169, 231, 251], "n_stori": [169, 175], "t_max": [169, 175], "randint": 169, "along": [169, 175, 238, 251], "cumsum": [169, 175], "sq_distanc": [169, 175], "mean_sq_dist": [169, 175], "langl": [169, 175], "delta": [169, 175, 247], "rangl": [169, 175], "plot_randomwalk": [169, 170, 268], "886": 170, "win": 171, "mix": [171, 202, 238, 256, 265], "truncat": [171, 197, 202, 251], "iinfo": 171, "2147483647": 171, "4294967295": 171, "float16": 171, "float96": 171, "longdoubl": 171, "float128": 171, "1920929e": 171, "2204460492503131e": 171, "complex192": 171, "complex256": 171, "half": 171, "bandwidth": 171, "267": 171, "76": [171, 251, 257], "sensor_cod": 171, "alfa": 171, "tau": 171, "f8": 171, "bunch": 171, "nan": [171, 257, 258, 265], "41421356237": 171, "moment": 171, "recal": [171, 237, 238, 251], "everybodi": 171, "english": 171, "4th": [172, 178, 201, 202, 245, 251], "argmin": [172, 175], "narrow": 172, "locket": 172, "660": 172, "330": 172, "centerx": 172, "centeri": 172, "extrem": [172, 202, 251, 265], "face_locket": 172, "ellipsoid": 172, "northern": 172, "canada": 172, "speci": [172, 251, 265], "period": [172, 176, 181, 195, 200, 202, 216, 268], "had": [172, 202, 251], "argsort": [172, 175], "50000": 172, "lowest": 172, "corrcoef": [172, 251], "24x12x6": 172, "int_0": [172, 202], "da": 172, "db": 172, "dc": 172, "volum": 172, "ln": 172, "approx0": 172, "1931": 172, "ldot": 172, "20j": 172, "some_result": 172, "transit": 172, "p_": 172, "p_50": 172, "stationari": 172, "p_stationari": 172, "didn": 172, "eig": 172, "overview": 174, "861": 175, "counterpart": 175, "a_j": 175, "logical_and": [175, 204], "transcendent": [175, 266], "84147098": 175, "90929743": 175, "14112001": 175, "7568025": 175, "71828183": 175, "3890561": 175, "08553692": 175, "59815003": 175, "mismatch": [175, 202], "triu": [175, 202], "999": [175, 265], "allclos": [175, 181, 202], "tril": 175, "73415": 175, "extrema": 175, "argmax": [175, 181, 202], "82915619758884995": 175, "law": 175, "stori": 175, "randomli": [175, 234, 251], "verif": 175, "tile": 175, "mile": 175, "citi": 175, "chicago": 175, "springfield": 175, "saint": 175, "loui": 175, "tulsa": 175, "oklahoma": 175, "amarillo": 175, "santa": 175, "fe": 175, "albuquerqu": 175, "flagstaff": 175, "angel": 175, "milepost": 175, "303": 175, "1175": 175, "1475": 175, "1544": 175, "1913": 175, "2448": 175, "distance_arrai": 175, "538": 175, "673": [175, 253], "977": 175, "1277": 175, "1346": 175, "1715": 175, "2250": 175, "433": 175, "568": [175, 265], "872": 175, "1172": 175, "1241": 175, "1610": 175, "2145": 175, "135": 175, "439": 175, "739": 175, "808": 175, "1177": 175, "1712": 175, "304": 175, "1042": 175, "1577": 175, "369": 175, "738": 175, "1273": 175, "438": [175, 258], "973": 175, "904": 175, "535": 175, "41421356": 175, "23606798": [175, 202], "16227766": 175, "12310563": 175, "82842712": 175, "60555128": 175, "47213595": 175, "24264069": 175, "65685425": 175, "polyquadmesh": 175, "remark": [175, 215], "soon": 175, "infer": [175, 263], "cf": 175, "refcheck": 175, "j_max": 175, "j_min": 175, "sortabl": 175, "quicker": 175, "subset": [175, 238, 251, 265], "reflex": 175, "master": 175, "resampl": [176, 194, 202, 268], "detrend": [176, 194, 202, 268], "damp": [176, 194, 202, 268], "spring": [176, 194, 202, 268], "mass": [176, 194, 202, 268], "spectrogram": [176, 194, 202, 268], "temperatur": [176, 195, 200, 268], "month": [176, 195, 200, 202, 268], "kernel": [176, 195, 200, 202, 231, 247, 268], "sixhump": 177, "xg": 177, "yg": 177, "0x7f9c8863a310": 177, "surf": [177, 258], "viridi": 177, "set_xlabel": [177, 188, 234, 242, 258], "set_ylabel": [177, 188, 234, 242, 258], "set_zlabel": [177, 258], "set_titl": [177, 234, 238], "six": [177, 202], "hump": [177, 202], "camelback": [177, 202], "res_loc": 177, "res_glob": 177, "differential_evolut": [177, 202], "381": [177, 194, 268], "plot_2d_minim": [177, 194, 268], "sig": [178, 181, 192, 201, 202], "nb": [178, 201, 202, 253], "sl": [178, 201, 202], "130": [178, 194, 257, 268], "plot_connect_measur": [178, 194, 268], "x_data": 179, "y_data": 179, "pathcollect": [179, 245, 251], "0x7f9c88181f10": 179, "test_func": 179, "params_covari": 179, "p0": [179, 202], "900026": [179, 202], "50012043": [179, 202], "57079633": [179, 202], "trend": [180, 202, 259], "x_detrend": [180, 202], "064": [180, 194, 268], "plot_detrend": [180, 194, 268], "fftfreq": [181, 199, 202], "ifft": [181, 202], "suboptim": 181, "time_step": [181, 192, 202], "time_vec": [181, 192], "0x7f9c889405d0": 181, "sig_fft": [181, 202], "sample_freq": 181, "hz": 181, "plower": 181, "peak": [181, 202, 215], "pos_mask": 181, "freq": [181, 192, 202], "peak_freq": 181, "find_peaks_cwt": 181, "high_freq_fft": 181, "filtered_sig": 181, "amplitud": [181, 202, 208, 209, 210, 211, 215], "cbook": 181, "1699": [181, 204], "complexwarn": 181, "isfinit": 181, "1345": 181, "0x7f9c7d534c10": 181, "bad": [181, 251], "brutal": 181, "distort": 181, "242": [181, 194, 268], "plot_fftpack": [181, 194, 268], "median_fac": [182, 201, 202], "wiener_fac": [182, 201, 202], "477": [182, 194, 268], "plot_image_filt": [182, 194, 268], "dat": [183, 204, 253], "githubusercont": 183, "shifted_fac": [183, 201, 202], "shifted_face2": [183, 201, 202], "rotated_fac": [183, 201, 202], "cropped_fac": [183, 201, 202], "zoomed_fac": [183, 201, 202], "947": [183, 194, 251, 268], "plot_image_transform": [183, 194, 268], "measured_tim": [184, 202], "linear_interp": 184, "interp1d": 184, "interpolation_tim": [184, 202], "linear_result": [184, 202], "cubic_interp": 184, "cubic": 184, "cubic_result": 184, "interp": 184, "plot_interpol": [184, 194, 268], "opened_mask": [185, 201, 202], "closed_mask": [185, 201, 202], "plot_mathematical_morpho": [185, 194, 268], "frequenc": [186, 192, 199, 202], "plot_normal_distribut": [186, 194, 268], "0x7f9c88eb9350": 187, "945823375615215": 187, "306e": [187, 202], "192e": 187, "589e": 187, "plot_optimize_example1": [187, 194, 268], "xmin_glob": 188, "xmin_loc": 188, "fminbound": 188, "30641113": 188, "8374671194983834": 188, "root2": 188, "47948183": 188, "xmin": 188, "kv": 188, "plot_optimize_example2": [188, 194, 268], "downsampl": 189, "x_resampl": [189, 202], "ko": [189, 202], "211": [189, 194, 253, 268], "plot_resampl": [189, 194, 268], "kg": [190, 202], "zeta": [190, 202], "t_span": [190, 191, 202], "t_eval": [190, 191, 202], "solve_ivp": [190, 191, 202], "lsoda": [190, 202], "dt": [190, 191, 197, 202], "plot_solve_ivp_damped_spring_mass": [190, 194, 268], "2y": 191, "y0": [191, 202], "plot_solve_ivp_simpl": [191, 194, 268], "0x7f9c7d769310": 192, "hot_r": 192, "band": 192, "welch": [192, 202], "semilogx": 192, "434": [192, 194, 268], "plot_spectrogram": [192, 194, 268], "samples1": 193, "samples2": 193, "histogram1": 193, "histogram2": 193, "109": [193, 194, 263, 265, 268], "plot_t_test": [193, 194, 268], "698": 194, "alaska": [196, 202], "yearli": 196, "temp_max": 196, "temp_min": 196, "62": [196, 202, 237, 265], "ro": 196, "bo": 196, "472222222222214": 196, "yearly_temp": 196, "avg": [196, 237, 238, 251], "ampl": 196, "time_offset": 196, "res_max": 196, "cov_max": 196, "res_min": 196, "cov_min": 196, "dai": 196, "circ": 196, "plot_curvefit_temperature_data": [196, 200, 268], "moonland": [197, 202], "f_1": 197, "f_0": 197, "tild": 197, "_1": 197, "_0": 197, "im_fft": 197, "fft2": [197, 198], "plot_spectrum": 197, "lognorm": 197, "logarithm": [197, 202], "coeffici": [197, 202, 249, 251, 263, 265], "fraction": [197, 214], "keep_fract": 197, "ff": 197, "im_fft2": 197, "im_new": 197, "ifft2": [197, 198], "im_blur": 197, "plot_fft_image_denois": [197, 200, 268], "boil": 198, "0x7f9c882f9bd0": 198, "bump": 198, "trapz": 198, "kernel_ft": 198, "img_ft": 198, "img2_ft": 198, "img2": 198, "clip": 198, "0x7f9c88bb0c50": 198, "correctli": [198, 216, 238, 253, 254, 257, 258, 260, 263, 265], "artifact": 198, "ie": [198, 231, 253], "img3": 198, "0x7f9c887e5c50": 198, "decai": 198, "377": [198, 200, 268], "plot_image_blur": [198, 200, 268], "anim": 199, "cdot10": 199, "0x7f9c88886990": 199, "ft_popul": 199, "plot_periodicity_find": [199, 200, 268], "501": 200, "1536": [201, 202], "2048": [201, 202], "stem": [201, 202], "character": [201, 202], "erod": [201, 202], "maxim": 201, "grey_eros": [201, 202], "424": [201, 202], "278": [201, 202], "459": [201, 202], "549": [201, 202], "80238238": [201, 202], "13527605": [201, 202], "51954079": [201, 202], "49611818": [201, 202], "71673619": [201, 202], "76547217": [201, 202], "gsl": 202, "meant": 202, "unmaintain": 202, "concentr": 202, "compos": 202, "market": [202, 251], "harwel": 202, "boe": 202, "a2": 202, "wherea": [202, 251], "csv": [202, 251, 254, 255, 256, 263, 265], "scienc": [202, 251], "gamma": [202, 238, 247], "erf": [202, 266], "bessel": 202, "jv": 202, "ellipj": 202, "accuraci": [202, 237, 238, 251], "xlog1pi": 202, "ref": 202, "loss": [202, 236, 246, 251], "5e": 202, "factori": 202, "plane": [202, 246, 251, 265], "moder": 202, "gammaln": 202, "500": [202, 248, 251, 265], "17805383": 202, "56574395": 202, "inf": 202, "2605": 202, "11585036": 202, "intermedi": [202, 263], "underflow": 202, "ratio": 202, "499": 202, "magnitud": 202, "log_a": 202, "log_b": 202, "log_r": 202, "0000000": 202, "logsumexp": 202, "113844343": 202, "bla": 202, "lapack": 202, "triangular": 202, "solve_triangular": 202, "a_upp": 202, "vh": 202, "recov": 202, "a3": 202, "lu": 202, "choleski": 202, "qr": 202, "circul": 202, "exponenti": 202, "toeplitz": 202, "fitpack": [202, 216], "spline": [202, 216], "cubicsplin": 202, "cloughtocher2dinterpol": 202, "root_scalar": 202, "attempt": 202, "df": [202, 253, 254, 257, 258, 260, 263, 265], "fprime": 202, "toward": [202, 215, 251], "multivari": 202, "intersect": 202, "atol": 202, "lm": 202, "parabola": 202, "76096066": 202, "66017736": 202, "sinusoid": 202, "underli": [202, 265], "rtol": 202, "januari": [202, 215], "celsiu": 202, "vicin": 202, "9458233756": 202, "306440997": 202, "948e": 202, "quadrat": 202, "70578": 202, "219e": 202, "462e": 202, "nope": 202, "surfac": [202, 215], "nonlinear": 202, "1x": 202, "4y": 202, "fundament": 202, "knew": 202, "drawn": [202, 265], "deviat": [202, 238], "likelihood": [202, 233, 253, 254, 257, 258, 260, 263, 265], "0015767005": 202, "9973396878": 202, "freez": 202, "overlai": 202, "001576700508": 202, "percentil": 202, "tendenc": 202, "gmean": 202, "0010934829": 202, "normaltest": 202, "20841759": 202, "pvalu": [202, 265], "07396163283": 202, "unusu": 202, "evid": [202, 265], "inconclus": 202, "circular": 202, "mont": 202, "carlo": 202, "quad": 202, "error_estim": 202, "ordinari": [202, 251, 253, 265, 266], "t_0": 202, "t_f": 202, "event": 202, "callabl": 202, "ddot": 202, "omega_0": 202, "z_0": 202, "z_1": 202, "dz": 202, "bmatrix": 202, "dz_0": 202, "dz_1": 202, "livermor": 202, "stiff": 202, "odepack": 202, "different": 202, "fipi": 202, "sfepi": 202, "heavili": 202, "contamin": 202, "visualis": 202, "rippl": 202, "medfilt": 202, "infinit": 202, "respons": 202, "compt": 202, "psd": 202, "invit": [202, 216], "14159265358979312": 203, "my_pi": 203, "better_pi": 203, "adcanv": 203, "qsort": 203, "less_than": 203, "lt": 203, "greater_equ": 203, "ge": 203, "u_0": 203, "u_1": 203, "u_n": 203, "fib": 203, "filter_and_sort": 203, "file_list": 203, "sorted_file_list": 203, "load_data": 203, "data_str": 203, "find_modul": 203, "subdir": 203, "pth": 203, "mv_hfv_012": [204, 214], "filtdat": 204, "hi_dat": 204, "hi_filtdat": 204, "sand": [204, 214], "homework": [204, 214], "114": 204, "sand_op": 204, "bincount": [204, 214], "sand_label": 204, "sand_nb": 204, "sand_area": 204, "remove_small_sand": 204, "bubbles_label": 204, "bubbles_nb": 204, "bubbles_area": 204, "mean_bubble_s": 204, "median_bubble_s": 204, "875": 204, "722222222222214": 206, "max_spe": [206, 207, 212, 216], "years_nb": [206, 207, 212, 216], "cprob": [206, 207, 216], "sorted_max_spe": [206, 207, 216], "speed_splin": [206, 207], "nprob": [206, 207, 216], "fitted_max_spe": [206, 207, 216], "fifty_prob": [206, 207, 216], "fifty_wind": [206, 207, 216], "v_": [206, 207], "annual": [206, 207, 212, 216], "plot_cumulative_wind_speed_predict": [206, 213, 268], "gumbell_dist": 207, "wspeed": [207, 212], "sprog": [207, 212, 216], "windspe": [207, 212, 216], "array_split": [207, 212], "gprob": 207, "49": [207, 237, 251], "078": [207, 213, 255, 261, 268], "plot_gumbell_wind_speed_predict": [207, 213, 268], "waveform_2": [208, 209, 215], "096": [208, 213, 268], "plot_optimize_lidar_complex_data": [208, 213, 268], "coeff": [209, 211, 215], "plot_optimize_lidar_complex_data_fit": [209, 213, 268], "waveform_1": [210, 211, 215], "plot_optimize_lidar_data": [210, 213, 268], "70363341": 211, "82020742": 211, "47924562": 211, "05636228": 211, "217": [211, 212, 213, 268], "plot_optimize_lidar_data_fit": [211, 213, 268], "097222222222214": 212, "plot_sprog_annual_maxima": [212, 213, 268], "microscopi": 214, "light": [214, 215, 238], "dark": 214, "impati": 215, "optic": 215, "rangefind": 215, "analyz": 215, "emit": 215, "impuls": 215, "reflect": [215, 251], "airborn": 215, "earth": 215, "deliv": 215, "topographi": 215, "mallet": 215, "bretar": 215, "art": 215, "ispr": 215, "journal": 215, "photogrammetri": 215, "2009": 215, "doi": 215, "1016": 215, "isprsjpr": 215, "007": [215, 260, 265], "characterist": [215, 251], "laser": 215, "beam": 215, "1m": 215, "ground": [215, 245, 251], "decompos": 215, "nanosecond": 215, "70363": 215, "82020": 215, "47924": 215, "05636": 215, "v0": 215, "priori": 215, "fullanalyz": 215, "kindli": 215, "gi": 215, "draix": 215, "meteorolog": 216, "denmark": 216, "quantil": 216, "role": 216, "p_i": 216, "interpolatedunivariatesplin": 216, "lsqunivariatesplin": 216, "bivariatesplin": 216, "splrep": 216, "splev": 216, "quantile_func": 216, "storm": 216, "97989825": 216, "affin": [218, 230, 231, 268], "coin": [219, 225, 231], "threshold_otsu": [219, 229, 231], "clean_bord": [219, 231], "clear_bord": [219, 231], "coins_edg": [219, 231], "mark_boundari": [219, 231], "plot_boundari": [219, 230, 268], "plot_camera": [220, 230, 268], "camera_multipli": [221, 231], "plot_camera_uint": [221, 230, 268], "checkerboard": [222, 224, 231], "plot_check": [222, 230, 268], "exposur": [223, 229, 231], "camera_equ": [223, 231], "equalize_hist": [223, 231], "plot_equalize_hist": [223, 230, 268], "warp": [224, 231], "corner_harri": [224, 231], "corner_subpix": [224, 231], "corner_peak": [224, 231], "affinetransform": [224, 231], "tform": [224, 231], "shear": [224, 231], "translat": [224, 231], "210": [224, 231, 253], "output_shap": [224, 231], "350": [224, 231], "min_dist": [224, 231], "coords_subpix": [224, 231], "window_s": [224, 231], "plot_featur": [224, 230, 268], "gaussian_filter_coin": 225, "med_filter_coin": 225, "tv_filter_coin": 225, "370": [225, 231], "149": [225, 230, 253, 268], "plot_filter_coin": [225, 230, 268], "blob": [226, 231], "all_label": [226, 231], "blobs_label": [226, 231], "plot_label": [226, 230, 268], "unambigusouli": 227, "reagion": 227, "random_walk": [227, 231], "labels_w": [227, 231], "labels_rw": [227, 231], "plot_segment": [227, 230, 268], "hsobel_text": [228, 231], "sobel_h": [228, 231], "097": [228, 230, 260, 268], "plot_sobel": [228, 230, 268], "bins_cent": 229, "plot_threshold": [229, 230, 268], "345": 230, "mahota": 231, "napari": 231, "viewer": 231, "qt": 231, "toolkit": 231, "predominantli": 231, "eas": 231, "primit": 231, "textur": 231, "shortest": 231, "video": [231, 251], "metric": [231, 236, 237, 238, 251, 265], "morpholog": 231, "skeleton": 231, "deconvolut": 231, "radon": 231, "ski": 231, "subpackag": 231, "cat": 231, "filtered_camera": 231, "451": 231, "lie": 231, "camera_float": 231, "img_as_float": 231, "camera_sobel": 231, "644": 231, "img_as_ubyt": 231, "hsv": 231, "rgb2hsv": 231, "lab2rgb": 231, "diamond": 231, "coins_zoom": 231, "median_coin": 231, "tv_coin": 231, "gaussian_coin": 231, "basin": 231, "probabilist": [231, 265], "diffus": 231, "relabel_from_on": 231, "remove_small_object": 231, "perimet": 231, "regionprop": 231, "770": 231, "1168": 231, "91": [231, 237, 251], "126": 231, "eccentr": 231, "sky": 231, "harri": 231, "detector": 231, "plot_corn": 231, "plot_match": 231, "decis": [232, 239, 250, 251, 268], "ridgecv": [232, 250, 251, 268], "lassocv": [232, 250, 251, 268], "formal": [232, 250, 251, 268], "9th": [232, 250, 251, 268], "eigenfac": [232, 250, 251, 268], "svm": [232, 236, 247, 250, 251, 268], "polygon": 233, "fancyarrow": 233, "create_bas": 233, "box_bg": 233, "cccccc": 233, "arrow1": 233, "88ccff": 233, "arrow2": 233, "88ff88": 233, "fc": [233, 251], "head_width": 233, "head_length": 233, "ntext": 233, "ndocument": 233, "nimag": 233, "netc": 233, "nvector": 233, "nlearn": 233, "nalgorithm": 233, "nmodel": 233, "nlabel": 233, "nrepresent": 233, "plot_supervised_chart": 233, "fontdict": 233, "fit_transform": [233, 237, 248], "x_new": [233, 242, 251], "y_new": [233, 242, 251], "plot_unsupervised_chart": 233, "plot_ml_flow_chart": [233, 250, 268], "overfit": [234, 243, 251], "underfit": [234, 251], "polynom": 234, "generating_func": [234, 251], "make_pipelin": [234, 251], "linear_model": [234, 235, 241, 242, 245, 246, 247, 249, 251], "linearregress": [234, 235, 242, 245, 249, 251], "polynomialfeatur": [234, 251], "n_sampl": [234, 246, 247, 251], "x_test": [234, 235, 236, 237, 238, 245, 249, 251], "model_select": [234, 235, 236, 237, 238, 241, 251], "train_test_split": [234, 235, 236, 237, 238, 251], "test_siz": [234, 236, 251], "x_train": [234, 235, 236, 237, 238, 251], "y_train": [234, 235, 236, 237, 238, 251], "y_test": [234, 235, 236, 237, 238, 251], "0x7f9c74b4fb90": 234, "validation_curv": [234, 251], "train_scor": [234, 251], "validation_scor": [234, 251], "param_nam": [234, 251], "polynomialfeatures__degre": [234, 251], "param_rang": [234, 251], "learning_curv": [234, 251], "train_siz": [234, 251], "logspac": [234, 241, 251], "plot_bias_vari": [234, 250, 268], "regressor": [235, 251], "fetch_california_h": [235, 243, 251], "as_fram": [235, 243, 251], "100k": [235, 243], "feature_nam": [235, 240, 251], "boost": 235, "gradientboostingregressor": [235, 251], "5314909993118918": 235, "398": [235, 250, 268], "plot_california_predict": [235, 250, 268], "_class": [236, 238], "futurewarn": [236, 238, 253, 263], "dual": [236, 238, 251], "_base": [236, 238], "1237": [236, 238], "convergencewarn": [236, 238], "liblinear": [236, 238], "linearsvc": [236, 238, 251], "9341800269333108": 236, "gaussiannb": [236, 237, 251], "8332741681010102": 236, "kneighborsclassifi": [236, 239, 251], "9804562804949924": 236, "hing": [236, 246], "9294570108037394": 236, "squared_hing": 236, "9341371852581549": 236, "kneighbor": [236, 251], "n_neighbor": [236, 239, 251], "9913675218842191": 236, "9848442068835102": 236, "9867753449543099": 236, "9803719053818863": 236, "9757924194139573": 236, "9780645792142071": 236, "9755550897728812": 236, "naive_bay": [236, 237, 251], "load_digit": [236, 237, 248, 251], "random_st": [236, 238, 246, 248, 251], "y_pred": [236, 238, 251], "f1_score": [236, 251], "averag": [236, 251, 265], "svc": [236, 238, 247], "425": [236, 250, 268], "plot_compare_classifi": [236, 250, 268], "8x8": [237, 251], "proj": [237, 251], "0x7f9c6cdf5d90": 237, "388": 237, "ration": [237, 266], "8622222222222222": 237, "classification_report": [237, 238, 251], "f1": [237, 238, 251], "score": [237, 238, 241, 251], "confusion_matrix": [237, 238, 251], "624": [237, 250, 253, 268], "plot_digits_simple_classif": [237, 250, 268], "idiomat": 238, "wild": 238, "fetch_lfw_peopl": 238, "200mb": 238, "lfw": 238, "fetch_olivetti_fac": 238, "olivetti": 238, "ndownload": 238, "figshar": 238, "5976027": 238, "scikit_learn_data": 238, "4096": 238, "1850": 238, "150": [238, 251, 254, 265], "rerun": [238, 244], "trust": [238, 244, 251], "unabl": [238, 244], "nbviewer": [238, 244], "nbsp": [238, 244], "pcaifittedpca": [238, 244], "mean_": 238, "0x7f9c6ccd2b90": 238, "orthogon": [238, 251], "components_": [238, 251], "eyebrow": 238, "onto": [238, 251], "x_train_pca": 238, "x_test_pca": 238, "svcifittedsvc": 238, "impress": 238, "quantifi": [238, 251], "perfect": [238, 251], "plug": 238, "broadli": 238, "research": 238, "658": [238, 250, 268], "plot_eigenfac": [238, 250, 268], "listedcolormap": [239, 245], "cmap_light": [239, 245], "ffaaaa": [239, 245], "aaffaa": [239, 245], "aaaaff": [239, 245], "cmap_bold": [239, 245], "ff0000": [239, 245], "00ff00": [239, 245], "0000ff": [239, 245], "load_iri": [239, 240, 244, 251], "knn": [239, 251], "yy": [239, 246], "c_": [239, 247, 249, 251], "pcolormesh": 239, "sepal": [239, 251, 252, 261, 265, 268], "180808080808081": 239, "019191919191918": 239, "8868686868686868": 239, "513131313131313": 239, "678": [239, 250, 268], "plot_iris_knn": [239, 250, 268], "x_index": 240, "y_index": 240, "funcformatt": 240, "target_nam": [240, 244, 248, 251], "plot_iris_scatt": [240, 250, 268], "diabet": [241, 251], "load_diabet": [241, 251], "442": [241, 251], "hyper": [241, 251], "cross_val_scor": [241, 251], "ridg": [241, 249, 251], "410174971340889": 241, "3375593674654274": 241, "cv": [241, 251], "plot_linear_model_cv": [241, 250, 268], "042": [242, 250, 268], "plot_linear_regress": [242, 250, 268], "decisiontreeregressor": [243, 251], "507": [243, 250, 265, 268], "plot_measuring_perform": [243, 250, 268], "x_pca": [244, 251], "target_id": [244, 248, 251], "rgbcmykw": [244, 251], "090": [244, 250, 268], "plot_pca": [244, 250, 268], "0x7f9c74eb1410": 245, "n_th": 245, "regr": [245, 249, 251], "truth": [245, 251, 265], "219": [245, 250, 253, 268], "plot_polynomial_regress": [245, 250, 268], "ploint": 246, "hyperplan": 246, "sgdclassifi": 246, "make_blob": 246, "cluster_std": 246, "fit_intercept": 246, "ndenumer": 246, "decision_funct": [246, 247], "plot_separ": [246, 250, 268], "accompani": 247, "linearli": 247, "rseed": 247, "support_vectors_": 247, "0x7f9c6cd6d790": 247, "nonlinear_model": 247, "far_pt": 247, "rbf": 247, "coef0": 247, "plot_svm_non_linear": [247, 250, 268], "manifold": [248, 251], "relationship": [248, 263, 265], "1500": [248, 251], "orang": 248, "185": [248, 250, 254, 265, 268], "plot_tsn": [248, 250, 268], "perfectli": [249, 251], "0x7f9c750f7810": [249, 251], "noisy_x": [249, 251], "amplifi": [249, 251], "assumpt": [249, 251, 265], "spuriou": [249, 251], "shrinkag": [249, 251], "plot_variance_linear_regr": [249, 250, 268], "075": 250, "jake": 251, "vanderpla": 251, "grisel": 251, "tunabl": 251, "subfield": 251, "intellig": [251, 253], "unlabel": 251, "n_featur": 251, "astronom": 251, "million": 251, "iris": 251, "setosa": [251, 254], "versicolor": [251, 254, 265], "virginica": [251, 254, 265], "petal": [251, 252, 261, 265, 268], "versicolour": 251, "emb": 251, "flower": [251, 265], "n_job": 251, "underscor": 251, "coef_": 251, "multicolor": 251, "telescop": 251, "quasar": 251, "galaxi": 251, "photograph": 251, "person": [251, 259, 265], "photo": 251, "movi": 251, "watch": 251, "famou": 251, "netflix": 251, "prize": 251, "astronomi": 251, "predomin": 251, "3cm": 251, "5cm": 251, "4cm": 251, "2cm": 251, "predict_proba": 251, "highest": 251, "nake": 251, "ubiquit": 251, "nn": 251, "saw": 251, "greatest": 251, "baselin": 251, "clue": 251, "cross_valid": 251, "rough": 251, "surprisingli": 251, "371": 251, "82444": 251, "83": [251, 258], "82": 251, "enlighten": 251, "interchang": 251, "20640": 251, "_california_housing_dataset": 251, "medinc": 251, "incom": 251, "houseag": 251, "averoom": 251, "room": 251, "household": 251, "avebedrm": 251, "bedroom": 251, "aveoccup": 251, "member": [251, 259], "latitud": 251, "longitud": 251, "statlib": 251, "dcc": 251, "pt": 251, "ltorgo": 251, "cal_hous": 251, "district": 251, "hundr": 251, "thousand": 251, "dollar": [251, 259, 260], "1990": 251, "censu": 251, "smallest": 251, "geograph": 251, "bureau": 251, "600": 251, "vacat": 251, "pace": 251, "kellei": 251, "ronald": 251, "barri": 251, "autoregress": 251, "1997": 251, "291": 251, "bias": 251, "subtleti": 251, "182": [251, 265], "183": 251, "181": [251, 254, 263, 265], "179": 251, "memor": 251, "hasn": 251, "seemingli": 251, "methodolog": 251, "mistak": 251, "unseen": 251, "1797": 251, "1347": [251, 257], "overal": 251, "991367": 251, "__class__": 251, "l2": 251, "l1": 251, "930570687535": 251, "933068826918": 251, "991367521884": 251, "984844206884": 251, "986775344954": 251, "980371905382": 251, "980456280495": 251, "975792419414": 251, "978064579214": 251, "975555089773": 251, "kfold": 251, "955": 251, "966": 251, "980": 251, "963": 251, "shufflesplit": 251, "n_split": 251, "iid": 251, "physiolog": 251, "sex": [251, 259, 260, 265], "blood": 251, "pressur": 251, "diseas": 251, "0001": 251, "grid_search": 251, "gridsearchcv": 251, "gscv": 251, "best_params_": 251, "062101694189156162": 251, "01268961003167922": 251, "alpha_": 251, "0621016941892": 251, "0126896100317": 251, "explained_variance_ratio_": 251, "ddof": 251, "carri": 251, "00000000e": 251, "notabl": 251, "learning_r": 251, "andrew": 251, "ng": 251, "coursera": 251, "vital": 251, "appreci": 251, "practition": 251, "underperform": 251, "wors": 251, "unsuccess": 251, "systemat": [251, 255, 265], "tradeof": 251, "sweet": 251, "simplist": 251, "suffer": 251, "poorli": 251, "chanc": 251, "metaparamet": 251, "err": [251, 253, 254, 257, 258, 260, 263, 265], "xtrain": 251, "xtest": 251, "ytrain": 251, "ytest": 251, "eg": [251, 265], "astut": 251, "amiss": 251, "vastli": 251, "eight": 251, "benefici": 251, "confront": 251, "asid": 251, "portion": 251, "action": 251, "accomplish": 251, "attain": 251, "nearli": [251, 265], "impos": 251, "penalti": 251, "prevent": 251, "balanc": 251, "gaug": 251, "sarah": 251, "gender": [252, 256, 259, 261, 262, 264, 265, 268], "wage": [252, 261, 265, 268], "air": [252, 261, 265, 268], "fare": [252, 261, 265, 268], "iq": [252, 255, 262, 264, 265, 268], "bi": 253, "studi": [253, 265], "accordingli": [253, 265], "trip": 253, "ol": [253, 254, 257, 258, 260, 263, 265], "slope": [253, 260, 265], "significantli": [253, 265], "2001": 253, "travel": 253, "airfar": 253, "ufl": 253, "edu": [253, 259, 260], "winner": 253, "airq4": 253, "wouldn": 253, "certif": 253, "read_csv": [253, 254, 255, 256, 259, 260, 263, 265], "delim_whitespac": 253, "city1": 253, "city2": 253, "pop1": 253, "fare_2000": 253, "nb_passengers_2000": 253, "fare_2001": 253, "nb_passengers_2001": 253, "passeng": 253, "log10": [253, 259, 260], "plot_airfar": [253, 261, 268], "pd": 253, "dans": 253, "flight": 253, "data_flat": 253, "reset_index": 253, "data_2000": 253, "nb_passeng": 253, "data_2001": 253, "concat": [253, 265], "reg": [253, 259, 265], "hue": [253, 259, 260, 265], "axisgrid": [253, 260], "pairgrid": 253, "0x7f9c88777990": 253, "sm": [253, 260, 265], "rlm": [253, 265], "dep": [253, 254, 257, 258, 260, 263, 265], "adj": [253, 254, 257, 258, 260, 263, 265], "1585": 253, "mon": [253, 254, 257, 258, 260, 263], "mar": [253, 254, 257, 258, 260, 263], "prob": [253, 254, 257, 258, 260, 263, 265], "45532": 253, "8352": 253, "aic": [253, 254, 257, 258, 260, 263, 265], "107e": 253, "8349": 253, "bic": [253, 254, 257, 258, 260, 263, 265], "109e": 253, "covari": [253, 254, 257, 258, 260, 263, 265], "nonrobust": [253, 254, 257, 258, 260, 263, 265], "2428": 253, "669": 253, "206": 253, "409": 253, "216": 253, "0484": 253, "8925": 253, "191": 253, "684": 253, "omnibu": [253, 254, 257, 258, 260, 263, 265], "durbin": [253, 254, 257, 258, 260, 263, 265], "watson": [253, 254, 257, 258, 260, 263, 265], "446": 253, "jarqu": [253, 254, 257, 258, 260, 263, 265], "bera": [253, 254, 257, 258, 260, 263, 265], "jb": [253, 254, 257, 258, 260, 263, 265], "740": 253, "733": 253, "skew": [253, 254, 257, 258, 260, 263, 265], "710": [253, 263], "42e": 253, "kurtosi": [253, 254, 257, 258, 260, 263, 265], "338": 253, "cond": [253, 254, 257, 258, 260, 263, 265], "23e": 253, "multicollinear": [253, 263], "irl": 253, "hubert": 253, "est": 253, "mad": 253, "cov": 253, "h1": 253, "215": 253, "0848": 253, "448": 253, "856": 253, "0460": 253, "166": [253, 263, 265], "048": 253, "2686": 253, "119": [253, 265], "526": 253, "461": 253, "fare_differ": 253, "159": [253, 260, 265], "791": 253, "20e": 253, "22640": 253, "4176": 253, "528e": 253, "4174": 253, "530e": 253, "148": 253, "0279": 253, "480": 253, "0388": 253, "136": [253, 260], "036": 253, "544": [253, 265], "462": 253, "920": [253, 254, 265], "40e": [253, 263], "4e": [253, 263], "625": [253, 260, 261, 268], "formul": [254, 265], "confound": [254, 265], "scatter_matrix": [254, 256, 263, 265], "suptitl": [254, 259, 263], "sepal_width": [254, 265], "petal_length": [254, 265], "f_test": [254, 263, 265], "478": [254, 265], "468": [254, 265], "58e": [254, 265], "146": [254, 265], "9813": [254, 265], "099": [254, 265], "989": [254, 265], "785": [254, 265], "4821": [254, 265], "840": [254, 265], "6635": [254, 265], "502": [254, 265], "169": [254, 260, 265], "2983": [254, 265], "061": [254, 265], "418": [254, 265], "868": [254, 265], "753": [254, 265], "238": [254, 265], "885": [254, 265], "659": [254, 265], "245335346574177": 254, "07369058781701142": 254, "df_denom": [254, 263, 265], "df_num": [254, 263, 265], "414": [254, 261, 263, 268], "plot_iris_analysi": [254, 261, 268], "fsiq": [255, 256], "piq": [255, 256], "subject": [255, 265], "cancel": 255, "brain_siz": [255, 256, 263, 265], "na_valu": [255, 256, 263, 265], "plot_paired_boxplot": [255, 261, 268], "femal": [256, 259, 260, 263, 265], "male": [256, 259, 260, 263, 265], "scene": [256, 265], "pydata": [256, 259], "groupby_gend": [256, 265], "groupbi": [256, 265], "viq": [256, 263, 265], "mri_count": [256, 263, 265], "573": [256, 258, 261, 268], "plot_panda": [256, 261, 268], "thoma": [257, 258], "haslwant": [257, 258], "anova_lm": [257, 258], "0x7f9c74b4c110": 257, "multilinear": [257, 258], "confid": [257, 258], "anova_result": [257, 258], "nanova": [257, 258], "845": 257, "836": 257, "06e": 257, "560": [257, 258], "1877": 257, "830": 257, "932": 257, "444": 257, "7046": 257, "274": [257, 265], "887": 257, "279": 257, "930": 257, "597": 257, "337": 257, "742": 257, "sum_sq": [257, 258], "mean_sq": [257, 258], "pr": [257, 258], "476043": 257, "760281": 257, "062847e": 257, "102486": 257, "783471": 257, "_result": [257, 258], "plot_regress": [257, 261, 268], "elev": 258, "coolwarm": 258, "view_init": 258, "1076451312126014": 258, "009865032686848024": 258, "nretriev": 258, "99754526": 258, "00250049": 258, "50514907": 258, "579": 258, "577": 258, "43e": 258, "1552": 258, "441": [258, 260, 265], "3110": 258, "3122": 258, "4332": 258, "390": 258, "358": 258, "666": 258, "0861": 258, "940": 258, "833": 258, "6856": 258, "939": 258, "432": 258, "967": 258, "756": 258, "651": 258, "077": 258, "722": 258, "893": 258, "43322435": 258, "08614608": 258, "68556194": 258, "38501": 258, "973182": 258, "111646": 258, "365553e": 258, "1899": 258, "955512": 258, "281320": 258, "676135e": 258, "29425": 258, "094352": 258, "180581": 258, "115": [258, 261, 265, 268], "plot_regression_3d": [258, 261, 268], "educt": [259, 265], "rcdefault": [259, 265], "cmu": [259, 260], "cps_85_wage": [259, 260], "south": [259, 265], "elsewher": 259, "union": [259, 265], "race": [259, 265], "hispan": 259, "occup": 259, "sale": 259, "cleric": 259, "sector": 259, "manufactur": 259, "marr": 259, "unmarri": 259, "marri": 259, "short_nam": 259, "skiprow": [259, 260], "skipfoot": [259, 260], "plot_wage_data": [259, 261, 268], "investig": 260, "example_formula": 260, "urllib": 260, "urlretriev": 260, "usecol": 260, "plot_wage_education_gend": [260, 261, 268], "parserwarn": 260, "facetgrid": 260, "0x7f9c882402d0": 260, "01e": 260, "654": 260, "534": 260, "167": 260, "531": 260, "4053": 260, "732": 260, "314": 260, "496": 260, "1008": 260, "066": 260, "0334": 260, "003": [260, 265], "027": [260, 265], "675": 260, "792": 260, "876": [260, 263], "147": [260, 265], "0873": 260, "194": 260, "94e": 260, "503": [260, 265], "2998": [260, 265], "173": [260, 265, 268], "2750": [260, 265], "093": [260, 265], "972": [260, 265], "0415": [260, 265], "647": [260, 265], "052": [260, 265], "0134": [260, 265], "919": [260, 265], "838": 260, "825": [260, 265], "0821": 260, "356": 260, "455": [260, 261, 268], "brain": [263, 265], "246": 263, "809": 263, "0184": 263, "352": 263, "359": 263, "6258": 263, "824": 263, "696": 263, "948": 263, "8524": 263, "827": 263, "890": 263, "0002": 263, "46e": 263, "615": 263, "78e": 263, "0837": 263, "276": 263, "417": 263, "674": 263, "494": 263, "373": 263, "252": 263, "324": 263, "823": 263, "683196084584229": 263, "4140878441244694": 263, "fillna": 263, "winter": 263, "plot_brain_s": [263, 264, 268], "ffill": 263, "bfill": 263, "245": [263, 264, 268], "bayesian": 265, "pymc": 265, "mine": 265, "invalu": 265, "asset": 265, "disclaim": 265, "claim": 265, "118": 265, "816932": 265, "140": 265, "1001121": 265, "139": 265, "123": 265, "73": 265, "1038437": 265, "965353": 265, "137": 265, "951545": 265, "spreadsheet": 265, "willerman": 265, "1991": 265, "unnam": 265, "na": 265, "sin_t": 265, "cos_t": 265, "000000": 265, "279415": 265, "960170": 265, "368421": 265, "792419": 265, "609977": 265, "736842": 265, "999701": 265, "024451": 265, "105263": 265, "821291": 265, "570509": 265, "473684": 265, "326021": 265, "945363": 265, "842105": 265, "295030": 265, "955488": 265, "210526": 265, "802257": 265, "596979": 265, "578947": 265, "999967": 265, "008151": 265, "947368": 265, "811882": 265, "583822": 265, "sql": 265, "resembl": 265, "selector": 265, "200000": 265, "765000": 265, "862654": 265, "444444": 265, "71": 265, "431579": 265, "954855": 265, "lazi": 265, "bimod": 265, "vast": 265, "ttest_1samp": 265, "ttestresult": 265, "088099970": 265, "32891964": 265, "theorem": 265, "nonetheless": 265, "conclus": 265, "wilcoxon": 265, "wilcoxonresult": 265, "8189894": 265, "ttest_ind": 265, "female_viq": 265, "male_viq": 265, "77261617232": 265, "4445287677858": 265, "parametr": 265, "mann": 265, "whitnei": 265, "mannwhitneyu": 265, "mannwhitneyuresult": 265, "164": 265, "34228868687": 265, "fisq": 265, "46563759638": 265, "64277250": 265, "78": 265, "inter": 265, "ttest_rel": 265, "784201940": 265, "082172638183": 265, "082172638": 265, "nonparametr": 265, "approx": 265, "106594927135": 265, "textit": 265, "901": 265, "896": 265, "72e": 265, "758": 265, "2948": 265, "759": 265, "661": 265, "889": 265, "701": 265, "2060": 265, "681": 265, "731": 265, "796": 265, "607": 265, "endogen": 265, "exogen": 265, "015": 265, "010": 265, "5969": 265, "445": 265, "368": 265, "4500": 265, "619": 265, "704": 265, "196": 265, "8000": 265, "773": 265, "397": 265, "997": 265, "709": 265, "703": 265, "157": 265, "treat": [265, 266], "dummi": 265, "absorb": 265, "devel": 265, "data_fisq": 265, "data_piq": 265, "data_long": 265, "74": 265, "683": 265, "807": 265, "781": 265, "4250": 265, "643": 265, "793": 265, "943": 265, "c_1": 265, "c_2": 265, "cloud": 265, "24533535": 265, "07369": 265, "berndt": 265, "er": 265, "econometr": 265, "707570": 265, "694605": 265, "824126": 265, "602060": 265, "upon": 265, "reset": 265, "outlier": 265, "drive": 265, "conclud": 265, "mathematica": 266, "mapl": 266, "sym": 266, "mpmath": 266, "oo": 266, "infin": 266, "evalf": 266, "14159265358979": 266, "85987448204884": 266, "99999": 266, "init_print": 266, "use_unicod": 266, "wrap_lin": 266, "capabl": 266, "denest": 266, "trig": 266, "simplif": 266, "vagu": 266, "powsimp": 266, "expon": 266, "trigsimp": 266, "trigonometr": 266, "logcombin": 266, "radsimp": 266, "diff": 266, "sec": 266, "expr": 266, "lim_": 266, "indefinit": 266, "facil": 266, "risch": 266, "norman": 266, "sinh": 266, "cosh": 266, "____": 266, "solveset": 266, "irreduc": 266, "modulu": 266, "whenev": 266, "c1": 266, "aco": 266, "bernoulli": 266, "268": 268}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"author": [0, 267], "editor": [0, 76, 267], "chapter": [0, 2, 5, 8, 9, 10, 11, 37, 39, 40, 53, 54, 70, 87, 99, 157, 160, 173, 176, 202, 218, 231, 232, 251, 252, 262, 265, 266, 267], "addit": [0, 54, 267], "contribut": [0, 2, 8, 67, 70, 267], "what": [1, 8, 159, 231, 251, 267], "": [1, 8, 41, 53, 76, 87, 99, 157, 158, 251, 252, 262, 265, 267], "new": [1, 267], "releas": [1, 267], "2024": [1, 267], "1": [1, 88, 210, 211, 267], "come": [1, 267], "2022": [1, 267], "august": [1, 267], "2020": [1, 267], "2": [1, 37, 90, 193, 202, 208, 209, 210, 211, 237, 267], "septemb": [1, 267], "march": [1, 267], "2019": [1, 267], "mai": [1, 267], "2018": [1, 267], "2017": [1, 267], "octob": [1, 267], "2016": [1, 267], "2015": [1, 267], "3": [1, 53, 91, 267], "novemb": [1, 267], "2013": [1, 267], "21": [1, 267], "10": [1, 267], "feb": [1, 267], "2012": [1, 267], "26": [1, 267], "nov": [1, 267], "22": [1, 267], "jun": [1, 267], "20": [1, 267], "0": [1, 267], "apr": [1, 267], "2011": [1, 267], "16": [1, 267], "oct": [1, 267], "sept": [1, 267], "object": [2, 9, 22, 37, 77, 81, 83, 85, 159, 202, 251, 266, 267], "design": [2, 267], "choic": [2, 99, 100, 157, 267], "lectur": [2, 73, 267], "guid": [2, 53, 67, 267], "exampl": [2, 5, 6, 8, 9, 11, 37, 39, 40, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 67, 68, 70, 99, 100, 119, 121, 140, 150, 157, 159, 160, 173, 175, 176, 202, 204, 205, 218, 231, 232, 238, 247, 251, 267], "build": [2, 8, 267], "instruct": [2, 267], "requir": [2, 265, 267], "updat": [2, 267], "cover": [2, 267], "licens": [3, 267], "advanc": [5, 8, 9, 38, 78, 142, 158], "numpi": [5, 8, 29, 37, 39, 158, 159, 160, 173, 174, 202], "mask": [6, 8, 159], "statist": [6, 8, 37, 172, 202, 216, 265], "comput": [7, 36, 52, 53, 54, 69, 76, 84, 98, 118, 155, 156, 170, 175, 181, 192, 194, 197, 200, 202, 213, 216, 228, 230, 231, 250, 261, 264, 268], "time": [7, 36, 52, 69, 98, 118, 155, 156, 170, 194, 200, 213, 230, 250, 261, 264, 268], "prerequisit": [8, 10, 53, 54, 62, 251], "content": [8, 9, 10, 37, 39, 53, 54, 70, 157, 158, 159, 171, 175, 202, 231, 251, 265, 266], "life": 8, "ndarrai": 8, "It": 8, "block": [8, 13, 55], "memori": 8, "data": [8, 34, 73, 158, 159, 171, 172, 174, 175, 196, 199, 202, 203, 208, 209, 210, 211, 215, 231, 235, 236, 237, 251, 265], "type": [8, 10, 77, 157, 159, 171, 231], "The": [8, 65, 76, 84, 104, 159, 196, 198, 203, 207, 208, 209, 210, 211, 212, 238, 251, 265], "descriptor": 8, "read": [8, 39, 85, 157, 165, 175, 197, 265], "wav": 8, "file": [8, 10, 37, 82, 86, 158, 202, 203, 265], "exercis": [8, 10, 37, 39, 53, 78, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 157, 158, 159, 164, 168, 169, 172, 175, 176, 195, 201, 202, 204, 216, 231, 251, 252, 262, 265, 266], "cast": [8, 171], "re": 8, "interpret": 8, "view": [8, 159, 240], "index": [8, 159], "scheme": [8, 62, 66], "stride": 8, "main": 8, "point": [8, 135, 157, 215], "c": [8, 39, 76], "fortran": [8, 76], "order": [8, 245], "slice": [8, 159], "integ": [8, 159, 221], "fake": 8, "dimens": [8, 175, 251], "broadcast": [8, 175], "more": [8, 77, 158, 171, 265], "trick": [8, 76], "diagon": [8, 59], "cpu": 8, "cach": 8, "effect": 8, "find": [8, 21, 22, 46, 53, 74, 177, 187, 188, 199, 202], "dissect": 8, "univers": 8, "function": [8, 9, 44, 53, 76, 81, 86, 123, 144, 159, 177, 187, 188, 196, 198, 202], "thei": 8, "ar": [8, 81, 85, 159], "part": 8, "an": [8, 13, 16, 22, 76, 86, 99, 100, 157, 159, 165, 198, 222, 223, 226, 260], "ufunc": 8, "make": [8, 53, 54], "easier": [8, 79, 197], "from": [8, 28, 76, 85, 193], "scratch": 8, "solut": [8, 76, 176, 195, 202, 203, 204, 215, 252, 262, 265], "gener": [8, 9, 53, 99, 141, 157, 181, 192], "interoper": 8, "featur": [8, 37, 231], "share": 8, "multidimension": 8, "old": [8, 251], "buffer": 8, "protocol": 8, "arrai": [8, 29, 37, 61, 66, 159, 171, 172, 175, 265], "interfac": [8, 39, 251], "sibl": 8, "chararrai": 8, "maskedarrai": [8, 171], "vector": [8, 53, 134, 238], "string": [8, 77], "oper": [8, 77, 86, 158, 175, 202], "masked_arrai": 8, "miss": [8, 171], "domain": 8, "awar": 8, "recarrai": 8, "pure": 8, "conveni": 8, "summari": [8, 9, 39, 66, 99, 141, 157, 175, 202, 205, 251], "scipi": [8, 37, 53, 61, 176, 189, 195, 197, 198, 202], "why": [8, 62, 76, 251], "report": 8, "bug": [8, 10], "good": [8, 85, 124, 171], "document": [8, 70, 73, 74, 157, 159], "how": [8, 70, 76, 85], "help": [8, 10, 74, 76], "python": [9, 10, 39, 54, 73, 75, 76, 79, 84, 231, 251, 265, 266, 267], "construct": [9, 159], "iter": [9, 53, 65, 78, 82], "express": [9, 78], "simplic": 9, "bidirect": 9, "commun": 9, "chain": [9, 172, 238], "decor": [9, 151, 152, 153, 154], "replac": 9, "tweak": 9, "origin": [9, 165, 198], "implement": [9, 198], "class": [9, 65, 66], "copi": [9, 159], "docstr": [9, 81], "other": [9, 10, 64, 76, 157, 175, 251], "attribut": 9, "functool": 9, "update_wrapp": 9, "wrapper": 9, "wrap": [9, 10], "standard": [9, 86], "librari": [9, 86], "deprec": 9, "A": [9, 10, 53, 65, 68, 121, 124, 140, 177, 184, 198, 235, 238, 242, 251, 265], "while": [9, 78], "loop": [9, 78], "remov": [9, 181], "plugin": 9, "registr": 9, "system": [9, 65, 86, 208, 209, 210, 211, 266], "context": 9, "manag": 9, "catch": [9, 79], "except": [9, 10, 79], "us": [9, 10, 37, 53, 70, 159, 175, 241, 251, 266], "defin": [9, 81, 188], "debug": 10, "code": [10, 37, 53, 54, 70, 85, 87, 99, 141, 157, 160, 173, 176, 202, 231, 251, 252, 265], "avoid": [10, 53], "best": 10, "practic": [10, 53, 85, 171], "get": [10, 53, 74, 75, 76], "troubl": 10, "brian": 10, "kernighan": 10, "pyflak": 10, "fast": [10, 202], "static": 10, "analysi": [10, 235, 238, 254, 265], "run": [10, 54, 86], "current": 10, "edit": 10, "go": [10, 54, 215], "spell": 10, "checker": 10, "like": 10, "integr": [10, 172, 190, 191, 202, 266], "workflow": [10, 54, 76], "debugg": 10, "print": [10, 139, 154, 266], "invok": 10, "postmortem": 10, "post": [10, 265], "mortem": 10, "without": [10, 54], "ipython": [10, 54, 76, 157, 158], "step": [10, 53, 80, 266], "execut": 10, "rais": [10, 79], "numer": [10, 37, 54, 73, 77, 174, 175, 202], "error": 10, "wai": 10, "start": [10, 53, 75, 76], "graphic": 10, "altern": [10, 47], "command": [10, 86], "interact": [10, 76, 231, 260, 265], "when": 10, "segment": [10, 12, 15, 26, 33, 35, 37, 219, 227, 231], "fault": 10, "gdb": 10, "up": 10, "imag": [11, 13, 14, 16, 19, 27, 28, 29, 32, 37, 158, 177, 182, 183, 197, 198, 201, 202, 204, 214, 218, 220, 222, 223, 226, 231, 237], "process": [11, 37, 202, 204, 214, 231], "gaussian": [12, 193, 198, 215, 237, 251], "mixtur": 12, "model": [12, 215, 247, 249, 251, 265], "plot": [13, 42, 104, 121, 122, 124, 130, 131, 132, 133, 134, 135, 138, 140, 142, 147, 149, 150, 151, 152, 153, 157, 161, 162, 177, 181, 182, 183, 188, 192, 196, 197, 199, 237, 240, 245, 249, 256, 265], "mean": [13, 31, 265], "blur": [14, 37, 198], "clean": 15, "mathemat": [15, 37, 40, 53, 185, 201, 202, 231, 266], "morphologi": [15, 37, 185, 201, 202, 231], "denois": [16, 19, 20, 37, 197, 202, 225, 231], "median": 16, "filter": [16, 21, 37, 181, 182, 197, 201, 202, 225, 228, 231], "displai": [17, 18, 37, 123, 144, 165, 220], "raccoon": [17, 18], "face": [17, 18, 113, 172], "total": 20, "variat": 20, "edg": [21, 37, 111, 112], "sobel": [21, 228], "bound": [22, 53], "box": [22, 53], "geometr": [23, 37, 183, 201, 202], "transform": [23, 37, 183, 201, 202, 224], "granulometri": 24, "greyscal": 25, "dilat": 25, "histogram": [26, 186, 223, 231], "interpol": [27, 184, 202], "measur": [28, 37, 54, 201, 202, 231, 243, 251, 265], "manipul": [29, 37, 86, 172, 174, 175, 181, 202, 265, 266], "open": [30, 37], "eros": 30, "propag": [30, 171], "radial": 31, "sharpen": [32, 37], "spectral": [33, 192], "cluster": 33, "synthet": [34, 53], "watersh": [35, 227, 231], "d": [37, 202], "write": [37, 54, 165], "basic": [37, 77, 159, 175, 251], "inform": [37, 86], "smooth": [37, 51, 53, 187], "extract": [37, 215, 231], "detect": 37, "properti": [37, 157, 231], "ndimag": [37, 197, 202], "full": [37, 53, 157, 160, 173, 176, 202, 231, 252, 265], "topic": 38, "introduct": [39, 62, 157, 215, 231, 251], "api": 39, "support": [39, 238], "ctype": 39, "swig": 39, "cython": 39, "further": [39, 215], "refer": [39, 70, 157, 159], "optim": [40, 42, 43, 47, 49, 50, 53, 54, 177, 202, 251], "brent": [41, 53], "method": [41, 53, 66, 77, 81, 231], "comparison": [42, 231], "constraint": [43, 50, 53], "visual": [43, 62, 159, 215, 231, 237, 248, 251, 259, 265], "geometri": 43, "convex": [44, 53], "curv": [45, 53, 179, 196, 202, 215, 234, 251], "fit": [45, 53, 163, 167, 179, 196, 202, 209, 211, 215, 234, 245, 251], "minimum": [46, 53, 187], "flat": [46, 53], "neighborhood": 46, "gradient": [48, 53, 228, 251], "descent": [48, 53], "noisi": [49, 53], "problem": [49, 53, 65, 202, 214, 246, 251], "v": [51, 62], "non": [51, 53, 215, 231, 247, 251], "minima": [53, 177, 188], "know": 53, "your": [53, 85], "dimension": [53, 251], "versu": [53, 101, 103, 251], "exact": 53, "cost": 53, "review": 53, "differ": [53, 171, 255, 265], "1d": [53, 161, 184], "quadrat": 53, "converg": 53, "approxim": [53, 172], "i": [53, 157, 203, 231, 251], "note": [53, 65, 238], "fact": 53, "local": [53, 231], "matter": 53, "luck": 53, "base": [53, 158, 231], "some": [53, 157, 172], "intuit": 53, "about": [53, 267], "fix": 53, "take": [53, 265], "home": [53, 251, 265], "messag": [53, 265], "condit": [53, 78], "number": [53, 78, 81, 159, 202], "precondit": [53, 65], "adapt": 53, "conjug": 53, "newton": 53, "quasi": 53, "hessian": 53, "2nd": 53, "differenti": [53, 266], "fly": 53, "less": 53, "shoot": 53, "powel": 53, "algorithm": [53, 54, 175], "simplex": 53, "nelder": 53, "mead": 53, "global": [53, 81], "brute": 53, "forc": 53, "grid": [53, 125, 136, 145, 157, 251], "search": [53, 203, 251], "choos": 53, "faster": [53, 54], "exercic": 53, "simpl": [53, 68, 119, 121, 124, 157, 159, 191, 198, 215, 220, 235, 237, 242, 246, 251, 256, 257, 265], "special": [53, 202], "case": 53, "linear": [53, 54, 65, 202, 215, 242, 247, 249, 251, 265, 266], "least": [53, 215], "squar": [53, 215], "minim": [53, 202], "norm": 53, "lagrang": 53, "multipli": 53, "donald": 54, "knuth": 54, "profil": 54, "No": 54, "timeit": 54, "outsid": 54, "cprofil": 54, "line": [54, 104, 157], "svd": 54, "algebra": [54, 202, 266], "link": [54, 70, 265], "compress": [55, 57, 58], "row": [55, 58], "format": [55, 56, 57, 58, 59, 60, 63, 158], "bsr": 55, "coordin": [56, 133], "coo": 56, "spars": [57, 58, 61, 62, 65, 66], "column": 57, "csc": 57, "csr": 58, "dia": 59, "dictionari": [60, 77, 78], "kei": 60, "dok": 60, "matric": [62, 265, 266], "matrix": [62, 251], "storag": [62, 66], "typic": 62, "applic": [62, 214, 215, 217, 251], "sparsiti": 62, "structur": [62, 171], "list": [63, 77, 78, 157, 203], "lil": 63, "interest": 64, "packag": [64, 70, 85, 217], "solver": 65, "direct": 65, "common": [65, 66], "paramet": [65, 81, 177, 241, 251], "linearoper": 65, "few": 65, "eigenvalu": 65, "eigen": 65, "modul": [65, 85, 86], "foreword": 70, "github": 70, "keep": [70, 78], "concis": 70, "collaps": 70, "paragraph": 70, "figur": [70, 99, 141, 157, 165, 252, 265], "markup": 70, "section": [70, 158, 159, 171, 175], "subsect": 70, "admonit": 70, "clear": 70, "float": 70, "scientif": [73, 76, 84, 202, 231, 267], "One": [73, 265], "learn": [73, 232, 234, 238, 246, 251], "scienc": [73, 75], "download": 73, "ecosystem": [76, 231], "scientist": 76, "need": 76, "strength": 76, "doe": 76, "compar": [76, 193, 236, 265], "compil": 76, "languag": [76, 84], "matlab": 76, "script": [76, 85], "julia": 76, "scilab": 76, "octav": 76, "r": 76, "idl": 76, "etc": 76, "befor": [76, 253], "instal": 76, "work": [76, 159, 175], "environ": [76, 86], "text": [76, 139, 154, 157, 158], "under": [76, 251], "notebook": [76, 251], "elabor": [76, 127, 145, 171], "jupyt": [76, 157], "tip": [76, 265], "contain": 77, "orient": [77, 83], "program": [77, 83], "discov": 77, "assign": 77, "control": 78, "flow": 78, "elif": 78, "els": 78, "rang": 78, "break": 78, "continu": [78, 231], "over": [78, 82, 251], "ani": 78, "sequenc": [78, 81, 203], "track": 78, "enumer": 78, "comprehens": 78, "handl": 79, "try": 79, "final": [79, 197], "ask": 79, "forgiv": 79, "than": 79, "permiss": 79, "first": [80, 237, 266], "definit": 81, "return": 81, "statement": [81, 214], "pass": 81, "valu": [81, 202, 265], "variabl": [81, 86, 265], "fibonacci": [81, 203], "quicksort": [81, 203], "input": [82, 197, 202, 231], "output": [82, 202, 231], "mode": [82, 157], "oop": 83, "reus": 85, "import": [85, 159, 231], "creat": [85, 159, 174, 222, 265], "__main__": 85, "load": [85, 158, 199, 215, 251], "organ": 85, "found": 85, "quick": [85, 157, 175, 251], "o": [86, 203], "directori": [86, 203], "path": 86, "extern": 86, "walk": [86, 169, 175], "shutil": 86, "high": [86, 181, 202, 251], "level": [86, 202], "glob": 86, "pattern": 86, "match": 86, "sy": 86, "specif": 86, "pickl": 86, "easi": 86, "persist": 86, "4": 92, "5": 93, "6": 94, "7": 95, "8": 96, "9": [97, 253], "sampl": [99, 157, 193, 202, 265], "matplotlib": [99, 104, 143, 157, 265], "demo": [99, 100, 139, 146, 157, 178, 184, 185, 244], "option": [99, 100, 157], "titl": [99, 141, 157], "alias": [101, 103], "anti": [101, 103], "alpha": 102, "transpar": 102, "color": [104, 111, 113, 157], "colormap": [105, 157], "dash": [106, 107], "capstyl": 106, "join": 107, "style": [107, 115, 116, 157], "linestyl": 108, "linewidth": 109, "marker": [110, 111, 112, 113, 114, 157, 231], "width": [112, 157], "size": [114, 171, 254], "solid": [115, 116], "cap": 115, "joint": 116, "locat": [117, 157], "tick": [117, 157], "axi": [117, 157, 237], "ax": [119, 120, 157], "bar": [122, 142, 157], "contour": [123, 144, 157, 219], "look": [124, 251, 265], "gridspec": 126, "imshow": [127, 146, 157], "subplot": [128, 136, 137, 138, 157], "pie": [129, 148, 157], "chart": [129, 148, 157], "fill": 130, "3d": [131, 132, 149, 157, 177, 231], "polar": [133, 151, 157], "field": 134, "quiver": [134, 152, 157], "scatter": [135, 153, 157, 265], "horizont": [137, 228], "arrang": [137, 138], "vertic": 138, "quit": 140, "right": 140, "boxplot": [143, 255], "multipl": [147, 258, 265], "vignett": [147, 148, 149, 150], "thank": 157, "pyplot": 157, "default": 157, "set": [157, 166, 172, 193, 241, 251, 265], "instanti": 157, "chang": 157, "limit": [157, 266], "label": [157, 226, 231], "move": 157, "spine": 157, "ad": [157, 175], "legend": 157, "annot": 157, "devil": 157, "detail": 157, "regular": [157, 241, 249, 251], "multi": 157, "beyond": 157, "thi": [157, 252, 262, 265], "tutori": [157, 233], "galleri": 157, "mail": 157, "polynomi": [158, 167, 234, 245, 251], "remind": 158, "navig": 158, "filesystem": 158, "own": 158, "well": 158, "known": 158, "obscur": 158, "intern": 158, "convent": 159, "manual": 159, "creation": 159, "tile": 159, "prime": 159, "siev": 159, "fanci": 159, "boolean": 159, "2d": [162, 177, 197, 240, 244], "chebyshev": 163, "basi": 163, "distanc": 164, "eleph": 165, "red": 165, "channel": 165, "grei": 165, "lower": 165, "resolut": 165, "mandelbrot": [166, 172], "popul": [168, 265], "random": [169, 175, 202, 227, 231], "smaller": 171, "deal": 171, "pictur": [172, 246], "frame": [172, 265], "crude": [172, 199], "markov": 172, "elementwis": 175, "reduct": [175, 251], "sum": 175, "diffus": 175, "shape": 175, "flatten": 175, "reshap": 175, "shuffl": 175, "resiz": 175, "sort": 175, "two": [177, 265], "surfac": 177, "connect": [178, 201, 202, 226, 231], "compon": [178, 201, 202, 226, 231, 238, 251], "detrend": 180, "signal": [180, 181, 189, 192, 198, 202], "fft": [181, 197, 198, 202], "power": [181, 192], "all": 181, "frequenc": 181, "normal": 186, "distribut": [186, 202, 207, 212, 216], "pdf": 186, "root": [188, 202], "resampl": 189, "damp": 190, "spring": 190, "mass": 190, "oscil": 190, "od": 191, "spectrogram": 192, "densiti": 192, "chirp": 192, "psd": 192, "temperatur": [196, 202], "month": 196, "year": 196, "period": [196, 199], "reconstruct": 197, "better": 197, "gaussian_filt": 197, "convolut": 198, "kernel": 198, "prepar": 198, "via": [198, 251], "do": [198, 238], "fftconvolv": 198, "its": [199, 251], "io": 202, "linalg": 202, "maxim": 202, "stat": 202, "frozen": 202, "probabl": [202, 216], "hypothesi": [202, 265], "test": [202, 251, 260, 265], "quadratur": 202, "initi": [202, 215], "fourier": 202, "moon": 202, "land": 202, "pi": 203, "walli": 203, "pythonpath": 203, "unmolten": [204, 214], "grain": [204, 214], "glass": 204, "excercic": 205, "cumul": [206, 216], "wind": [206, 216], "speed": [206, 216], "predict": [206, 216, 239, 251], "gumbel": [207, 212, 216], "lidar": [208, 209, 210, 211, 215], "dataset": [208, 209, 210, 211, 237, 240, 251], "result": 212, "count": 214, "bubbl": 214, "topograph": 215, "waveform": 215, "maximum": 216, "sprog\u00f8": 216, "station": 216, "approach": [216, 251], "univariatesplin": 216, "scikit": [218, 231, 232, 251], "can": 221, "overflow": 221, "equal": 223, "affin": 224, "variou": 225, "walker": [227, 231], "otsu": [229, 231], "threshold": [229, 231], "concept": 231, "includ": [231, 265], "colorspac": 231, "preprocess": [231, 238], "enhanc": 231, "grayscal": 231, "binari": 231, "foreground": 231, "background": 231, "earlier": 231, "version": [231, 251], "discret": 231, "postprocess": 231, "region": 231, "vision": 231, "diagram": 233, "bia": [234, 251], "varianc": [234, 249, 251, 265], "regress": [235, 242, 251, 257, 258, 265], "california": 235, "hous": [235, 251], "classifi": [236, 237, 251], "digit": [236, 237, 248, 251], "classif": [237, 251], "project": 237, "princip": [237, 238, 251], "naiv": [237, 251], "bay": [237, 251], "quantifi": 237, "perform": [237, 243, 251], "eigenfac": 238, "pca": [238, 244, 251], "svm": 238, "machin": [238, 246, 251], "pipelin": 238, "facial": 238, "recognit": 238, "nearest": 239, "neighbor": [239, 251], "iri": [239, 240, 251, 254], "ridgecv": 241, "lassocv": 241, "decis": 243, "tree": [243, 251], "9th": 245, "formal": 246, "tsne": [248, 251], "acknowledg": 251, "question": 251, "principl": 251, "introduc": 251, "estim": 251, "supervis": 251, "recap": 251, "necessari": 251, "prefer": 251, "simpler": 251, "complex": 251, "handwritten": 251, "natur": 251, "quantit": 251, "price": 251, "boost": 251, "k": 251, "correct": 251, "valid": 251, "select": 251, "cross": 251, "hyperparamet": 251, "automat": 251, "built": 251, "nest": 251, "unsupervis": 251, "embed": 251, "fit_transform": 251, "trade": 251, "off": 251, "illustr": 251, "tradeoff": 251, "last": 251, "word": 251, "caution": 251, "separ": [251, 265], "air": 253, "fare": 253, "after": 253, "11": 253, "petal": 254, "sepal": 254, "pair": [255, 265], "quantiti": 256, "panda": [256, 265], "datafram": [256, 265], "factor": [259, 265], "influenc": 259, "wage": [259, 260], "educ": 260, "gender": [260, 263], "relat": 263, "iq": 263, "represent": 265, "tabl": 265, "convert": 265, "group": 265, "student": 265, "t": 265, "simplest": 265, "across": 265, "repeat": 265, "same": 265, "individu": 265, "formula": 265, "specifi": 265, "terminologi": 265, "categor": 265, "categori": 265, "between": 265, "fsiq": 265, "piq": 265, "hoc": 265, "anova": 265, "seaborn": 265, "explor": 265, "pairplot": 265, "feel": 265, "lmplot": 265, "univari": 265, "robust": 265, "sympi": 266, "symbol": 266, "calcul": 266, "expand": 266, "simplifi": 266, "calculu": 266, "seri": 266, "expans": 266, "equat": 266, "solv": 266}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Authors": [[0, "authors"], [267, "authors"]], "Editors": [[0, "editors"], [267, "editors"]], "Chapter authors": [[0, "chapter-authors"], [267, "chapter-authors"]], "Additional Contributions": [[0, "additional-contributions"], [267, "additional-contributions"]], "What\u2019s new": [[1, "what-s-new"], [267, "what-s-new"]], "Release 2024.1 (coming 2024)": [[1, "release-2024-1-coming-2024"], [267, "release-2024-1-coming-2024"]], "Release 2022.1 (August 2022)": [[1, "release-2022-1-august-2022"], [267, "release-2022-1-august-2022"]], "Release 2020.2 (September 2020)": [[1, "release-2020-2-september-2020"], [267, "release-2020-2-september-2020"]], "Release 2020.1 (March 2020)": [[1, "release-2020-1-march-2020"], [267, "release-2020-1-march-2020"]], "Release 2019.1 (May 2019)": [[1, "release-2019-1-may-2019"], [267, "release-2019-1-may-2019"]], "Release 2018.1 (September 2018)": [[1, "release-2018-1-september-2018"], [267, "release-2018-1-september-2018"]], "Release 2017.1 (October 2017)": [[1, "release-2017-1-october-2017"], [267, "release-2017-1-october-2017"]], "Release 2016.1 (September 2016)": [[1, "release-2016-1-september-2016"], [267, "release-2016-1-september-2016"]], "Release 2015.3 (November 2015)": [[1, "release-2015-3-november-2015"], [267, "release-2015-3-november-2015"]], "Release 2015.2 (October 2015)": [[1, "release-2015-2-october-2015"], [267, "release-2015-2-october-2015"]], "Release 2015.1 (September 2015)": [[1, "release-2015-1-september-2015"], [267, "release-2015-1-september-2015"]], "Release 2013.2 (21 August 2013)": [[1, "release-2013-2-21-august-2013"], [267, "release-2013-2-21-august-2013"]], "Release 2013.1 (10 Feb 2013)": [[1, "release-2013-1-10-feb-2013"], [267, "release-2013-1-10-feb-2013"]], "Release 2012.3 (26 Nov 2012)": [[1, "release-2012-3-26-nov-2012"], [267, "release-2012-3-26-nov-2012"]], "Release 2012.2 (22 Jun 2012)": [[1, "release-2012-2-22-jun-2012"], [267, "release-2012-2-22-jun-2012"]], "Release 2012.1 (20 Jun 2012)": [[1, "release-2012-1-20-jun-2012"], [267, "release-2012-1-20-jun-2012"]], "Release 2012.0 (22 Apr 2012)": [[1, "release-2012-0-22-apr-2012"], [267, "release-2012-0-22-apr-2012"]], "Release 2011.1 (16 Oct 2011)": [[1, "release-2011-1-16-oct-2011"], [267, "release-2011-1-16-oct-2011"]], "Release 2011 (1 Sept 2011)": [[1, "release-2011-1-sept-2011"], [267, "release-2011-1-sept-2011"]], "Contributing": [[2, "contributing"], [267, "contributing"]], "Objectives and design choices for the lectures": [[2, "objectives-and-design-choices-for-the-lectures"], [267, "objectives-and-design-choices-for-the-lectures"]], "Contributing guide": [[2, "contributing-guide"], [267, "contributing-guide"]], "Example chapter": [[2, null], [267, null]], "Building instructions": [[2, "building-instructions"], [267, "building-instructions"]], "Requirements": [[2, "requirements"], [265, null], [267, "requirements"]], "Updating the cover": [[2, "updating-the-cover"], [267, "updating-the-cover"]], "License": [[3, "license"], [267, "license"]], "Examples for the advanced NumPy chapter": [[5, "examples-for-the-advanced-numpy-chapter"]], "Example: Masked statistics": [[6, "example-masked-statistics"], [8, null]], "Computation times": [[7, "computation-times"], [36, "computation-times"], [52, "computation-times"], [69, "computation-times"], [98, "computation-times"], [118, "computation-times"], [155, "computation-times"], [156, "computation-times"], [170, "computation-times"], [194, "computation-times"], [200, "computation-times"], [213, "computation-times"], [230, "computation-times"], [250, "computation-times"], [261, "computation-times"], [264, "computation-times"], [268, "computation-times"]], "Advanced NumPy": [[8, "advanced-numpy"]], "Prerequisites": [[8, null], [10, null], [53, null], [54, null], [62, "prerequisites"], [251, null]], "Chapter contents": [[8, "chapter-contents"], [9, "chapter-contents"], [10, "chapter-contents"], [157, "chapter-contents"]], "Life of ndarray": [[8, "life-of-ndarray"]], "It\u2019s\u2026": [[8, "it-s"]], "Block of memory": [[8, "block-of-memory"]], "Data types": [[8, "data-types"], [231, "data-types"]], "The descriptor": [[8, "the-descriptor"]], "Example: reading .wav files": [[8, "example-reading-wav-files"]], "Exercise": [[8, null], [37, null], [37, null], [37, null], [53, null], [78, null], [86, null], [89, "exercise"], [201, null], [201, null], [201, null], [202, null], [202, null], [202, null], [231, null], [231, null], [265, null], [265, null], [265, null], [265, null], [265, null]], "Casting and re-interpretation/views": [[8, "casting-and-re-interpretation-views"]], "Casting": [[8, "casting"], [171, "casting"]], "Re-interpretation / viewing": [[8, "re-interpretation-viewing"]], "Indexing scheme: strides": [[8, "indexing-scheme-strides"]], "Main point": [[8, "main-point"]], "C and Fortran order": [[8, "c-and-fortran-order"]], "Slicing with integers": [[8, "slicing-with-integers"]], "Example: fake dimensions with strides": [[8, "example-fake-dimensions-with-strides"]], "Broadcasting": [[8, "broadcasting"], [175, "broadcasting"]], "More tricks: diagonals": [[8, "more-tricks-diagonals"]], "CPU cache effects": [[8, "cpu-cache-effects"]], "Findings in dissection": [[8, "findings-in-dissection"]], "Universal functions": [[8, "universal-functions"]], "What they are?": [[8, "what-they-are"]], "Parts of an Ufunc": [[8, "parts-of-an-ufunc"]], "Making it easier": [[8, "making-it-easier"]], "Exercise: building an ufunc from scratch": [[8, "exercise-building-an-ufunc-from-scratch"]], "Solution: building an ufunc from scratch": [[8, "solution-building-an-ufunc-from-scratch"]], "Generalized ufuncs": [[8, "generalized-ufuncs"]], "Interoperability features": [[8, "interoperability-features"]], "Sharing multidimensional, typed data": [[8, "sharing-multidimensional-typed-data"]], "The old buffer protocol": [[8, "the-old-buffer-protocol"], [8, "id2"]], "Array interface protocol": [[8, "array-interface-protocol"]], "Array siblings: chararray, maskedarray": [[8, "array-siblings-chararray-maskedarray"]], "chararray: vectorized string operations": [[8, "chararray-vectorized-string-operations"]], "masked_array missing data": [[8, "masked-array-missing-data"]], "The mask": [[8, "the-mask"]], "Domain-aware functions": [[8, "domain-aware-functions"]], "recarray: purely convenience": [[8, "recarray-purely-convenience"]], "Summary": [[8, "summary"], [9, null], [39, "summary"], [175, "summary"], [66, "summary"]], "Contributing to NumPy/SciPy": [[8, "contributing-to-numpy-scipy"]], "Why": [[8, "why"]], "Reporting bugs": [[8, "reporting-bugs"]], "Good bug report": [[8, "good-bug-report"]], "Contributing to documentation": [[8, "contributing-to-documentation"]], "Contributing features": [[8, "contributing-features"]], "How to help, in general": [[8, "how-to-help-in-general"]], "Advanced Python Constructs": [[9, "advanced-python-constructs"]], "Iterators, generator expressions and generators": [[9, "iterators-generator-expressions-and-generators"]], "Iterators": [[9, "iterators"]], "Simplicity": [[9, null]], "Generator expressions": [[9, "generator-expressions"]], "Generators": [[9, "generators"], [9, null]], "Bidirectional communication": [[9, "bidirectional-communication"]], "Chaining generators": [[9, "chaining-generators"]], "Decorators": [[9, "decorators"]], "Replacing or tweaking the original object": [[9, "replacing-or-tweaking-the-original-object"]], "Decorators implemented as classes and as functions": [[9, "decorators-implemented-as-classes-and-as-functions"]], "Copying the docstring and other attributes of the original function": [[9, "copying-the-docstring-and-other-attributes-of-the-original-function"]], "functools.update_wrapper(wrapper, wrapped)": [[9, null]], "Examples in the standard library": [[9, "examples-in-the-standard-library"]], "Deprecation of functions": [[9, "deprecation-of-functions"]], "A while-loop removing decorator": [[9, "a-while-loop-removing-decorator"]], "A plugin registration system": [[9, "a-plugin-registration-system"]], "Context managers": [[9, "context-managers"]], "Catching exceptions": [[9, "catching-exceptions"], [79, "catching-exceptions"]], "Using generators to define context managers": [[9, "using-generators-to-define-context-managers"]], "Debugging code": [[10, "debugging-code"]], "Avoiding bugs": [[10, "avoiding-bugs"]], "Coding best practices to avoid getting in trouble": [[10, "coding-best-practices-to-avoid-getting-in-trouble"]], "Brian Kernighan": [[10, null]], "pyflakes: fast static analysis": [[10, "pyflakes-fast-static-analysis"]], "Running pyflakes on the current edited file": [[10, "running-pyflakes-on-the-current-edited-file"]], "A type-as-go spell-checker like integration": [[10, "a-type-as-go-spell-checker-like-integration"]], "Debugging workflow": [[10, "debugging-workflow"]], "Using the Python debugger": [[10, "using-the-python-debugger"]], "print": [[10, null]], "Invoking the debugger": [[10, "invoking-the-debugger"]], "Postmortem": [[10, "postmortem"]], "Post-mortem debugging without IPython": [[10, null]], "Step-by-step execution": [[10, "step-by-step-execution"]], "Raising exception on numerical errors": [[10, null]], "Other ways of starting a debugger": [[10, "other-ways-of-starting-a-debugger"]], "Graphical debuggers and alternatives": [[10, null]], "Debugger commands and interaction": [[10, "debugger-commands-and-interaction"]], "Getting help when in the debugger": [[10, "getting-help-when-in-the-debugger"]], "Debugging segmentation faults using gdb": [[10, "debugging-segmentation-faults-using-gdb"]], "Wrap up exercise": [[10, null]], "Examples for the image processing chapter": [[11, "examples-for-the-image-processing-chapter"], [37, "examples-for-the-image-processing-chapter"]], "Segmentation with Gaussian mixture models": [[12, "segmentation-with-gaussian-mixture-models"]], "Plot the block mean of an image": [[13, "plot-the-block-mean-of-an-image"]], "Blurring of images": [[14, "blurring-of-images"]], "Cleaning segmentation with mathematical morphology": [[15, "cleaning-segmentation-with-mathematical-morphology"]], "Denoising an image with the median filter": [[16, "denoising-an-image-with-the-median-filter"]], "Display a Raccoon Face": [[17, "display-a-raccoon-face"]], "Displaying a Raccoon Face": [[18, "displaying-a-raccoon-face"]], "Image denoising": [[19, "image-denoising"]], "Total Variation denoising": [[20, "total-variation-denoising"]], "Finding edges with Sobel filters": [[21, "finding-edges-with-sobel-filters"]], "Find the bounding box of an object": [[22, "find-the-bounding-box-of-an-object"]], "Geometrical transformations": [[23, "geometrical-transformations"], [37, "geometrical-transformations"]], "Granulometry": [[24, "granulometry"]], "Greyscale dilation": [[25, "greyscale-dilation"]], "Histogram segmentation": [[26, "histogram-segmentation"]], "Image interpolation": [[27, "image-interpolation"]], "Measurements from images": [[28, "measurements-from-images"]], "Image manipulation and NumPy arrays": [[29, "image-manipulation-and-numpy-arrays"]], "Opening, erosion, and propagation": [[30, "opening-erosion-and-propagation"]], "Radial mean": [[31, "radial-mean"]], "Image sharpening": [[32, "image-sharpening"]], "Segmentation with spectral clustering": [[33, "segmentation-with-spectral-clustering"]], "Synthetic data": [[34, "synthetic-data"]], "Watershed segmentation": [[35, "watershed-segmentation"], [231, "watershed-segmentation"]], "Image manipulation and processing using NumPy and SciPy": [[37, "image-manipulation-and-processing-using-numpy-and-scipy"]], "Image = 2-D numerical array": [[37, null]], "Chapters contents": [[37, "chapters-contents"], [39, "chapters-contents"], [53, "chapters-contents"], [54, "chapters-contents"], [70, "chapters-contents"], [202, "chapters-contents"], [231, "chapters-contents"], [251, "chapters-contents"], [266, "chapters-contents"]], "Opening and writing to image files": [[37, "opening-and-writing-to-image-files"]], "Displaying images": [[37, "displaying-images"]], "Basic manipulations": [[37, "basic-manipulations"]], "Statistical information": [[37, "statistical-information"]], "Image filtering": [[37, "image-filtering"], [201, "image-filtering"], [202, "image-filtering"]], "Blurring/smoothing": [[37, "blurring-smoothing"]], "Sharpening": [[37, "sharpening"]], "Denoising": [[37, "denoising"]], "Exercise: denoising": [[37, null]], "Mathematical morphology": [[37, "mathematical-morphology"], [201, "mathematical-morphology"], [202, "mathematical-morphology"], [231, "mathematical-morphology"]], "Feature extraction": [[37, "feature-extraction"]], "Edge detection": [[37, "edge-detection"]], "Segmentation": [[37, "segmentation"]], "Measuring objects properties: scipy.ndimage.measurements": [[37, "measuring-objects-properties-scipy-ndimage-measurements"]], "Full code examples": [[37, "full-code-examples"], [53, "full-code-examples"], [53, "id2"], [157, "full-code-examples"], [173, "full-code-examples"], [231, "full-code-examples"]], "Advanced topics": [[38, "advanced-topics"]], "Interfacing with C": [[39, "interfacing-with-c"]], "Introduction": [[39, "introduction"], [62, "introduction"], [157, "introduction"], [215, "introduction"]], "Python-C-Api": [[39, "id1"]], "Example": [[39, "example"], [39, "id5"], [39, "id8"], [39, "id10"]], "NumPy Support": [[39, "numpy-support"], [39, "id6"], [39, "id9"], [39, "id11"]], "Ctypes": [[39, "id3"], [39, "id13"]], "SWIG": [[39, "swig"], [39, "id14"]], "Cython": [[39, "cython"], [39, "id15"]], "Further Reading and References": [[39, "further-reading-and-references"]], "Exercises": [[39, "exercises"], [81, "exercises"], [266, null], [266, null], [266, null], [266, null], [266, null]], "Python-C-API": [[39, "id12"]], "Examples for the mathematical optimization chapter": [[40, "examples-for-the-mathematical-optimization-chapter"], [53, "examples-for-the-mathematical-optimization-chapter"], [53, "id3"]], "Brent\u2019s method": [[41, "brent-s-method"]], "Plotting the comparison of optimizers": [[42, "plotting-the-comparison-of-optimizers"]], "Constraint optimization: visualizing the geometry": [[43, "constraint-optimization-visualizing-the-geometry"]], "Convex function": [[44, "convex-function"]], "Curve fitting": [[45, "curve-fitting"], [53, "curve-fitting"], [179, "curve-fitting"], [202, "curve-fitting"]], "Finding a minimum in a flat neighborhood": [[46, "finding-a-minimum-in-a-flat-neighborhood"]], "Alternating optimization": [[47, "alternating-optimization"]], "Gradient descent": [[48, "gradient-descent"]], "Noisy optimization problem": [[49, "noisy-optimization-problem"]], "Optimization with constraints": [[50, "optimization-with-constraints"], [53, "optimization-with-constraints"]], "Smooth vs non-smooth": [[51, "smooth-vs-non-smooth"]], "Mathematical optimization: finding minima of functions": [[53, "mathematical-optimization-finding-minima-of-functions"]], "Knowing your problem": [[53, "knowing-your-problem"]], "Dimensionality of the problem": [[53, null]], "Convex versus non-convex optimization": [[53, "convex-versus-non-convex-optimization"]], "Smooth and non-smooth problems": [[53, "smooth-and-non-smooth-problems"]], "Noisy versus exact cost functions": [[53, "noisy-versus-exact-cost-functions"]], "Noisy gradients": [[53, null]], "Constraints": [[53, "constraints"]], "A review of the different optimizers": [[53, "a-review-of-the-different-optimizers"]], "Getting started: 1D optimization": [[53, "getting-started-1d-optimization"]], "Brent\u2019s method on a quadratic function: it\n             converges in 3 iterations, as the quadratic\n             approximation is then exact.": [[53, "id5"]], "Brent\u2019s method on a non-convex function: note that\n             the fact that the optimizer avoided the local minimum\n             is a matter of luck.": [[53, "id6"]], "Gradient based methods": [[53, "gradient-based-methods"]], "Some intuitions about gradient descent": [[53, "some-intuitions-about-gradient-descent"]], "Fixed step gradient descent": [[53, "id7"]], "Take home message: conditioning number and preconditioning": [[53, null]], "Adaptive step gradient descent": [[53, "id8"]], "Conjugate gradient descent": [[53, "conjugate-gradient-descent"], [53, "id9"]], "Newton and quasi-newton methods": [[53, "newton-and-quasi-newton-methods"]], "Newton methods: using the Hessian (2nd differential)": [[53, "newton-methods-using-the-hessian-2nd-differential"]], "Quasi-Newton methods: approximating the Hessian on the fly": [[53, "quasi-newton-methods-approximating-the-hessian-on-the-fly"]], "Gradient-less methods": [[53, "gradient-less-methods"]], "A shooting method: the Powell algorithm": [[53, "a-shooting-method-the-powell-algorithm"]], "Simplex method: the Nelder-Mead": [[53, "simplex-method-the-nelder-mead"]], "Global optimizers": [[53, "global-optimizers"]], "Brute force: a grid search": [[53, "brute-force-a-grid-search"]], "Practical guide to optimization with SciPy": [[53, "practical-guide-to-optimization-with-scipy"]], "Choosing a method": [[53, "choosing-a-method"]], "Making your optimizer faster": [[53, "making-your-optimizer-faster"]], "Computing gradients": [[53, "computing-gradients"]], "Synthetic exercices": [[53, "synthetic-exercices"]], "Exercice: A simple (?) quadratic function": [[53, null]], "Exercice: A locally flat minimum": [[53, null]], "Special case: non-linear least-squares": [[53, "special-case-non-linear-least-squares"]], "Minimizing the norm of a vector function": [[53, "minimizing-the-norm-of-a-vector-function"]], "Box bounds": [[53, "box-bounds"]], "General constraints": [[53, "general-constraints"]], "Lagrange multipliers": [[53, null]], "Optimizing code": [[54, "optimizing-code"]], "Donald Knuth": [[54, null]], "Optimization workflow": [[54, "optimization-workflow"]], "Profiling Python code": [[54, "profiling-python-code"]], "No optimization without measuring!": [[54, null]], "Timeit": [[54, "timeit"]], "Profiler": [[54, "profiler"]], "Profiling outside of IPython, running ``cProfile``": [[54, null]], "Line-profiler": [[54, "id1"]], "Making code go faster": [[54, "making-code-go-faster"]], "Algorithmic optimization": [[54, "algorithmic-optimization"]], "Example of the SVD": [[54, "example-of-the-svd"]], "Computational linear algebra": [[54, null]], "Writing faster numerical code": [[54, "writing-faster-numerical-code"]], "Additional Links": [[54, "additional-links"]], "Block Compressed Row Format (BSR)": [[55, "block-compressed-row-format-bsr"]], "Examples": [[55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [63, "examples"], [65, "examples"]], "Coordinate Format (COO)": [[56, "coordinate-format-coo"]], "Compressed Sparse Column Format (CSC)": [[57, "compressed-sparse-column-format-csc"]], "Compressed Sparse Row Format (CSR)": [[58, "compressed-sparse-row-format-csr"]], "Diagonal Format (DIA)": [[59, "diagonal-format-dia"]], "Dictionary of Keys Format (DOK)": [[60, "dictionary-of-keys-format-dok"]], "Sparse Arrays in SciPy": [[61, "sparse-arrays-in-scipy"]], "Why Sparse Matrices?": [[62, "why-sparse-matrices"]], "Sparse Matrices vs. Sparse Matrix Storage Schemes": [[62, "sparse-matrices-vs-sparse-matrix-storage-schemes"]], "Typical Applications": [[62, "typical-applications"]], "Sparsity Structure Visualization": [[62, "sparsity-structure-visualization"]], "List of Lists Format (LIL)": [[63, "list-of-lists-format-lil"]], "Other Interesting Packages": [[64, "other-interesting-packages"]], "Linear System Solvers": [[65, "linear-system-solvers"]], "Sparse Direct Solvers": [[65, "sparse-direct-solvers"]], "Iterative Solvers": [[65, "iterative-solvers"]], "Common Parameters": [[65, "common-parameters"]], "LinearOperator Class": [[65, "linearoperator-class"]], "A Few Notes on Preconditioning": [[65, "a-few-notes-on-preconditioning"]], "Eigenvalue Problem Solvers": [[65, "eigenvalue-problem-solvers"]], "The eigen module": [[65, "the-eigen-module"]], "Examples for the contribution guide": [[67, "examples-for-the-contribution-guide"]], "A simple example": [[68, "a-simple-example"]], "How to contribute": [[70, "how-to-contribute"]], "Foreword": [[70, null]], "How to contribute ?": [[70, "id1"]], "Using GitHub": [[70, "using-github"]], "Keeping it concise: collapsing paragraphs": [[70, "keeping-it-concise-collapsing-paragraphs"]], "Figures and code examples": [[70, "figures-and-code-examples"]], "Using Markup": [[70, "using-markup"]], "Example:": [[70, null]], "Linking to package documentations": [[70, "linking-to-package-documentations"]], "Chapter, section, subsection, paragraph": [[70, "chapter-section-subsection-paragraph"]], "Admonitions": [[70, "admonitions"]], "Clearing floats": [[70, "clearing-floats"]], "References": [[70, "references"]], "Getting help and finding documentation": [[74, "getting-help-and-finding-documentation"]], "Getting started with Python for science": [[75, "getting-started-with-python-for-science"]], "Python scientific computing ecosystem": [[76, "python-scientific-computing-ecosystem"]], "Why Python?": [[76, "why-python"]], "The scientist\u2019s needs": [[76, "the-scientist-s-needs"]], "Python\u2019s strengths": [[76, "python-s-strengths"]], "How does Python compare to other solutions?": [[76, "how-does-python-compare-to-other-solutions"]], "Compiled languages: C, C++, Fortran\u2026": [[76, "compiled-languages-c-c-fortran"]], "Matlab scripting language": [[76, "matlab-scripting-language"]], "Julia": [[76, "julia"]], "Other scripting languages: Scilab, Octave, R, IDL, etc.": [[76, "other-scripting-languages-scilab-octave-r-idl-etc"]], "Python": [[76, "python"]], "The scientific Python ecosystem": [[76, "the-scientific-python-ecosystem"]], "Before starting: Installing a working environment": [[76, "before-starting-installing-a-working-environment"]], "The workflow: interactive environments and text editors": [[76, "the-workflow-interactive-environments-and-text-editors"]], "Interactive work": [[76, "interactive-work"]], "Under the notebook": [[76, null]], "Elaboration of the work in an editor": [[76, "elaboration-of-the-work-in-an-editor"]], "From a script to functions": [[76, null]], "IPython and Jupyter Tips and Tricks": [[76, "ipython-and-jupyter-tips-and-tricks"]], "Getting help": [[76, null]], "Basic types": [[77, "basic-types"]], "Numerical types": [[77, "numerical-types"]], "Containers": [[77, "containers"]], "Lists": [[77, "lists"]], "Methods and Object-Oriented Programming": [[77, null]], "Discovering methods:": [[77, null]], "Strings": [[77, "strings"]], "Dictionaries": [[77, "dictionaries"]], "More container types": [[77, "more-container-types"]], "Assignment operator": [[77, "assignment-operator"]], "Control Flow": [[78, "control-flow"]], "if/elif/else": [[78, "if-elif-else"]], "for/range": [[78, "for-range"]], "while/break/continue": [[78, "while-break-continue"]], "Conditional Expressions": [[78, "conditional-expressions"]], "Advanced iteration": [[78, "advanced-iteration"]], "Iterate over any sequence": [[78, "iterate-over-any-sequence"]], "Keeping track of enumeration number": [[78, "keeping-track-of-enumeration-number"]], "Looping over a dictionary": [[78, "looping-over-a-dictionary"]], "List Comprehensions": [[78, "list-comprehensions"]], "Exception handling in Python": [[79, "exception-handling-in-python"]], "Exceptions": [[79, "exceptions"]], "try/except": [[79, "try-except"]], "try/finally": [[79, "try-finally"]], "Easier to ask for forgiveness than for permission": [[79, "easier-to-ask-for-forgiveness-than-for-permission"]], "Raising exceptions": [[79, "raising-exceptions"]], "First steps": [[80, "first-steps"]], "Defining functions": [[81, "defining-functions"]], "Function definition": [[81, "function-definition"]], "Return statement": [[81, "return-statement"]], "Parameters": [[81, "parameters"]], "Passing by value": [[81, "passing-by-value"]], "Global variables": [[81, "global-variables"]], "Variable number of parameters": [[81, "variable-number-of-parameters"]], "Docstrings": [[81, "docstrings"]], "Functions are objects": [[81, "functions-are-objects"]], "Methods": [[81, "methods"]], "Exercise: Fibonacci sequence": [[81, null]], "Exercise: Quicksort": [[81, null]], "Input and Output": [[82, "input-and-output"]], "Iterating over a file": [[82, "iterating-over-a-file"]], "File modes": [[82, "file-modes"]], "Object-oriented programming (OOP)": [[83, "object-oriented-programming-oop"]], "The Python language": [[84, "the-python-language"]], "Python for scientific computing": [[84, null]], "Reusing code: scripts and modules": [[85, "reusing-code-scripts-and-modules"]], "Scripts": [[85, "scripts"]], "Importing objects from modules": [[85, "importing-objects-from-modules"]], "Creating modules": [[85, "creating-modules"]], "\u2018__main__\u2019 and module loading": [[85, "main-and-module-loading"]], "Scripts or modules? How to organize your code": [[85, "scripts-or-modules-how-to-organize-your-code"]], "How modules are found and imported": [[85, "how-modules-are-found-and-imported"]], "Packages": [[85, "packages"]], "Good practices": [[85, "good-practices"], [171, null]], "Quick read": [[85, null], [157, null], [175, null]], "Standard Library": [[86, "standard-library"]], "os module: operating system functionality": [[86, "os-module-operating-system-functionality"]], "Directory and file manipulation": [[86, "directory-and-file-manipulation"]], "os.path: path manipulations": [[86, "os-path-path-manipulations"]], "Running an external command": [[86, "running-an-external-command"]], "Walking a directory": [[86, "walking-a-directory"]], "Environment variables:": [[86, "environment-variables"]], "shutil: high-level file operations": [[86, "shutil-high-level-file-operations"]], "glob: Pattern matching on files": [[86, "glob-pattern-matching-on-files"]], "sys module: system-specific information": [[86, "sys-module-system-specific-information"]], "pickle: easy persistence": [[86, "pickle-easy-persistence"]], "Code for the chapter\u2019s exercises": [[87, "code-for-the-chapter-s-exercises"], [99, "code-for-the-chapter-s-exercises"], [157, "code-for-the-chapter-s-exercises"]], "Exercise 1": [[88, "exercise-1"]], "Exercise 2": [[90, "exercise-2"]], "Exercise 3": [[91, "exercise-3"]], "Exercise 4": [[92, "exercise-4"]], "Exercise 5": [[93, "exercise-5"]], "Exercise 6": [[94, "exercise-6"]], "Exercise 7": [[95, "exercise-7"]], "Exercise 8": [[96, "exercise-8"]], "Exercise 9": [[97, "exercise-9"]], "Code samples for Matplotlib": [[99, "code-samples-for-matplotlib"], [157, "code-samples-for-matplotlib"]], "Example demoing choices for an option": [[99, "example-demoing-choices-for-an-option"], [100, "example-demoing-choices-for-an-option"], [157, "example-demoing-choices-for-an-option"]], "Code generating the summary figures with a title": [[99, "code-generating-the-summary-figures-with-a-title"], [141, "code-generating-the-summary-figures-with-a-title"], [157, "code-generating-the-summary-figures-with-a-title"]], "Aliased versus anti-aliased": [[101, "aliased-versus-anti-aliased"], [103, "aliased-versus-anti-aliased"]], "Alpha: transparency": [[102, "alpha-transparency"]], "The colors matplotlib line plots": [[104, "the-colors-matplotlib-line-plots"]], "Colormaps": [[105, "colormaps"], [157, "colormaps"]], "Dash capstyle": [[106, "dash-capstyle"]], "Dash join style": [[107, "dash-join-style"]], "Linestyles": [[108, "linestyles"]], "Linewidth": [[109, "linewidth"]], "Markers": [[110, "markers"], [157, "markers"]], "Marker edge color": [[111, "marker-edge-color"]], "Marker edge width": [[112, "marker-edge-width"]], "Marker face color": [[113, "marker-face-color"]], "Marker size": [[114, "marker-size"]], "Solid cap style": [[115, "solid-cap-style"]], "Solid joint style": [[116, "solid-joint-style"]], "Locators for tick on axis": [[117, "locators-for-tick-on-axis"]], "Simple axes example": [[119, "simple-axes-example"]], "Axes": [[120, "axes"], [157, "axes"]], "A simple plotting example": [[121, "a-simple-plotting-example"]], "Bar plots": [[122, "bar-plots"]], "Displaying the contours of a function": [[123, "displaying-the-contours-of-a-function"]], "A simple, good-looking plot": [[124, "a-simple-good-looking-plot"]], "Grid": [[125, "grid"]], "GridSpec": [[126, "gridspec"]], "Imshow elaborate": [[127, "imshow-elaborate"]], "Subplots": [[128, "subplots"], [157, "subplots"]], "Pie chart": [[129, "pie-chart"]], "Plot and filled plots": [[130, "plot-and-filled-plots"]], "3D plotting": [[131, "d-plotting"], [132, "d-plotting"]], "Plotting in polar coordinates": [[133, "plotting-in-polar-coordinates"]], "Plotting a vector field: quiver": [[134, "plotting-a-vector-field-quiver"]], "Plotting a scatter of points": [[135, "plotting-a-scatter-of-points"]], "Subplot grid": [[136, "subplot-grid"]], "Horizontal arrangement of subplots": [[137, "horizontal-arrangement-of-subplots"]], "Subplot plot arrangement vertical": [[138, "subplot-plot-arrangement-vertical"]], "Demo text printing": [[139, "demo-text-printing"]], "A example of plotting not quite right": [[140, "a-example-of-plotting-not-quite-right"]], "Bar plot advanced": [[142, "bar-plot-advanced"]], "Boxplot with matplotlib": [[143, "boxplot-with-matplotlib"]], "Display the contours of a function": [[144, "display-the-contours-of-a-function"]], "Grid elaborate": [[145, "grid-elaborate"]], "Imshow demo": [[146, "imshow-demo"]], "Multiple plots vignette": [[147, "multiple-plots-vignette"]], "Pie chart vignette": [[148, "pie-chart-vignette"]], "3D plotting vignette": [[149, "d-plotting-vignette"]], "Plot example vignette": [[150, "plot-example-vignette"]], "Plotting in polar, decorated": [[151, "plotting-in-polar-decorated"]], "Plotting quiver decorated": [[152, "plotting-quiver-decorated"]], "Plot scatter decorated": [[153, "plot-scatter-decorated"]], "Text printing decorated": [[154, "text-printing-decorated"]], "Matplotlib: plotting": [[157, "matplotlib-plotting"]], "Thanks": [[157, null]], "IPython, Jupyter, and matplotlib modes": [[157, "ipython-jupyter-and-matplotlib-modes"]], "pyplot": [[157, "pyplot"]], "Simple plot": [[157, "simple-plot"]], "Plotting with default settings": [[157, "plotting-with-default-settings"]], "Instantiating defaults": [[157, "instantiating-defaults"]], "Changing colors and line widths": [[157, "changing-colors-and-line-widths"]], "Setting limits": [[157, "setting-limits"]], "Setting ticks": [[157, "setting-ticks"]], "Setting tick labels": [[157, "setting-tick-labels"]], "Moving spines": [[157, "moving-spines"]], "Adding a legend": [[157, "adding-a-legend"]], "Annotate some points": [[157, "annotate-some-points"]], "Devil is in the details": [[157, "devil-is-in-the-details"]], "Figures, Subplots, Axes and Ticks": [[157, "figures-subplots-axes-and-ticks"]], "Figures": [[157, "figures"]], "Ticks": [[157, "ticks"]], "Tick Locators": [[157, "tick-locators"]], "Other Types of Plots: examples and exercises": [[157, "other-types-of-plots-examples-and-exercises"]], "Regular Plots": [[157, "regular-plots"]], "Scatter Plots": [[157, "scatter-plots"]], "Bar Plots": [[157, "bar-plots"]], "Contour Plots": [[157, "contour-plots"]], "Imshow": [[157, "imshow"]], "Pie Charts": [[157, "pie-charts"]], "Quiver Plots": [[157, "quiver-plots"]], "Grids": [[157, "grids"]], "Multi Plots": [[157, "multi-plots"]], "Polar Axis": [[157, "polar-axis"]], "3D Plots": [[157, "d-plots"]], "Text": [[157, "text"]], "Beyond this tutorial": [[157, "beyond-this-tutorial"]], "Tutorials": [[157, "tutorials"]], "Matplotlib documentation": [[157, "matplotlib-documentation"]], "Code documentation": [[157, "code-documentation"]], "Galleries": [[157, "galleries"]], "Mailing lists": [[157, "mailing-lists"]], "Quick references": [[157, "quick-references"]], "Line properties": [[157, "line-properties"]], "Line styles": [[157, "line-styles"]], "Advanced operations": [[158, "advanced-operations"]], "Section contents": [[158, "section-contents"], [159, "section-contents"], [171, "section-contents"], [175, "section-contents"]], "Polynomials": [[158, "polynomials"]], "More polynomials (with more bases)": [[158, "more-polynomials-with-more-bases"]], "Loading data files": [[158, "loading-data-files"]], "Text files": [[158, "text-files"]], "Reminder: Navigating the filesystem with IPython": [[158, null]], "Images": [[158, "images"]], "NumPy\u2019s own format": [[158, "numpy-s-own-format"]], "Well-known (& more obscure) file formats": [[158, "well-known-more-obscure-file-formats"]], "Exercise: Text data files": [[158, null]], "NumPy internals": [[158, null]], "The NumPy array object": [[159, "the-numpy-array-object"]], "What are NumPy and NumPy arrays?": [[159, "what-are-numpy-and-numpy-arrays"]], "NumPy arrays": [[159, "numpy-arrays"]], "NumPy Reference documentation": [[159, "numpy-reference-documentation"]], "Import conventions": [[159, "import-conventions"]], "Creating arrays": [[159, "creating-arrays"]], "Manual construction of arrays": [[159, "manual-construction-of-arrays"]], "Exercise: Simple arrays": [[159, null]], "Functions for creating arrays": [[159, "functions-for-creating-arrays"]], "Exercise: Creating arrays using functions": [[159, null]], "Basic data types": [[159, "basic-data-types"]], "Basic visualization": [[159, "basic-visualization"]], "Exercise: Simple visualizations": [[159, null]], "Indexing and slicing": [[159, "indexing-and-slicing"]], "Exercise: Indexing and slicing": [[159, null]], "Exercise: Array creation": [[159, null]], "Exercise: Tiling for array creation": [[159, null]], "Copies and views": [[159, "copies-and-views"]], "Worked example: Prime number sieve": [[159, null]], "Fancy indexing": [[159, "fancy-indexing"]], "Using boolean masks": [[159, "using-boolean-masks"]], "Indexing with an array of integers": [[159, "indexing-with-an-array-of-integers"]], "Exercise: Fancy indexing": [[159, null]], "Full code examples for the numpy chapter": [[160, "full-code-examples-for-the-numpy-chapter"], [173, "full-code-examples-for-the-numpy-chapter"]], "1D plotting": [[161, "d-plotting"]], "2D plotting": [[162, "d-plotting"]], "Fitting in Chebyshev basis": [[163, "fitting-in-chebyshev-basis"]], "Distances exercise": [[164, "distances-exercise"]], "Reading and writing an elephant": [[165, "reading-and-writing-an-elephant"]], "original figure": [[165, "original-figure"]], "red channel displayed in grey": [[165, "red-channel-displayed-in-grey"]], "lower resolution": [[165, "lower-resolution"]], "Mandelbrot set": [[166, "mandelbrot-set"], [172, "mandelbrot-set"]], "Fitting to polynomial": [[167, "fitting-to-polynomial"]], "Population exercise": [[168, "population-exercise"]], "Random walk exercise": [[169, "random-walk-exercise"]], "More elaborate arrays": [[171, "more-elaborate-arrays"]], "More data types": [[171, "more-data-types"]], "Different data type sizes": [[171, "different-data-type-sizes"]], "Smaller data types": [[171, null]], "Structured data types": [[171, "structured-data-types"]], "maskedarray: dealing with (propagation of) missing data": [[171, "maskedarray-dealing-with-propagation-of-missing-data"]], "Some exercises": [[172, "some-exercises"]], "Array manipulations": [[172, "array-manipulations"]], "Picture manipulation: Framing a Face": [[172, "picture-manipulation-framing-a-face"]], "Data statistics": [[172, "data-statistics"]], "Crude integral approximations": [[172, "crude-integral-approximations"]], "Markov chain": [[172, "markov-chain"]], "NumPy: creating and manipulating numerical data": [[174, "numpy-creating-and-manipulating-numerical-data"]], "Numerical operations on arrays": [[175, "numerical-operations-on-arrays"]], "Elementwise operations": [[175, "elementwise-operations"]], "Basic operations": [[175, "basic-operations"]], "Exercise: Elementwise operations": [[175, null]], "Other operations": [[175, "other-operations"]], "Exercise other operations": [[175, null]], "Basic reductions": [[175, "basic-reductions"]], "Computing sums": [[175, "computing-sums"]], "Other reductions": [[175, "other-reductions"]], "Exercise: Reductions": [[175, null]], "Worked Example: diffusion using a random walk algorithm": [[175, null]], "Worked Example: Broadcasting": [[175, null]], "Array shape manipulation": [[175, "array-shape-manipulation"]], "Flattening": [[175, "flattening"]], "Reshaping": [[175, "reshaping"]], "Adding a dimension": [[175, "adding-a-dimension"]], "Dimension shuffling": [[175, "dimension-shuffling"]], "Resizing": [[175, "resizing"]], "Exercise: Shape manipulations": [[175, null]], "Sorting data": [[175, "sorting-data"]], "Exercise: Sorting": [[175, null]], "Full code examples for the SciPy chapter": [[176, "full-code-examples-for-the-scipy-chapter"], [202, "full-code-examples-for-the-scipy-chapter"]], "Solutions of the exercises for SciPy": [[176, "solutions-of-the-exercises-for-scipy"], [195, "solutions-of-the-exercises-for-scipy"], [202, "solutions-of-the-exercises-for-scipy"]], "Optimization of a two-parameter function": [[177, "optimization-of-a-two-parameter-function"]], "A 2D image plot of the function": [[177, "a-2d-image-plot-of-the-function"]], "A 3D surface plot of the function": [[177, "a-3d-surface-plot-of-the-function"]], "Find minima": [[177, "find-minima"], [188, "find-minima"]], "Demo connected components": [[178, "demo-connected-components"]], "Detrending a signal": [[180, "detrending-a-signal"]], "Plotting and manipulating FFTs for filtering": [[181, "plotting-and-manipulating-ffts-for-filtering"]], "Generate the signal": [[181, "generate-the-signal"]], "Compute and plot the power": [[181, "compute-and-plot-the-power"]], "Remove all the high frequencies": [[181, "remove-all-the-high-frequencies"]], "Plot filtering on images": [[182, "plot-filtering-on-images"]], "Plot geometrical transformations on images": [[183, "plot-geometrical-transformations-on-images"]], "A demo of 1D interpolation": [[184, "a-demo-of-1d-interpolation"]], "Demo mathematical morphology": [[185, "demo-mathematical-morphology"]], "Normal distribution: histogram and PDF": [[186, "normal-distribution-histogram-and-pdf"]], "Finding the minimum of a smooth function": [[187, "finding-the-minimum-of-a-smooth-function"]], "Minima and roots of a function": [[188, "minima-and-roots-of-a-function"]], "Define the function": [[188, "define-the-function"]], "Root finding": [[188, "root-finding"]], "Plot function, minima, and roots": [[188, "plot-function-minima-and-roots"]], "Resample a signal with scipy.signal.resample": [[189, "resample-a-signal-with-scipy-signal-resample"]], "Integrate the Damped spring-mass oscillator": [[190, "integrate-the-damped-spring-mass-oscillator"]], "Integrating a simple ODE": [[191, "integrating-a-simple-ode"]], "Spectrogram, power spectral density": [[192, "spectrogram-power-spectral-density"]], "Generate a chirp signal": [[192, "generate-a-chirp-signal"]], "Compute and plot the spectrogram": [[192, "compute-and-plot-the-spectrogram"]], "Compute and plot the power spectral density (PSD)": [[192, "compute-and-plot-the-power-spectral-density-psd"]], "Comparing 2 sets of samples from Gaussians": [[193, "comparing-2-sets-of-samples-from-gaussians"]], "Curve fitting: temperature as a function of month of the year": [[196, "curve-fitting-temperature-as-a-function-of-month-of-the-year"]], "The data": [[196, "the-data"]], "Fitting it to a periodic function": [[196, "fitting-it-to-a-periodic-function"]], "Plotting the fit": [[196, "plotting-the-fit"]], "Image denoising by FFT": [[197, "image-denoising-by-fft"]], "Read and plot the image": [[197, "read-and-plot-the-image"]], "Compute the 2d FFT of the input image": [[197, "compute-the-2d-fft-of-the-input-image"]], "Filter in FFT": [[197, "filter-in-fft"]], "Reconstruct the final image": [[197, "reconstruct-the-final-image"]], "Easier and better: scipy.ndimage.gaussian_filter()": [[197, "easier-and-better-scipy-ndimage-gaussian-filter"]], "Simple image blur by convolution with a Gaussian kernel": [[198, "simple-image-blur-by-convolution-with-a-gaussian-kernel"]], "The original image": [[198, "the-original-image"]], "Prepare an Gaussian convolution kernel": [[198, "prepare-an-gaussian-convolution-kernel"]], "Implement convolution via FFT": [[198, "implement-convolution-via-fft"]], "A function to do it: scipy.signal.fftconvolve()": [[198, "a-function-to-do-it-scipy-signal-fftconvolve"]], "Crude periodicity finding": [[199, "crude-periodicity-finding"]], "Load the data": [[199, "load-the-data"]], "Plot the data": [[199, "plot-the-data"]], "Plot its periods": [[199, "plot-its-periods"]], "Geometrical transformations on images": [[201, "geometrical-transformations-on-images"], [202, "geometrical-transformations-on-images"]], "Connected components and measurements on images": [[201, "connected-components-and-measurements-on-images"], [202, "connected-components-and-measurements-on-images"]], "SciPy : high-level scientific computing": [[202, "scipy-high-level-scientific-computing"]], "Scipy": [[202, null]], "File input/output: scipy.io": [[202, "file-input-output-scipy-io"]], "Special functions: scipy.special": [[202, "special-functions-scipy-special"]], "Linear algebra operations: scipy.linalg": [[202, "linear-algebra-operations-scipy-linalg"]], "Interpolation: scipy.interpolate": [[202, "interpolation-scipy-interpolate"]], "Optimization and fit: scipy.optimize": [[202, "optimization-and-fit-scipy-optimize"]], "Root Finding": [[202, "root-finding"]], "Exercise: Curve fitting of temperature data": [[202, null]], "Optimization": [[202, "optimization"]], "Maximization?": [[202, null]], "Exercise: 2-D minimization": [[202, null]], "Statistics and random numbers: scipy.stats": [[202, "statistics-and-random-numbers-scipy-stats"]], "Statistical Distributions": [[202, "statistical-distributions"]], "Distribution objects and frozen distributions": [[202, null]], "Exercise: Probability distributions": [[202, null]], "Sample Statistics and Hypothesis Tests": [[202, "sample-statistics-and-hypothesis-tests"]], "Numerical integration: scipy.integrate": [[202, "numerical-integration-scipy-integrate"]], "Quadrature": [[202, "quadrature"]], "Initial Value Problems": [[202, "initial-value-problems"]], "Fast Fourier transforms: scipy.fft": [[202, "fast-fourier-transforms-scipy-fft"]], "numpy.fft": [[202, null]], "Exercise: Denoise moon landing image": [[202, null]], "Signal processing: scipy.signal": [[202, "signal-processing-scipy-signal"]], "Image manipulation: scipy.ndimage": [[202, "image-manipulation-scipy-ndimage"]], "Summary exercises on scientific computing": [[202, "summary-exercises-on-scientific-computing"]], "Solutions": [[203, "solutions"]], "The Pi Wallis Solution": [[203, "the-pi-wallis-solution"]], "The Quicksort Solution": [[203, "the-quicksort-solution"]], "Fibonacci sequence": [[203, "fibonacci-sequence"]], "The Directory Listing Solution": [[203, "the-directory-listing-solution"]], "The Data File I/O Solution": [[203, "the-data-file-i-o-solution"]], "The PYTHONPATH Search Solution": [[203, "the-pythonpath-search-solution"]], "Example of solution for the image processing exercise: unmolten grains in glass": [[204, "example-of-solution-for-the-image-processing-exercise-unmolten-grains-in-glass"]], "Examples for the summary excercices": [[205, "examples-for-the-summary-excercices"]], "Cumulative wind speed prediction": [[206, "cumulative-wind-speed-prediction"]], "The Gumbell distribution": [[207, "the-gumbell-distribution"]], "The lidar system, data (2 of 2 datasets)": [[208, "the-lidar-system-data-2-of-2-datasets"]], "The lidar system, data and fit (2 of 2 datasets)": [[209, "the-lidar-system-data-and-fit-2-of-2-datasets"]], "The lidar system, data (1 of 2 datasets)": [[210, "the-lidar-system-data-1-of-2-datasets"]], "The lidar system, data and fit (1 of 2 datasets)": [[211, "the-lidar-system-data-and-fit-1-of-2-datasets"]], "The Gumbell distribution, results": [[212, "the-gumbell-distribution-results"]], "Image processing application: counting bubbles and unmolten grains": [[214, "image-processing-application-counting-bubbles-and-unmolten-grains"]], "Statement of the problem": [[214, "statement-of-the-problem"]], "Non linear least squares curve fitting: application to point extraction in topographical lidar data": [[215, "non-linear-least-squares-curve-fitting-application-to-point-extraction-in-topographical-lidar-data"]], "Loading and visualization": [[215, "loading-and-visualization"]], "Fitting a waveform with a simple Gaussian model": [[215, "fitting-a-waveform-with-a-simple-gaussian-model"]], "Model": [[215, "model"]], "Initial solution": [[215, "initial-solution"]], "Fit": [[215, "fit"]], "Going further": [[215, "going-further"]], "Maximum wind speed prediction at the Sprog\u00f8 station": [[216, "maximum-wind-speed-prediction-at-the-sprogo-station"]], "Statistical approach": [[216, "statistical-approach"]], "Computing the cumulative probabilities": [[216, "computing-the-cumulative-probabilities"]], "Prediction with UnivariateSpline": [[216, "prediction-with-univariatespline"]], "Exercise with the Gumbell distribution": [[216, "exercise-with-the-gumbell-distribution"]], "Packages and applications": [[217, "packages-and-applications"]], "Examples for the scikit-image chapter": [[218, "examples-for-the-scikit-image-chapter"], [231, "examples-for-the-scikit-image-chapter"]], "Segmentation contours": [[219, "segmentation-contours"]], "Displaying a simple image": [[220, "displaying-a-simple-image"]], "Integers can overflow": [[221, "integers-can-overflow"]], "Creating an image": [[222, "creating-an-image"]], "Equalizing the histogram of an image": [[223, "equalizing-the-histogram-of-an-image"]], "Affine transform": [[224, "affine-transform"]], "Various denoising filters": [[225, "various-denoising-filters"]], "Labelling connected components of an image": [[226, "labelling-connected-components-of-an-image"]], "Watershed and random walker for segmentation": [[227, "watershed-and-random-walker-for-segmentation"]], "Computing horizontal gradients with the Sobel filter": [[228, "computing-horizontal-gradients-with-the-sobel-filter"]], "Otsu thresholding": [[229, "otsu-thresholding"]], "scikit-image: image processing": [[231, "scikit-image-image-processing"]], "Introduction and concepts": [[231, "introduction-and-concepts"]], "scikit-image and the scientific Python ecosystem": [[231, "scikit-image-and-the-scientific-python-ecosystem"]], "What is included in scikit-image": [[231, "what-is-included-in-scikit-image"]], "Importing": [[231, "importing"]], "Example data": [[231, "example-data"]], "Input/output, data types and colorspaces": [[231, "input-output-data-types-and-colorspaces"]], "Colorspaces": [[231, "colorspaces"]], "3D images": [[231, null]], "Image preprocessing / enhancement": [[231, "image-preprocessing-enhancement"]], "Local filters": [[231, "local-filters"]], "Non-local filters": [[231, "non-local-filters"]], "Grayscale mathematical morphology": [[231, null]], "Example of filters comparison: image denoising": [[231, null]], "Image segmentation": [[231, "image-segmentation"]], "Binary segmentation: foreground + background": [[231, "binary-segmentation-foreground-background"]], "Histogram-based method: Otsu thresholding": [[231, "histogram-based-method-otsu-thresholding"]], "Earlier scikit-image versions": [[231, null]], "Labeling connected components of a discrete image": [[231, "labeling-connected-components-of-a-discrete-image"]], "Marker based methods": [[231, "marker-based-methods"]], "Random walker segmentation": [[231, "random-walker-segmentation"]], "Postprocessing label images": [[231, null]], "Measuring regions\u2019 properties": [[231, "measuring-regions-properties"]], "Exercise (continued)": [[231, null]], "Data visualization and interaction": [[231, "data-visualization-and-interaction"]], "Feature extraction for computer vision": [[231, "feature-extraction-for-computer-vision"]], "Examples for the scikit-learn chapter": [[232, "examples-for-the-scikit-learn-chapter"], [251, "examples-for-the-scikit-learn-chapter"]], "Tutorial Diagrams": [[233, "tutorial-diagrams"]], "Bias and variance of polynomial fit": [[234, "bias-and-variance-of-polynomial-fit"]], "Learning curves": [[234, "learning-curves"]], "A simple regression analysis on the California housing data": [[235, "a-simple-regression-analysis-on-the-california-housing-data"]], "Compare classifiers on the digits data": [[236, "compare-classifiers-on-the-digits-data"]], "Simple visualization and classification of the digits dataset": [[237, "simple-visualization-and-classification-of-the-digits-dataset"]], "Plot the data: images of digits": [[237, "plot-the-data-images-of-digits"]], "Plot a projection on the 2 first principal axis": [[237, "plot-a-projection-on-the-2-first-principal-axis"]], "Classify with Gaussian naive Bayes": [[237, "classify-with-gaussian-naive-bayes"]], "Quantify the performance": [[237, "quantify-the-performance"]], "The eigenfaces example: chaining PCA and SVMs": [[238, "the-eigenfaces-example-chaining-pca-and-svms"]], "Preprocessing: Principal Component Analysis": [[238, "preprocessing-principal-component-analysis"]], "Doing the Learning: Support Vector Machines": [[238, "doing-the-learning-support-vector-machines"]], "Pipelining": [[238, "pipelining"]], "A Note on Facial Recognition": [[238, "a-note-on-facial-recognition"]], "Nearest-neighbor prediction on iris": [[239, "nearest-neighbor-prediction-on-iris"]], "Plot 2D views of the iris dataset": [[240, "plot-2d-views-of-the-iris-dataset"]], "Use the RidgeCV and LassoCV to set the regularization parameter": [[241, "use-the-ridgecv-and-lassocv-to-set-the-regularization-parameter"]], "A simple linear regression": [[242, "a-simple-linear-regression"], [265, "a-simple-linear-regression"]], "Measuring Decision Tree performance": [[243, "measuring-decision-tree-performance"]], "Demo PCA in 2D": [[244, "demo-pca-in-2d"]], "Plot fitting a 9th order polynomial": [[245, "plot-fitting-a-9th-order-polynomial"]], "Simple picture of the formal problem of machine learning": [[246, "simple-picture-of-the-formal-problem-of-machine-learning"]], "Example of linear and non-linear models": [[247, "example-of-linear-and-non-linear-models"]], "tSNE to visualize digits": [[248, "tsne-to-visualize-digits"]], "Plot variance and regularization in linear models": [[249, "plot-variance-and-regularization-in-linear-models"]], "scikit-learn: machine learning in Python": [[251, "scikit-learn-machine-learning-in-python"]], "Acknowledgements": [[251, null]], "Introduction: problem settings": [[251, "introduction-problem-settings"]], "What is machine learning?": [[251, "what-is-machine-learning"]], "Data in scikit-learn": [[251, "data-in-scikit-learn"]], "The data matrix": [[251, "the-data-matrix"]], "A Simple Example: the Iris Dataset": [[251, "a-simple-example-the-iris-dataset"]], "The application problem": [[251, "the-application-problem"]], "Quick Question:": [[251, null]], "Loading the Iris Data with Scikit-learn": [[251, "loading-the-iris-data-with-scikit-learn"]], "Exercise:": [[251, null]], "Basic principles of machine learning with scikit-learn": [[251, "basic-principles-of-machine-learning-with-scikit-learn"]], "Introducing the scikit-learn estimator object": [[251, "introducing-the-scikit-learn-estimator-object"]], "Fitting on data": [[251, "fitting-on-data"]], "Supervised Learning: Classification and regression": [[251, "supervised-learning-classification-and-regression"]], "A recap on Scikit-learn\u2019s estimator interface": [[251, "a-recap-on-scikit-learn-s-estimator-interface"]], "Regularization: what it is and why it is necessary": [[251, "regularization-what-it-is-and-why-it-is-necessary"]], "Preferring simpler models": [[251, "preferring-simpler-models"]], "Simple versus complex models for classification": [[251, "simple-versus-complex-models-for-classification"]], "Supervised Learning: Classification of Handwritten Digits": [[251, "supervised-learning-classification-of-handwritten-digits"]], "The nature of the data": [[251, "the-nature-of-the-data"]], "Code and notebook": [[251, null], [251, null], [251, null]], "Visualizing the Data on its principal components": [[251, "visualizing-the-data-on-its-principal-components"]], "Question": [[251, null], [251, null], [251, null]], "Gaussian Naive Bayes Classification": [[251, "gaussian-naive-bayes-classification"]], "Old scikit-learn versions": [[251, null]], "Quantitative Measurement of Performance": [[251, "quantitative-measurement-of-performance"]], "Supervised Learning: Regression of Housing Data": [[251, "supervised-learning-regression-of-housing-data"]], "A quick look at the data": [[251, "a-quick-look-at-the-data"]], "Predicting Home Prices: a Simple Linear Regression": [[251, "predicting-home-prices-a-simple-linear-regression"]], "Exercise: Gradient Boosting Tree Regression": [[251, null]], "Measuring prediction performance": [[251, "measuring-prediction-performance"]], "A quick test on the K-neighbors classifier": [[251, "a-quick-test-on-the-k-neighbors-classifier"]], "A correct approach: Using a validation set": [[251, "a-correct-approach-using-a-validation-set"]], "Model Selection via Validation": [[251, "model-selection-via-validation"]], "Cross-validation": [[251, "cross-validation"]], "Hyperparameter optimization with cross-validation": [[251, "hyperparameter-optimization-with-cross-validation"]], "Basic Hyperparameter Optimization": [[251, "basic-hyperparameter-optimization"]], "Automatically Performing Grid Search": [[251, "automatically-performing-grid-search"]], "Built-in Hyperparameter Search": [[251, "built-in-hyperparameter-search"]], "Nested cross-validation": [[251, "nested-cross-validation"]], "Unsupervised Learning: Dimensionality Reduction and Visualization": [[251, "unsupervised-learning-dimensionality-reduction-and-visualization"]], "Dimensionality Reduction: PCA": [[251, "dimensionality-reduction-pca"]], "Visualization with a non-linear embedding: tSNE": [[251, "visualization-with-a-non-linear-embedding-tsne"]], "fit_transform": [[251, null]], "Exercise: Other dimension reduction of digits": [[251, null]], "Parameter selection, Validation, and Testing": [[251, "parameter-selection-validation-and-testing"]], "Hyperparameters, Over-fitting, and Under-fitting": [[251, "hyperparameters-over-fitting-and-under-fitting"]], "Bias-variance trade-off: illustration on a simple regression problem": [[251, "bias-variance-trade-off-illustration-on-a-simple-regression-problem"]], "Visualizing the Bias/Variance Tradeoff": [[251, "visualizing-the-bias-variance-tradeoff"]], "Polynomial regression with scikit-learn": [[251, null]], "Validation Curves": [[251, "validation-curves"]], "Learning Curves": [[251, "learning-curves"]], "Questions:": [[251, null]], "Summary on model selection": [[251, "summary-on-model-selection"]], "High Bias": [[251, "high-bias"]], "High Variance": [[251, "high-variance"]], "A last word of caution: separate validation and test set": [[251, "a-last-word-of-caution-separate-validation-and-test-set"]], "Full code for the figures": [[252, "full-code-for-the-figures"], [265, "full-code-for-the-figures"]], "Solutions to this chapter\u2019s exercises": [[252, "solutions-to-this-chapter-s-exercises"], [262, "solutions-to-this-chapter-s-exercises"], [265, "solutions-to-this-chapter-s-exercises"]], "Air fares before and after 9/11": [[253, "air-fares-before-and-after-9-11"]], "Analysis of Iris petal and sepal sizes": [[254, "analysis-of-iris-petal-and-sepal-sizes"]], "Boxplots and paired differences": [[255, "boxplots-and-paired-differences"]], "Plotting simple quantities of a pandas dataframe": [[256, "plotting-simple-quantities-of-a-pandas-dataframe"]], "Simple Regression": [[257, "simple-regression"]], "Multiple Regression": [[258, "multiple-regression"]], "Visualizing factors influencing wages": [[259, "visualizing-factors-influencing-wages"]], "Test for an education/gender interaction in wages": [[260, "test-for-an-education-gender-interaction-in-wages"]], "Relating Gender and IQ": [[263, "relating-gender-and-iq"]], "Statistics in Python": [[265, "statistics-in-python"]], "Contents": [[265, "contents"]], "Data representation and interaction": [[265, "data-representation-and-interaction"]], "Data as a table": [[265, "data-as-a-table"]], "The pandas data-frame": [[265, "the-pandas-data-frame"]], "Creating dataframes: reading data files or converting arrays": [[265, "creating-dataframes-reading-data-files-or-converting-arrays"]], "Separator": [[265, null]], "Manipulating data": [[265, "manipulating-data"]], "Plotting data": [[265, "plotting-data"]], "Two populations": [[265, null]], "Hypothesis testing: comparing two groups": [[265, "hypothesis-testing-comparing-two-groups"]], "Student\u2019s t-test: the simplest statistical test": [[265, "student-s-t-test-the-simplest-statistical-test"]], "One-sample tests: testing the value of a population mean": [[265, "one-sample-tests-testing-the-value-of-a-population-mean"]], "Two-sample t-test: testing for difference across populations": [[265, "two-sample-t-test-testing-for-difference-across-populations"]], "Paired tests: repeated measurements on the same individuals": [[265, "paired-tests-repeated-measurements-on-the-same-individuals"]], "Linear models, multiple factors, and analysis of variance": [[265, "linear-models-multiple-factors-and-analysis-of-variance"]], "\u201cformulas\u201d to specify statistical models in Python": [[265, "formulas-to-specify-statistical-models-in-python"]], "\u201cformulas\u201d for statistics in Python": [[265, null]], "Terminology:": [[265, null]], "Categorical variables: comparing groups or multiple categories": [[265, "categorical-variables-comparing-groups-or-multiple-categories"]], "Tips on specifying model": [[265, null]], "Link to t-tests between different FSIQ and PIQ": [[265, null]], "Multiple Regression: including multiple factors": [[265, "multiple-regression-including-multiple-factors"]], "Post-hoc hypothesis testing: analysis of variance (ANOVA)": [[265, "post-hoc-hypothesis-testing-analysis-of-variance-anova"]], "More visualization: seaborn for statistical exploration": [[265, "more-visualization-seaborn-for-statistical-exploration"]], "Pairplot: scatter matrices": [[265, "pairplot-scatter-matrices"]], "Look and feel and matplotlib settings": [[265, null]], "lmplot: plotting a univariate regression": [[265, "lmplot-plotting-a-univariate-regression"]], "Robust regression": [[265, null]], "Testing for interactions": [[265, "testing-for-interactions"]], "Take home messages": [[265, null]], "Sympy : Symbolic Mathematics in Python": [[266, "sympy-symbolic-mathematics-in-python"]], "Objectives": [[266, null]], "First Steps with SymPy": [[266, "first-steps-with-sympy"]], "Using SymPy as a calculator": [[266, "using-sympy-as-a-calculator"]], "Symbols": [[266, "symbols"]], "Printing": [[266, null]], "Algebraic manipulations": [[266, "algebraic-manipulations"]], "Expand": [[266, "expand"]], "Simplify": [[266, "simplify"]], "Calculus": [[266, "calculus"]], "Limits": [[266, "limits"]], "Differentiation": [[266, "differentiation"]], "Series expansion": [[266, "series-expansion"]], "Integration": [[266, "integration"]], "Equation solving": [[266, "equation-solving"]], "Systems of linear equations": [[266, null]], "Linear Algebra": [[266, "linear-algebra"]], "Matrices": [[266, "matrices"]], "Differential Equations": [[266, "differential-equations"]], "About the Scientific Python Lectures": [[267, "about-the-scientific-python-lectures"]], "Storage Schemes": [[66, "storage-schemes"]], "Common Methods": [[66, "common-methods"]], "Sparse Array Classes": [[66, "sparse-array-classes"]], "Summary of storage schemes.": [[66, "id1"]], "Scientific Python Lectures": [[73, "scientific-python-lectures"]], "One document to learn numerics, science, and data with Python": [[73, "one-document-to-learn-numerics-science-and-data-with-python"]], "Download": [[73, null]]}, "indexentries": {"pep 3118": [[8, "index-0"]], "python enhancement proposals": [[8, "index-0"], [9, "index-0"], [9, "index-1"], [9, "index-2"], [9, "index-3"], [9, "index-4"], [9, "index-5"], [9, "index-6"], [9, "index-7"], [9, "index-8"]], "pep 255": [[9, "index-0"]], "pep 3129": [[9, "index-7"]], "pep 318": [[9, "index-4"], [9, "index-6"]], "pep 342": [[9, "index-1"]], "pep 343": [[9, "index-8"]], "pep 380": [[9, "index-2"]], "pep 380#id13": [[9, "index-3"]], "pep 8": [[9, "index-5"]], "matrix": [[266, "index-3"]], "algebraic": [[266, "index-2"]], "diff": [[266, "index-0"], [266, "index-4"]], "differential": [[266, "index-4"]], "differentiation": [[266, "index-0"]], "dsolve": [[266, "index-4"]], "equations": [[266, "index-2"], [266, "index-4"]], "integration": [[266, "index-1"]], "solve": [[266, "index-2"]]}})