
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "intro/numpy/auto_examples/plot_randomwalk.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_intro_numpy_auto_examples_plot_randomwalk.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_intro_numpy_auto_examples_plot_randomwalk.py:


Random walk exercise
====================

Plot distance as a function of time for a random walk
together with the theoretical result

.. GENERATED FROM PYTHON SOURCE LINES 9-40



.. image-sg:: /intro/numpy/auto_examples/images/sphx_glr_plot_randomwalk_001.png
   :alt: plot randomwalk
   :srcset: /intro/numpy/auto_examples/images/sphx_glr_plot_randomwalk_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt

    # We create 1000 realizations with 200 steps each
    n_stories = 1000
    t_max = 200

    t = np.arange(t_max)
    # Steps can be -1 or 1 (note that randint excludes the upper limit)
    rng = np.random.default_rng()
    steps = 2 * rng.integers(0, 1 + 1, (n_stories, t_max)) - 1

    # The time evolution of the position is obtained by successively
    # summing up individual steps. This is done for each of the
    # realizations, i.e. along axis 1.
    positions = np.cumsum(steps, axis=1)

    # Determine the time evolution of the mean square distance.
    sq_distance = positions**2
    mean_sq_distance = np.mean(sq_distance, axis=0)

    # Plot the distance d from the origin as a function of time and
    # compare with the theoretically expected result where d(t)
    # grows as a square root of time t.
    plt.figure(figsize=(4, 3))
    plt.plot(t, np.sqrt(mean_sq_distance), "g.", t, np.sqrt(t), "y-")
    plt.xlabel(r"$t$")
    plt.ylabel(r"$\sqrt{\langle (\delta x)^2 \rangle}$")
    plt.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.084 seconds)


.. _sphx_glr_download_intro_numpy_auto_examples_plot_randomwalk.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_randomwalk.ipynb <plot_randomwalk.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_randomwalk.py <plot_randomwalk.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
