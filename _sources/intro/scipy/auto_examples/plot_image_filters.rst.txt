
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "intro/scipy/auto_examples/plot_image_filters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_intro_scipy_auto_examples_plot_image_filters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_intro_scipy_auto_examples_plot_image_filters.py:


=========================
Plot filtering on images
=========================

Demo filtering for denoising of images.

.. GENERATED FROM PYTHON SOURCE LINES 8-51



.. image-sg:: /intro/scipy/auto_examples/images/sphx_glr_plot_image_filters_001.png
   :alt: noisy, Gaussian filter, median filter, Wiener filter
   :srcset: /intro/scipy/auto_examples/images/sphx_glr_plot_image_filters_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    # Load some data
    import scipy as sp

    face = sp.datasets.face(gray=True)
    face = face[:512, -512:]  # crop out square on right

    # Apply a variety of filters
    import matplotlib.pyplot as plt

    import numpy as np

    noisy_face = np.copy(face).astype(float)
    rng = np.random.default_rng()
    noisy_face += face.std() * 0.5 * rng.standard_normal(face.shape)
    blurred_face = sp.ndimage.gaussian_filter(noisy_face, sigma=3)
    median_face = sp.ndimage.median_filter(noisy_face, size=5)
    wiener_face = sp.signal.wiener(noisy_face, (5, 5))

    plt.figure(figsize=(12, 3.5))
    plt.subplot(141)
    plt.imshow(noisy_face, cmap=plt.cm.gray)
    plt.axis("off")
    plt.title("noisy")

    plt.subplot(142)
    plt.imshow(blurred_face, cmap=plt.cm.gray)
    plt.axis("off")
    plt.title("Gaussian filter")

    plt.subplot(143)
    plt.imshow(median_face, cmap=plt.cm.gray)
    plt.axis("off")
    plt.title("median filter")

    plt.subplot(144)
    plt.imshow(wiener_face, cmap=plt.cm.gray)
    plt.title("Wiener filter")
    plt.axis("off")

    plt.subplots_adjust(wspace=0.05, left=0.01, bottom=0.01, right=0.99, top=0.99)

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.477 seconds)


.. _sphx_glr_download_intro_scipy_auto_examples_plot_image_filters.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_image_filters.ipynb <plot_image_filters.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_image_filters.py <plot_image_filters.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
