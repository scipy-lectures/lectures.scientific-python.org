
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "packages/scikit-learn/auto_examples/plot_tsne.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_packages_scikit-learn_auto_examples_plot_tsne.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_packages_scikit-learn_auto_examples_plot_tsne.py:


==========================
tSNE to visualize digits
==========================

Here we use :class:`sklearn.manifold.TSNE` to visualize the digits
datasets. Indeed, the digits are vectors in a 8*8 = 64 dimensional space.
We want to project them in 2D for visualization. tSNE is often a good
solution, as it groups and separates data points based on their local
relationship.

.. GENERATED FROM PYTHON SOURCE LINES 15-16

Load the iris data

.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: Python

    from sklearn import datasets

    digits = datasets.load_digits()
    # Take the first 500 data points: it's hard to see 1500 points
    X = digits.data[:500]
    y = digits.target[:500]








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Fit and transform with a TSNE

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: Python

    from sklearn.manifold import TSNE

    tsne = TSNE(n_components=2, random_state=0)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Project the data in 2D

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: Python

    X_2d = tsne.fit_transform(X)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Visualize the data

.. GENERATED FROM PYTHON SOURCE LINES 35-45

.. code-block:: Python

    target_ids = range(len(digits.target_names))

    import matplotlib.pyplot as plt

    plt.figure(figsize=(6, 5))
    colors = "r", "g", "b", "c", "m", "y", "k", "w", "orange", "purple"
    for i, c, label in zip(target_ids, colors, digits.target_names):
        plt.scatter(X_2d[y == i, 0], X_2d[y == i, 1], c=c, label=label)
    plt.legend()
    plt.show()



.. image-sg:: /packages/scikit-learn/auto_examples/images/sphx_glr_plot_tsne_001.png
   :alt: plot tsne
   :srcset: /packages/scikit-learn/auto_examples/images/sphx_glr_plot_tsne_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.185 seconds)


.. _sphx_glr_download_packages_scikit-learn_auto_examples_plot_tsne.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_tsne.ipynb <plot_tsne.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_tsne.py <plot_tsne.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
